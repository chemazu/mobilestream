{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/mobilestreamapp/client/src/Stream.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stream() {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [peerId, setPeerId] = useState(null);\n  const socket = io(\"http://localhost:5000\");\n  const peerRef = useRef();\n  const initPeer = () => {\n    const peerInstance = new Peer();\n    peerInstance.on(\"open\", peerId => {\n      setPeerId(peerId);\n      socket.emit(\"broadcaster\", peerId);\n    });\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    }).then(stream => {\n      setStream(stream);\n      peerInstance.on(\"call\", call => {\n        call.answer(stream);\n        call.on(\"stream\", remoteStream => {\n          // Handle the remote stream as needed\n        });\n      });\n    }).catch(error => console.error(\"Error accessing media devices:\", error));\n    peerRef.current = peerInstance;\n  };\n  useEffect(() => {\n    initPeer();\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n      peerRef.current.destroy();\n      socket.emit(\"broadcaster-disconnected\", peerId);\n    };\n  }, [peerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stream && /*#__PURE__*/_jsxDEV(\"video\", {\n      srcObject: stream,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"JSZNR2VVmg91Sd1Gel5NfffNOuI=\");\n_c = Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Peer","io","jsxDEV","_jsxDEV","Stream","_s","stream","setStream","peerId","setPeerId","socket","peerRef","initPeer","peerInstance","on","emit","navigator","mediaDevices","getUserMedia","audio","video","then","call","answer","remoteStream","catch","error","console","current","destroy","children","srcObject","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/mobilestreamapp/client/src/Stream.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport { io } from \"socket.io-client\";\n\nexport default function Stream() {\n  const [stream, setStream] = useState(null);\n  const [peerId, setPeerId] = useState(null);\n\n  const socket = io(\"http://localhost:5000\");\n  const peerRef = useRef();\n\n  const initPeer = () => {\n    const peerInstance = new Peer();\n\n    peerInstance.on(\"open\", (peerId) => {\n      setPeerId(peerId);\n      socket.emit(\"broadcaster\", peerId);\n    });\n\n    navigator.mediaDevices\n      .getUserMedia({ audio: true, video: true })\n      .then((stream) => {\n        setStream(stream);\n\n        peerInstance.on(\"call\", (call) => {\n          call.answer(stream);\n\n          call.on(\"stream\", (remoteStream) => {\n            // Handle the remote stream as needed\n          });\n        });\n      })\n      .catch((error) => console.error(\"Error accessing media devices:\", error));\n\n    peerRef.current = peerInstance;\n  };\n\n  useEffect(() => {\n    initPeer();\n\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n      peerRef.current.destroy();\n      socket.emit(\"broadcaster-disconnected\", peerId);\n    };\n  }, [peerId]);\n\n  return (\n    <div>\n      {/* Your video streaming component */}\n      {stream && <video srcObject={stream} autoPlay playsInline />}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,MAAM,GAAGT,EAAE,CAAC,uBAAuB,CAAC;EAC1C,MAAMU,OAAO,GAAGZ,MAAM,CAAC,CAAC;EAExB,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,YAAY,GAAG,IAAIb,IAAI,CAAC,CAAC;IAE/Ba,YAAY,CAACC,EAAE,CAAC,MAAM,EAAGN,MAAM,IAAK;MAClCC,SAAS,CAACD,MAAM,CAAC;MACjBE,MAAM,CAACK,IAAI,CAAC,aAAa,EAAEP,MAAM,CAAC;IACpC,CAAC,CAAC;IAEFQ,SAAS,CAACC,YAAY,CACnBC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC1CC,IAAI,CAAEf,MAAM,IAAK;MAChBC,SAAS,CAACD,MAAM,CAAC;MAEjBO,YAAY,CAACC,EAAE,CAAC,MAAM,EAAGQ,IAAI,IAAK;QAChCA,IAAI,CAACC,MAAM,CAACjB,MAAM,CAAC;QAEnBgB,IAAI,CAACR,EAAE,CAAC,QAAQ,EAAGU,YAAY,IAAK;UAClC;QAAA,CACD,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAE3Ef,OAAO,CAACiB,OAAO,GAAGf,YAAY;EAChC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACde,QAAQ,CAAC,CAAC;IAEV,OAAO,MAAM;MACX;MACAD,OAAO,CAACiB,OAAO,CAACC,OAAO,CAAC,CAAC;MACzBnB,MAAM,CAACK,IAAI,CAAC,0BAA0B,EAAEP,MAAM,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAA2B,QAAA,EAEGxB,MAAM,iBAAIH,OAAA;MAAO4B,SAAS,EAAEzB,MAAO;MAAC0B,QAAQ;MAACC,WAAW;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAAChC,EAAA,CAjDuBD,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}