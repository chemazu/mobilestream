{"ast":null,"code":"const ParseErrorCode = {\n  LoadFail: 0,\n  BadSignature: 1,\n  BadTimestamp: 2,\n  BadSettingValue: 3,\n  BadFormat: 4,\n  UnknownSetting: 5\n};\nclass ParseError extends Error {\n  code;\n  line;\n  constructor(init) {\n    super(init.reason);\n    this.code = init.code;\n    this.line = init.line;\n  }\n}\nconst LINE_TERMINATOR_RE = /\\r?\\n|\\r/gm;\nclass TextLineTransformStream {\n  writable;\n  readable;\n  constructor(encoding) {\n    const transformer = new TextStreamLineIterator(encoding);\n    this.writable = new WritableStream({\n      write(chunk) {\n        transformer.transform(chunk);\n      },\n      close() {\n        transformer.close();\n      }\n    });\n    this.readable = new ReadableStream({\n      start(controller) {\n        transformer.onLine = line => controller.enqueue(line);\n        transformer.onClose = () => controller.close();\n      }\n    });\n  }\n}\nclass TextStreamLineIterator {\n  _buffer = \"\";\n  _decoder;\n  onLine;\n  onClose;\n  constructor(encoding) {\n    this._decoder = new TextDecoder(encoding);\n  }\n  transform(chunk) {\n    this._buffer += this._decoder.decode(chunk, {\n      stream: true\n    });\n    const lines = this._buffer.split(LINE_TERMINATOR_RE);\n    this._buffer = lines.pop() || \"\";\n    for (let i = 0; i < lines.length; i++) this.onLine(lines[i].trim());\n  }\n  close() {\n    if (this._buffer) this.onLine(this._buffer.trim());\n    this._buffer = \"\";\n    this.onClose();\n  }\n}\nasync function parseText(text, options) {\n  const stream = new ReadableStream({\n    start(controller) {\n      const lines = text.split(LINE_TERMINATOR_RE);\n      for (const line of lines) controller.enqueue(line);\n      controller.close();\n    }\n  });\n  return parseTextStream(stream, options);\n}\nasync function parseTextStream(stream, options) {\n  const type = options?.type ?? \"vtt\";\n  let factory;\n  if (typeof type === \"string\") {\n    switch (type) {\n      case \"srt\":\n        factory = (await import('./srt-parser.js')).default;\n        break;\n      case \"ssa\":\n      case \"ass\":\n        factory = (await import('./ssa-parser.js')).default;\n        break;\n      default:\n        factory = (await Promise.resolve().then(function () {\n          return vttParser;\n        })).default;\n    }\n  } else {\n    factory = type;\n  }\n  let result;\n  const reader = stream.getReader(),\n    parser = factory(),\n    errors = options?.errors !== false || !!options?.strict || !!options?.errors;\n  await parser.init({\n    strict: false,\n    ...options,\n    errors,\n    type,\n    cancel() {\n      reader.cancel();\n      result = parser.done(true);\n    }\n  });\n  let i = 1;\n  while (true) {\n    const {\n      value,\n      done\n    } = await reader.read();\n    if (done) {\n      parser.parse(\"\", i);\n      result = parser.done(false);\n      break;\n    }\n    parser.parse(value, i);\n    i++;\n  }\n  return result;\n}\nasync function parseResponse(response, options) {\n  const res = await response;\n  if (!res.ok || !res.body) {\n    let error;\n    {\n      error = new ParseError({\n        code: ParseErrorCode.LoadFail,\n        reason: !res.ok ? `response is not ok (status: ${res.status})` : `response body is missing (status: ${res.status})`,\n        line: -1\n      });\n      options?.onError?.(error);\n    }\n    return {\n      metadata: {},\n      cues: [],\n      regions: [],\n      errors: [error]\n    };\n  }\n  const contentType = res.headers.get(\"content-type\") || \"\",\n    type = contentType.match(/text\\/(.*?)(?:;|$)/)?.[1],\n    encoding = contentType.match(/charset=(.*?)(?:;|$)/)?.[1];\n  return parseByteStream(res.body, {\n    type,\n    encoding,\n    ...options\n  });\n}\nasync function parseByteStream(stream, {\n  encoding = \"utf-8\",\n  ...options\n} = {}) {\n  const textStream = stream.pipeThrough(new TextLineTransformStream(encoding));\n  return parseTextStream(textStream, options);\n}\nclass TextCue extends EventTarget {\n  /**\n   * A string that identifies the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/id}\n   */\n  id = \"\";\n  /**\n   * A `double` that represents the video time that the cue will start being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/startTime}\n   */\n  startTime;\n  /**\n   * A `double` that represents the video time that the cue will stop being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/endTime}\n   */\n  endTime;\n  /**\n   * Returns a string with the contents of the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/text}\n   */\n  text;\n  /**\n   * A `boolean` for whether the video will pause when this cue stops being displayed.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/pauseOnExit}\n   */\n  pauseOnExit = false;\n  constructor(startTime, endTime, text) {\n    super();\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.text = text;\n  }\n  addEventListener(type, listener, options) {\n    super.addEventListener(type, listener, options);\n  }\n  removeEventListener(type, listener, options) {\n    super.removeEventListener(type, listener, options);\n  }\n}\nconst CueBase = window.VTTCue;\nclass VTTCue extends CueBase {\n  /**\n   * A `VTTRegion` object describing the video's sub-region that the cue will be drawn onto,\n   * or `null` if none is assigned.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/region}\n   */\n  region = null;\n  /**\n   * The cue writing direction.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/vertical}\n   */\n  vertical = \"\";\n  /**\n   * Returns `true` if the `VTTCue.line` attribute is an integer number of lines or a percentage\n   * of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/snapToLines}\n   */\n  snapToLines = true;\n  /**\n   * Returns the line positioning of the cue. This can be the string `'auto'` or a number whose\n   * interpretation depends on the value of `VTTCue.snapToLines`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/line}\n   */\n  line = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the `VTTCue.line`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/lineAlign}\n   */\n  lineAlign = \"start\";\n  /**\n   * Returns the indentation of the cue within the line. This can be the string `'auto'` or a\n   * number representing the percentage of the `VTTCue.region`, or the video size if `VTTCue`.region`\n   * is `null`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/position}\n   */\n  position = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the cue. This is used to determine what\n   * the `VTTCue.position` is anchored to. The default is `'auto'`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/positionAlign}\n   */\n  positionAlign = \"auto\";\n  /**\n   * Returns a double representing the size of the cue, as a percentage of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/size}\n   */\n  size = 100;\n  /**\n   * Returns an enum representing the alignment of all the lines of text within the cue box.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/align}\n   */\n  align = \"center\";\n  /**\n   * Additional styles associated with the cue.\n   */\n  style;\n}\nclass VTTRegion {\n  /**\n   * A string that identifies the region.\n   */\n  id = \"\";\n  /**\n   * A `double` representing the width of the region, as a percentage of the video.\n   */\n  width = 100;\n  /**\n   * A `double` representing the height of the region, in number of lines.\n   */\n  lines = 3;\n  /**\n   * A `double` representing the region anchor X offset, as a percentage of the region.\n   */\n  regionAnchorX = 0;\n  /**\n   * A `double` representing the region anchor Y offset, as a percentage of the region.\n   */\n  regionAnchorY = 100;\n  /**\n   * A `double` representing the viewport anchor X offset, as a percentage of the video.\n   */\n  viewportAnchorX = 0;\n  /**\n   * A `double` representing the viewport anchor Y offset, as a percentage of the video.\n   */\n  viewportAnchorY = 100;\n  /**\n   * An enum representing how adding new cues will move existing cues.\n   */\n  scroll = \"\";\n}\nconst COMMA$1 = \",\",\n  PERCENT_SIGN$1 = \"%\";\nfunction toNumber(text) {\n  const num = parseInt(text, 10);\n  return !Number.isNaN(num) ? num : null;\n}\nfunction toPercentage(text) {\n  const num = parseInt(text.replace(PERCENT_SIGN$1, \"\"), 10);\n  return !Number.isNaN(num) && num >= 0 && num <= 100 ? num : null;\n}\nfunction toCoords(text) {\n  if (!text.includes(COMMA$1)) return null;\n  const [x, y] = text.split(COMMA$1).map(toPercentage);\n  return x !== null && y !== null ? [x, y] : null;\n}\nfunction toFloat(text) {\n  const num = parseFloat(text);\n  return !Number.isNaN(num) ? num : null;\n}\nconst HEADER_MAGIC = \"WEBVTT\",\n  COMMA = \",\",\n  PERCENT_SIGN = \"%\",\n  SETTING_SEP_RE = /[:=]/,\n  SETTING_LINE_RE = /^[\\s\\t]*(region|vertical|line|position|size|align)[:=]/,\n  NOTE_BLOCK_START = \"NOTE\",\n  REGION_BLOCK_START = \"REGION\",\n  REGION_BLOCK_START_RE = /^REGION:?[\\s\\t]+/,\n  SPACE_RE = /[\\s\\t]+/,\n  TIMESTAMP_SEP = \"-->\",\n  TIMESTAMP_SEP_RE = /[\\s\\t]*-->[\\s\\t]+/,\n  ALIGN_RE = /start|center|end|left|right/,\n  LINE_ALIGN_RE = /start|center|end/,\n  POS_ALIGN_RE = /line-(?:left|right)|center|auto/,\n  TIMESTAMP_RE = /^(?:(\\d{1,2}):)?(\\d{2}):(\\d{2})(?:\\.(\\d{1,3}))?$/;\nvar VTTBlock = /* @__PURE__ */(VTTBlock2 => {\n  VTTBlock2[VTTBlock2[\"None\"] = 0] = \"None\";\n  VTTBlock2[VTTBlock2[\"Header\"] = 1] = \"Header\";\n  VTTBlock2[VTTBlock2[\"Cue\"] = 2] = \"Cue\";\n  VTTBlock2[VTTBlock2[\"Region\"] = 3] = \"Region\";\n  VTTBlock2[VTTBlock2[\"Note\"] = 4] = \"Note\";\n  return VTTBlock2;\n})(VTTBlock || {});\nclass VTTParser {\n  _init;\n  _block = 0 /* None */;\n  _metadata = {};\n  _regions = {};\n  _cues = [];\n  _cue = null;\n  _region = null;\n  _errors = [];\n  _errorBuilder;\n  _prevLine = \"\";\n  async init(init) {\n    this._init = init;\n    if (init.strict) this._block = 1 /* Header */;\n    if (init.errors) this._errorBuilder = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this._cue) {\n        this._cues.push(this._cue);\n        this._init.onCue?.(this._cue);\n        this._cue = null;\n      } else if (this._region) {\n        this._regions[this._region.id] = this._region;\n        this._init.onRegion?.(this._region);\n        this._region = null;\n      } else if (this._block === 1 /* Header */) {\n        this._parseHeader(line, lineCount);\n        this._init.onHeaderMetadata?.(this._metadata);\n      }\n      this._block = 0 /* None */;\n    } else if (this._block) {\n      switch (this._block) {\n        case 1 /* Header */:\n          this._parseHeader(line, lineCount);\n          break;\n        case 2 /* Cue */:\n          if (this._cue) {\n            const hasText = this._cue.text.length > 0;\n            if (!hasText && SETTING_LINE_RE.test(line)) {\n              this._parseCueSettings(line.split(SPACE_RE), lineCount);\n            } else {\n              this._cue.text += (hasText ? \"\\n\" : \"\") + line;\n            }\n          }\n          break;\n        case 3 /* Region */:\n          this._parseRegionSettings(line.split(SPACE_RE), lineCount);\n          break;\n      }\n    } else if (line.startsWith(NOTE_BLOCK_START)) {\n      this._block = 4 /* Note */;\n    } else if (line.startsWith(REGION_BLOCK_START)) {\n      this._block = 3 /* Region */;\n      this._region = new VTTRegion();\n      this._parseRegionSettings(line.replace(REGION_BLOCK_START_RE, \"\").split(SPACE_RE), lineCount);\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this._parseTimestamp(line, lineCount);\n      if (result) {\n        this._cue = new VTTCue(result[0], result[1], \"\");\n        this._cue.id = this._prevLine;\n        this._parseCueSettings(result[2], lineCount);\n      }\n      this._block = 2 /* Cue */;\n    } else if (lineCount === 1) {\n      this._parseHeader(line, lineCount);\n    }\n    this._prevLine = line;\n  }\n  done() {\n    return {\n      metadata: this._metadata,\n      cues: this._cues,\n      regions: Object.values(this._regions),\n      errors: this._errors\n    };\n  }\n  _parseHeader(line, lineCount) {\n    if (lineCount > 1) {\n      if (SETTING_SEP_RE.test(line)) {\n        const [key, value] = line.split(SETTING_SEP_RE);\n        if (key) this._metadata[key] = (value || \"\").replace(SPACE_RE, \"\");\n      }\n    } else if (line.startsWith(HEADER_MAGIC)) {\n      this._block = 1 /* Header */;\n    } else {\n      this._handleError(this._errorBuilder?._badVTTHeader());\n    }\n  }\n  _parseTimestamp(line, lineCount) {\n    const [startTimeText, trailingText = \"\"] = line.split(TIMESTAMP_SEP_RE),\n      [endTimeText, ...settingsText] = trailingText.split(SPACE_RE),\n      startTime = parseVTTTimestamp(startTimeText),\n      endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime, settingsText];\n    } else {\n      if (startTime === null) {\n        this._handleError(this._errorBuilder?._badStartTimestamp(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this._handleError(this._errorBuilder?._badEndTimestamp(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this._handleError(this._errorBuilder?._badRangeTimestamp(startTime, endTime, lineCount));\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#region-settings-parsing}\n   */\n  _parseRegionSettings(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      if (SETTING_SEP_RE.test(settings[i])) {\n        badValue = false;\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"id\":\n            this._region.id = value;\n            break;\n          case \"width\":\n            const width = toPercentage(value);\n            if (width !== null) this._region.width = width;else badValue = true;\n            break;\n          case \"lines\":\n            const lines = toNumber(value);\n            if (lines !== null) this._region.lines = lines;else badValue = true;\n            break;\n          case \"regionanchor\":\n            const region = toCoords(value);\n            if (region !== null) {\n              this._region.regionAnchorX = region[0];\n              this._region.regionAnchorY = region[1];\n            } else badValue = true;\n            break;\n          case \"viewportanchor\":\n            const viewport = toCoords(value);\n            if (viewport !== null) {\n              this._region.viewportAnchorX = viewport[0];\n              this._region.viewportAnchorY = viewport[1];\n            } else badValue = true;\n            break;\n          case \"scroll\":\n            if (value === \"up\") this._region.scroll = \"up\";else badValue = true;\n            break;\n          default:\n            this._handleError(this._errorBuilder?._unknownRegionSetting(name, value, line));\n        }\n        if (badValue) {\n          this._handleError(this._errorBuilder?._badRegionSetting(name, value, line));\n        }\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#cue-timings-and-settings-parsing}\n   */\n  _parseCueSettings(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      badValue = false;\n      if (SETTING_SEP_RE.test(settings[i])) {\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"region\":\n            const region = this._regions[value];\n            if (region) this._cue.region = region;\n            break;\n          case \"vertical\":\n            if (value === \"lr\" || value === \"rl\") {\n              this._cue.vertical = value;\n              this._cue.region = null;\n            } else badValue = true;\n            break;\n          case \"line\":\n            const [linePos, lineAlign] = value.split(COMMA);\n            if (linePos.includes(PERCENT_SIGN)) {\n              const percentage = toPercentage(linePos);\n              if (percentage !== null) {\n                this._cue.line = percentage;\n                this._cue.snapToLines = false;\n              } else badValue = true;\n            } else {\n              const number = toFloat(linePos);\n              if (number !== null) this._cue.line = number;else badValue = true;\n            }\n            if (LINE_ALIGN_RE.test(lineAlign)) {\n              this._cue.lineAlign = lineAlign;\n            } else if (lineAlign) {\n              badValue = true;\n            }\n            if (this._cue.line !== \"auto\") this._cue.region = null;\n            break;\n          case \"position\":\n            const [colPos, colAlign] = value.split(COMMA),\n              position = toPercentage(colPos);\n            if (position !== null) this._cue.position = position;else badValue = true;\n            if (colAlign && POS_ALIGN_RE.test(colAlign)) {\n              this._cue.positionAlign = colAlign;\n            } else if (colAlign) {\n              badValue = true;\n            }\n            break;\n          case \"size\":\n            const size = toPercentage(value);\n            if (size !== null) {\n              this._cue.size = size;\n              if (size < 100) this._cue.region = null;\n            } else {\n              badValue = true;\n            }\n            break;\n          case \"align\":\n            if (ALIGN_RE.test(value)) {\n              this._cue.align = value;\n            } else {\n              badValue = true;\n            }\n            break;\n          default:\n            this._handleError(this._errorBuilder?._unknownCueSetting(name, value, line));\n        }\n        if (badValue) {\n          this._handleError(this._errorBuilder?._badCueSetting(name, value, line));\n        }\n      }\n    }\n  }\n  _handleError(error) {\n    if (!error) return;\n    this._errors.push(error);\n    if (this._init.strict) {\n      this._init.cancel();\n      throw error;\n    } else {\n      this._init.onError?.(error);\n    }\n  }\n}\nfunction parseVTTTimestamp(timestamp) {\n  const match = timestamp.match(TIMESTAMP_RE);\n  if (!match) return null;\n  const hours = match[1] ? parseInt(match[1], 10) : 0,\n    minutes = parseInt(match[2], 10),\n    seconds = parseInt(match[3], 10),\n    milliseconds = match[4] ? parseInt(match[4].padEnd(3, \"0\"), 10) : 0,\n    total = hours * 3600 + minutes * 60 + seconds + milliseconds / 1e3;\n  if (hours < 0 || minutes < 0 || seconds < 0 || milliseconds < 0 || minutes > 59 || seconds > 59) {\n    return null;\n  }\n  return total;\n}\nfunction createVTTParser() {\n  return new VTTParser();\n}\nvar vttParser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VTTBlock: VTTBlock,\n  VTTParser: VTTParser,\n  default: createVTTParser,\n  parseVTTTimestamp: parseVTTTimestamp\n});\nconst DIGIT_RE = /[0-9]/,\n  MULTI_SPACE_RE = /[\\s\\t]+/,\n  TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\",\n    timestamp: \"span\"\n  },\n  HTML_ENTITIES = {\n    \"&amp;\": \"&\",\n    \"&lt;\": \"<\",\n    \"&gt;\": \">\",\n    \"&quot;\": '\"',\n    \"&#39;\": \"'\",\n    \"&nbsp;\": \"\\xA0\",\n    \"&lrm;\": \"\\u200E\",\n    \"&rlm;\": \"\\u200F\"\n  },\n  HTML_ENTITY_RE = /&(?:amp|lt|gt|quot|#(0+)?39|nbsp|lrm|rlm);/g,\n  COLORS = /* @__PURE__ */new Set([\"white\", \"lime\", \"cyan\", \"red\", \"yellow\", \"magenta\", \"blue\", \"black\"]),\n  BLOCK_TYPES = /* @__PURE__ */new Set(Object.keys(TAG_NAME));\nfunction tokenizeVTTCue(cue) {\n  let buffer = \"\",\n    mode = 1 /* Data */,\n    result = [],\n    stack = [],\n    node;\n  for (let i = 0; i < cue.text.length; i++) {\n    const char = cue.text[i];\n    switch (mode) {\n      case 1 /* Data */:\n        if (char === \"<\") {\n          addText();\n          mode = 2 /* Tag */;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 2 /* Tag */:\n        switch (char) {\n          case \"\\n\":\n          case \"\t\":\n          case \" \":\n            addNode();\n            mode = 4 /* Annotation */;\n            break;\n          case \".\":\n            addNode();\n            mode = 3 /* Class */;\n            break;\n          case \"/\":\n            mode = 5 /* EndTag */;\n            break;\n          case \">\":\n            addNode();\n            mode = 1 /* Data */;\n            break;\n          default:\n            if (!buffer && DIGIT_RE.test(char)) mode = 6 /* Timestamp */;\n            buffer += char;\n            break;\n        }\n        break;\n      case 3 /* Class */:\n        switch (char) {\n          case \"\t\":\n          case \" \":\n          case \"\\n\":\n            addClass();\n            if (node) node.class?.trim();\n            mode = 4 /* Annotation */;\n            break;\n          case \".\":\n            addClass();\n            break;\n          case \">\":\n            addClass();\n            if (node) node.class?.trim();\n            mode = 1 /* Data */;\n            break;\n          default:\n            buffer += char;\n        }\n        break;\n      case 4 /* Annotation */:\n        if (char === \">\") {\n          buffer = buffer.replace(MULTI_SPACE_RE, \" \");\n          if (node?.type === \"v\") node.voice = replaceHTMLEntities(buffer);else if (node?.type === \"lang\") node.lang = replaceHTMLEntities(buffer);\n          buffer = \"\";\n          mode = 1 /* Data */;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 5 /* EndTag */:\n        if (char === \">\") {\n          buffer = \"\";\n          node = stack.pop();\n          mode = 1 /* Data */;\n        }\n\n        break;\n      case 6 /* Timestamp */:\n        if (char === \">\") {\n          const time = parseVTTTimestamp(buffer);\n          if (time !== null && time >= cue.startTime && time <= cue.endTime) {\n            buffer = \"timestamp\";\n            addNode();\n            node.time = time;\n          }\n          buffer = \"\";\n          mode = 1 /* Data */;\n        } else {\n          buffer += char;\n        }\n        break;\n    }\n  }\n  function addNode() {\n    if (BLOCK_TYPES.has(buffer)) {\n      const parent = node;\n      node = createBlockNode(buffer);\n      if (parent) {\n        if (stack[stack.length - 1] !== parent) stack.push(parent);\n        parent.children.push(node);\n      } else result.push(node);\n    }\n    buffer = \"\";\n    mode = 1 /* Data */;\n  }\n\n  function addClass() {\n    if (node && buffer) {\n      const color = buffer.replace(\"bg_\", \"\");\n      if (COLORS.has(color)) {\n        node[buffer.startsWith(\"bg_\") ? \"bgColor\" : \"color\"] = color;\n      } else {\n        node.class = !node.class ? buffer : node.class + \" \" + buffer;\n      }\n    }\n    buffer = \"\";\n  }\n  function addText() {\n    if (!buffer) return;\n    const text = {\n      type: \"text\",\n      data: replaceHTMLEntities(buffer)\n    };\n    node ? node.children.push(text) : result.push(text);\n    buffer = \"\";\n  }\n  if (mode === 1 /* Data */) addText();\n  return result;\n}\nfunction createBlockNode(type) {\n  return {\n    tagName: TAG_NAME[type],\n    type,\n    children: []\n  };\n}\nfunction replaceHTMLEntities(text) {\n  return text.replace(HTML_ENTITY_RE, entity => HTML_ENTITIES[entity] || \"'\");\n}\nfunction setCSSVar(el, name, value) {\n  el.style.setProperty(`--${name}`, value + \"\");\n}\nfunction setDataAttr(el, name, value = true) {\n  el.setAttribute(`data-${name}`, value === true ? \"\" : value + \"\");\n}\nfunction setPartAttr(el, name) {\n  el.setAttribute(\"part\", name);\n}\nfunction getLineHeight(el) {\n  return parseFloat(getComputedStyle(el).lineHeight) || 0;\n}\nfunction createVTTCueTemplate(cue) {\n  const template = document.createElement(\"template\");\n  template.innerHTML = renderVTTCueString(cue);\n  return {\n    cue,\n    content: template.content\n  };\n}\nfunction renderVTTCueString(cue, currentTime = 0) {\n  return renderVTTTokensString(tokenizeVTTCue(cue), currentTime);\n}\nfunction renderVTTTokensString(tokens, currentTime = 0) {\n  let attrs,\n    result = \"\";\n  for (const token of tokens) {\n    if (token.type === \"text\") {\n      result += token.data;\n    } else {\n      const isTimestamp = token.type === \"timestamp\";\n      attrs = {};\n      attrs.class = token.class;\n      attrs.title = token.type === \"v\" && token.voice;\n      attrs.lang = token.type === \"lang\" && token.lang;\n      attrs[\"part\"] = token.type === \"v\" && \"voice\";\n      if (isTimestamp) {\n        attrs[\"part\"] = \"timed\";\n        attrs[\"data-time\"] = token.time;\n        attrs[\"data-future\"] = token.time > currentTime;\n        attrs[\"data-past\"] = token.time < currentTime;\n      }\n      attrs.style = `${token.color ? `color: ${token.color};` : \"\"}${token.bgColor ? `background-color: ${token.bgColor};` : \"\"}`;\n      const attributes = Object.entries(attrs).filter(v => v[1]).map(v => `${v[0]}=\"${v[1] === true ? \"\" : v[1]}\"`).join(\" \");\n      result += `<${token.tagName}${attributes ? \" \" + attributes : \"\"}>${renderVTTTokensString(token.children)}</${token.tagName}>`;\n    }\n  }\n  return result;\n}\nfunction updateTimedVTTCueNodes(root, currentTime) {\n  for (const el of root.querySelectorAll('[part=\"timed\"]')) {\n    const time = Number(el.getAttribute(\"data-time\"));\n    if (Number.isNaN(time)) continue;\n    if (time > currentTime) setDataAttr(el, \"future\");else el.removeAttribute(\"data-future\");\n    if (time < currentTime) setDataAttr(el, \"past\");else el.removeAttribute(\"data-past\");\n  }\n}\nfunction debounce(fn, delay) {\n  let timeout = null,\n    args;\n  function run() {\n    clear();\n    fn(...args);\n    args = void 0;\n  }\n  function clear() {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  function debounce2() {\n    args = [].slice.call(arguments);\n    clear();\n    timeout = setTimeout(run, delay);\n  }\n  return debounce2;\n}\nconst STARTING_BOX = Symbol(\"STARTING_BOX\");\nfunction createBox(box) {\n  if (box instanceof HTMLElement) {\n    return {\n      top: box.offsetTop,\n      width: box.clientWidth,\n      height: box.clientHeight,\n      left: box.offsetLeft,\n      right: box.offsetLeft + box.clientWidth,\n      bottom: box.offsetTop + box.clientHeight\n    };\n  }\n  return {\n    ...box\n  };\n}\nfunction moveBox(box, axis, delta) {\n  switch (axis) {\n    case \"+x\":\n      box.left += delta;\n      box.right += delta;\n      break;\n    case \"-x\":\n      box.left -= delta;\n      box.right -= delta;\n      break;\n    case \"+y\":\n      box.top += delta;\n      box.bottom += delta;\n      break;\n    case \"-y\":\n      box.top -= delta;\n      box.bottom -= delta;\n      break;\n  }\n}\nfunction isBoxCollision(a, b) {\n  return a.left <= b.right && a.right >= b.left && a.top <= b.bottom && a.bottom >= b.top;\n}\nfunction isAnyBoxCollision(box, boxes) {\n  for (let i = 0; i < boxes.length; i++) if (isBoxCollision(box, boxes[i])) return boxes[i];\n  return null;\n}\nfunction isWithinBox(container, box) {\n  return box.top >= 0 && box.bottom <= container.height && box.left >= 0 && box.right <= container.width;\n}\nfunction isBoxOutOfBounds(container, box, axis) {\n  switch (axis) {\n    case \"+x\":\n      return box.left < 0;\n    case \"-x\":\n      return box.right > container.width;\n    case \"+y\":\n      return box.top < 0;\n    case \"-y\":\n      return box.bottom > container.height;\n  }\n}\nfunction calcBoxIntersectPercentage(container, box) {\n  const x = Math.max(0, Math.min(container.width, box.right) - Math.max(0, box.left)),\n    y = Math.max(0, Math.min(container.height, box.bottom) - Math.max(0, box.top)),\n    intersectArea = x * y;\n  return intersectArea / (container.height * container.width);\n}\nfunction createCSSBox(container, box) {\n  return {\n    top: box.top / container.height,\n    left: box.left / container.width,\n    right: (container.width - box.right) / container.width,\n    bottom: (container.height - box.bottom) / container.height\n  };\n}\nfunction resolveRelativeBox(container, box) {\n  box.top = box.top * container.height;\n  box.left = box.left * container.width;\n  box.right = container.width - box.right * container.width;\n  box.bottom = container.height - box.bottom * container.height;\n  return box;\n}\nconst BOX_SIDES = [\"top\", \"left\", \"right\", \"bottom\"];\nfunction setBoxCSSVars(el, container, box, prefix) {\n  const cssBox = createCSSBox(container, box);\n  for (const side of BOX_SIDES) {\n    setCSSVar(el, `${prefix}-${side}`, cssBox[side] * 100 + \"%\");\n  }\n}\nfunction avoidBoxCollisions(container, box, boxes, axis) {\n  let percentage = 1,\n    positionedBox,\n    startBox = {\n      ...box\n    };\n  for (let i = 0; i < axis.length; i++) {\n    while (isBoxOutOfBounds(container, box, axis[i]) || isWithinBox(container, box) && isAnyBoxCollision(box, boxes)) {\n      moveBox(box, axis[i], 1);\n    }\n    if (isWithinBox(container, box)) return box;\n    const intersection = calcBoxIntersectPercentage(container, box);\n    if (percentage > intersection) {\n      positionedBox = {\n        ...box\n      };\n      percentage = intersection;\n    }\n    box = {\n      ...startBox\n    };\n  }\n  return positionedBox || startBox;\n}\nconst POSITION_OVERRIDE = Symbol(\"POSITION_OVERRIDE\");\nfunction positionCue(container, cue, displayEl, boxes) {\n  let cueEl = displayEl.firstElementChild,\n    line = computeCueLine(cue),\n    displayBox,\n    axis = [];\n  if (!displayEl[STARTING_BOX]) {\n    displayEl[STARTING_BOX] = createStartingBox(container, displayEl);\n  }\n  displayBox = resolveRelativeBox(container, {\n    ...displayEl[STARTING_BOX]\n  });\n  if (displayEl[POSITION_OVERRIDE]) {\n    axis = [displayEl[POSITION_OVERRIDE] === \"top\" ? \"+y\" : \"-y\", \"+x\", \"-x\"];\n  } else if (cue.snapToLines) {\n    let size;\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n    let step = getLineHeight(cueEl),\n      position = step * Math.round(line),\n      maxPosition = container[size] + step,\n      initialAxis = axis[0];\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n    if (line < 0) {\n      position += cue.vertical === \"\" ? container.height : container.width;\n      axis = axis.reverse();\n    }\n    moveBox(displayBox, initialAxis, position);\n  } else {\n    const isHorizontal = cue.vertical === \"\",\n      posAxis = isHorizontal ? \"+y\" : \"+x\",\n      size = isHorizontal ? displayBox.height : displayBox.width;\n    moveBox(displayBox, posAxis, (isHorizontal ? container.height : container.width) * line / 100);\n    moveBox(displayBox, posAxis, cue.lineAlign === \"center\" ? size / 2 : cue.lineAlign === \"end\" ? size : 0);\n    axis = isHorizontal ? [\"-y\", \"+y\", \"-x\", \"+x\"] : [\"-x\", \"+x\", \"-y\", \"+y\"];\n  }\n  displayBox = avoidBoxCollisions(container, displayBox, boxes, axis);\n  setBoxCSSVars(displayEl, container, displayBox, \"cue\");\n  return displayBox;\n}\nfunction createStartingBox(container, cueEl) {\n  const box = createBox(cueEl),\n    pos = getStyledPositions(cueEl);\n  cueEl[POSITION_OVERRIDE] = false;\n  if (pos.top) {\n    box.top = pos.top;\n    box.bottom = pos.top + box.height;\n    cueEl[POSITION_OVERRIDE] = \"top\";\n  }\n  if (pos.bottom) {\n    const bottom = container.height - pos.bottom;\n    box.top = bottom - box.height;\n    box.bottom = bottom;\n    cueEl[POSITION_OVERRIDE] = \"bottom\";\n  }\n  if (pos.left) box.left = pos.left;\n  if (pos.right) box.right = container.width - pos.right;\n  return createCSSBox(container, box);\n}\nfunction getStyledPositions(el) {\n  const positions = {};\n  for (const side of BOX_SIDES) {\n    positions[side] = parseFloat(el.style.getPropertyValue(`--cue-${side}`));\n  }\n  return positions;\n}\nfunction computeCueLine(cue) {\n  if (cue.line === \"auto\") {\n    if (!cue.snapToLines) {\n      return 100;\n    } else {\n      return -1;\n    }\n  }\n  return cue.line;\n}\nfunction computeCuePosition(cue) {\n  if (cue.position === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n      case \"left\":\n        return 0;\n      case \"right\":\n      case \"end\":\n        return 100;\n      default:\n        return 50;\n    }\n  }\n  return cue.position;\n}\nfunction computeCuePositionAlignment(cue, dir) {\n  if (cue.positionAlign === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n        return dir === \"ltr\" ? \"line-left\" : \"line-right\";\n      case \"end\":\n        return dir === \"ltr\" ? \"line-right\" : \"line-left\";\n      case \"center\":\n        return \"center\";\n      default:\n        return `line-${cue.align}`;\n    }\n  }\n  return cue.positionAlign;\n}\nconst REGION_AXIS = [\"-y\", \"+y\", \"-x\", \"+x\"];\nfunction positionRegion(container, region, regionEl, boxes) {\n  let cues = Array.from(regionEl.querySelectorAll('[part=\"cue-display\"]')),\n    height = 0,\n    limit = Math.max(0, cues.length - region.lines);\n  for (let i = cues.length - 1; i >= limit; i--) {\n    height += cues[i].offsetHeight;\n  }\n  setCSSVar(regionEl, \"region-height\", height + \"px\");\n  if (!regionEl[STARTING_BOX]) {\n    regionEl[STARTING_BOX] = createCSSBox(container, createBox(regionEl));\n  }\n  let box = {\n    ...regionEl[STARTING_BOX]\n  };\n  box = resolveRelativeBox(container, box);\n  box.width = regionEl.clientWidth;\n  box.height = height;\n  box.right = box.left + box.width;\n  box.bottom = box.top + height;\n  box = avoidBoxCollisions(container, box, boxes, REGION_AXIS);\n  setBoxCSSVars(regionEl, container, box, \"region\");\n  return box;\n}\nclass CaptionsRenderer {\n  overlay;\n  _overlayBox;\n  _currentTime = 0;\n  _dir = \"ltr\";\n  _activeCues = [];\n  _isResizing = false;\n  _resizeObserver;\n  _regions = /* @__PURE__ */new Map();\n  _cues = /* @__PURE__ */new Map();\n  /* Text direction. */\n  get dir() {\n    return this._dir;\n  }\n  set dir(dir) {\n    this._dir = dir;\n    setDataAttr(this.overlay, \"dir\", dir);\n  }\n  get currentTime() {\n    return this._currentTime;\n  }\n  set currentTime(time) {\n    this._currentTime = time;\n    this.update();\n  }\n  constructor(overlay, init) {\n    this.overlay = overlay;\n    this.dir = init?.dir ?? \"ltr\";\n    overlay.setAttribute(\"translate\", \"yes\");\n    overlay.setAttribute(\"aria-live\", \"off\");\n    overlay.setAttribute(\"aria-atomic\", \"true\");\n    setPartAttr(overlay, \"captions\");\n    this._updateOverlay();\n    this._resizeObserver = new ResizeObserver(this._resizing.bind(this));\n    this._resizeObserver.observe(overlay);\n  }\n  changeTrack({\n    regions,\n    cues\n  }) {\n    this.reset();\n    this._buildRegions(regions);\n    for (const cue of cues) this._cues.set(cue, null);\n    this.update();\n  }\n  addCue(cue) {\n    this._cues.set(cue, null);\n    this.update();\n  }\n  removeCue(cue) {\n    this._cues.delete(cue);\n    this.update();\n  }\n  update(forceUpdate = false) {\n    this._render(forceUpdate);\n  }\n  reset() {\n    this._cues.clear();\n    this._regions.clear();\n    this._activeCues = [];\n    this.overlay.textContent = \"\";\n  }\n  destroy() {\n    this.reset();\n    this._resizeObserver.disconnect();\n  }\n  _resizing() {\n    this._isResizing = true;\n    this._resize();\n  }\n  _resize = debounce(() => {\n    this._isResizing = false;\n    this._updateOverlay();\n    for (const el of this._regions.values()) {\n      el[STARTING_BOX] = null;\n    }\n    for (const el of this._cues.values()) {\n      if (el) el[STARTING_BOX] = null;\n    }\n    this._render(true);\n  }, 50);\n  _updateOverlay() {\n    this._overlayBox = createBox(this.overlay);\n    setCSSVar(this.overlay, \"overlay-width\", this._overlayBox.width + \"px\");\n    setCSSVar(this.overlay, \"overlay-height\", this._overlayBox.height + \"px\");\n  }\n  _render(forceUpdate = false) {\n    if (!this._cues.size || this._isResizing) return;\n    let cue,\n      activeCues = [...this._cues.keys()].filter(cue2 => this._currentTime >= cue2.startTime && this._currentTime <= cue2.endTime).sort((cueA, cueB) => cueA.startTime !== cueB.startTime ? cueA.startTime - cueB.startTime : cueA.endTime - cueB.endTime),\n      activeRegions = activeCues.map(cue2 => cue2.region);\n    for (let i = 0; i < this._activeCues.length; i++) {\n      cue = this._activeCues[i];\n      if (activeCues[i] === cue) continue;\n      if (cue.region && !activeRegions.includes(cue.region)) {\n        const regionEl = this._regions.get(cue.region.id);\n        if (regionEl) {\n          regionEl.removeAttribute(\"data-active\");\n          forceUpdate = true;\n        }\n      }\n      const cueEl = this._cues.get(cue);\n      if (cueEl) {\n        cueEl.remove();\n        forceUpdate = true;\n      }\n    }\n    for (let i = 0; i < activeCues.length; i++) {\n      cue = activeCues[i];\n      let cueEl = this._cues.get(cue);\n      if (!cueEl) this._cues.set(cue, cueEl = this._createCueElement(cue));\n      const regionEl = this._hasRegion(cue) && this._regions.get(cue.region.id);\n      if (regionEl && !regionEl.hasAttribute(\"data-active\")) {\n        requestAnimationFrame(() => setDataAttr(regionEl, \"active\"));\n        forceUpdate = true;\n      }\n      if (!cueEl.isConnected) {\n        (regionEl || this.overlay).append(cueEl);\n        forceUpdate = true;\n      }\n    }\n    if (forceUpdate) {\n      const boxes = [],\n        seen = /* @__PURE__ */new Set();\n      for (let i = activeCues.length - 1; i >= 0; i--) {\n        cue = activeCues[i];\n        if (seen.has(cue.region || cue)) continue;\n        const isRegion = this._hasRegion(cue),\n          el = isRegion ? this._regions.get(cue.region.id) : this._cues.get(cue);\n        if (isRegion) {\n          boxes.push(positionRegion(this._overlayBox, cue.region, el, boxes));\n        } else {\n          boxes.push(positionCue(this._overlayBox, cue, el, boxes));\n        }\n        seen.add(isRegion ? cue.region : cue);\n      }\n    }\n    updateTimedVTTCueNodes(this.overlay, this._currentTime);\n    this._activeCues = activeCues;\n  }\n  _buildRegions(regions) {\n    if (!regions) return;\n    for (const region of regions) {\n      const el = this._createRegionElement(region);\n      this._regions.set(region.id, el);\n      this.overlay.append(el);\n    }\n  }\n  _createRegionElement(region) {\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"region\");\n    setDataAttr(el, \"id\", region.id);\n    setDataAttr(el, \"scroll\", region.scroll);\n    setCSSVar(el, \"region-width\", region.width + \"%\");\n    setCSSVar(el, \"region-anchor-x\", region.regionAnchorX);\n    setCSSVar(el, \"region-anchor-y\", region.regionAnchorY);\n    setCSSVar(el, \"region-viewport-anchor-x\", region.viewportAnchorX);\n    setCSSVar(el, \"region-viewport-anchor-y\", region.viewportAnchorY);\n    setCSSVar(el, \"region-lines\", region.lines);\n    return el;\n  }\n  _createCueElement(cue) {\n    const display = document.createElement(\"div\"),\n      position = computeCuePosition(cue),\n      positionAlignment = computeCuePositionAlignment(cue, this._dir);\n    setPartAttr(display, \"cue-display\");\n    if (cue.vertical !== \"\") setDataAttr(display, \"vertical\");\n    setCSSVar(display, \"cue-text-align\", cue.align);\n    if (cue.style) {\n      for (const prop of Object.keys(cue.style)) {\n        display.style.setProperty(prop, cue.style[prop]);\n      }\n    }\n    if (!this._hasRegion(cue)) {\n      setCSSVar(display, \"cue-writing-mode\", cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\");\n      if (!cue.style?.[\"--cue-width\"]) {\n        let maxSize = position;\n        if (positionAlignment === \"line-left\") {\n          maxSize = 100 - position;\n        } else if (positionAlignment === \"center\" && position <= 50) {\n          maxSize = position * 2;\n        } else if (positionAlignment === \"center\" && position > 50) {\n          maxSize = (100 - position) * 2;\n        }\n        const size = cue.size < maxSize ? cue.size : maxSize;\n        if (cue.vertical === \"\") setCSSVar(display, \"cue-width\", size + \"%\");else setCSSVar(display, \"cue-height\", size + \"%\");\n      }\n    } else {\n      setCSSVar(display, \"cue-offset\", `${position - (positionAlignment === \"line-right\" ? 100 : positionAlignment === \"center\" ? 50 : 0)}%`);\n    }\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"cue\");\n    if (cue.id) setDataAttr(el, \"id\", cue.id);\n    el.innerHTML = renderVTTCueString(cue);\n    display.append(el);\n    return display;\n  }\n  _hasRegion(cue) {\n    return cue.region && cue.size === 100 && cue.vertical === \"\" && cue.line === \"auto\";\n  }\n}\nexport { CaptionsRenderer as C, ParseError as P, TextCue as T, VTTParser as V, VTTBlock as a, VTTCue as b, ParseErrorCode as c, parseResponse as d, parseByteStream as e, parseText as f, parseTextStream as g, VTTRegion as h, createVTTCueTemplate as i, renderVTTTokensString as j, parseVTTTimestamp as p, renderVTTCueString as r, tokenizeVTTCue as t, updateTimedVTTCueNodes as u };","map":{"version":3,"names":["ParseErrorCode","LoadFail","BadSignature","BadTimestamp","BadSettingValue","BadFormat","UnknownSetting","ParseError","Error","code","line","constructor","init","reason","LINE_TERMINATOR_RE","TextLineTransformStream","writable","readable","encoding","transformer","TextStreamLineIterator","WritableStream","write","chunk","transform","close","ReadableStream","start","controller","onLine","enqueue","onClose","_buffer","_decoder","TextDecoder","decode","stream","lines","split","pop","i","length","trim","parseText","text","options","parseTextStream","type","factory","default","Promise","resolve","then","vttParser","result","reader","getReader","parser","errors","strict","cancel","done","value","read","parse","parseResponse","response","res","ok","body","error","status","onError","metadata","cues","regions","contentType","headers","get","match","parseByteStream","textStream","pipeThrough","TextCue","EventTarget","id","startTime","endTime","pauseOnExit","addEventListener","listener","removeEventListener","CueBase","window","VTTCue","region","vertical","snapToLines","lineAlign","position","positionAlign","size","align","style","VTTRegion","width","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","COMMA$1","PERCENT_SIGN$1","toNumber","num","parseInt","Number","isNaN","toPercentage","replace","toCoords","includes","x","y","map","toFloat","parseFloat","HEADER_MAGIC","COMMA","PERCENT_SIGN","SETTING_SEP_RE","SETTING_LINE_RE","NOTE_BLOCK_START","REGION_BLOCK_START","REGION_BLOCK_START_RE","SPACE_RE","TIMESTAMP_SEP","TIMESTAMP_SEP_RE","ALIGN_RE","LINE_ALIGN_RE","POS_ALIGN_RE","TIMESTAMP_RE","VTTBlock","VTTBlock2","VTTParser","_init","_block","_metadata","_regions","_cues","_cue","_region","_errors","_errorBuilder","_prevLine","ParseErrorBuilder","lineCount","push","onCue","onRegion","_parseHeader","onHeaderMetadata","hasText","test","_parseCueSettings","_parseRegionSettings","startsWith","_parseTimestamp","Object","values","key","_handleError","_badVTTHeader","startTimeText","trailingText","endTimeText","settingsText","parseVTTTimestamp","_badStartTimestamp","_badEndTimestamp","_badRangeTimestamp","settings","badValue","name","viewport","_unknownRegionSetting","_badRegionSetting","linePos","percentage","number","colPos","colAlign","_unknownCueSetting","_badCueSetting","timestamp","hours","minutes","seconds","milliseconds","padEnd","total","createVTTParser","freeze","__proto__","DIGIT_RE","MULTI_SPACE_RE","TAG_NAME","c","b","u","ruby","rt","v","lang","HTML_ENTITIES","HTML_ENTITY_RE","COLORS","Set","BLOCK_TYPES","keys","tokenizeVTTCue","cue","buffer","mode","stack","node","char","addText","addNode","addClass","class","voice","replaceHTMLEntities","time","has","parent","createBlockNode","children","color","data","tagName","entity","setCSSVar","el","setProperty","setDataAttr","setAttribute","setPartAttr","getLineHeight","getComputedStyle","lineHeight","createVTTCueTemplate","template","document","createElement","innerHTML","renderVTTCueString","content","currentTime","renderVTTTokensString","tokens","attrs","token","isTimestamp","title","bgColor","attributes","entries","filter","join","updateTimedVTTCueNodes","root","querySelectorAll","getAttribute","removeAttribute","debounce","fn","delay","timeout","args","run","clear","clearTimeout","debounce2","slice","call","arguments","setTimeout","STARTING_BOX","Symbol","createBox","box","HTMLElement","top","offsetTop","clientWidth","height","clientHeight","left","offsetLeft","right","bottom","moveBox","axis","delta","isBoxCollision","a","isAnyBoxCollision","boxes","isWithinBox","container","isBoxOutOfBounds","calcBoxIntersectPercentage","Math","max","min","intersectArea","createCSSBox","resolveRelativeBox","BOX_SIDES","setBoxCSSVars","prefix","cssBox","side","avoidBoxCollisions","positionedBox","startBox","intersection","POSITION_OVERRIDE","positionCue","displayEl","cueEl","firstElementChild","computeCueLine","displayBox","createStartingBox","step","round","maxPosition","initialAxis","abs","ceil","reverse","isHorizontal","posAxis","pos","getStyledPositions","positions","getPropertyValue","computeCuePosition","computeCuePositionAlignment","dir","REGION_AXIS","positionRegion","regionEl","Array","from","limit","offsetHeight","CaptionsRenderer","overlay","_overlayBox","_currentTime","_dir","_activeCues","_isResizing","_resizeObserver","Map","update","_updateOverlay","ResizeObserver","_resizing","bind","observe","changeTrack","reset","_buildRegions","set","addCue","removeCue","delete","forceUpdate","_render","textContent","destroy","disconnect","_resize","activeCues","cue2","sort","cueA","cueB","activeRegions","remove","_createCueElement","_hasRegion","hasAttribute","requestAnimationFrame","isConnected","append","seen","isRegion","add","_createRegionElement","display","positionAlignment","prop","maxSize","C","P","T","V","d","e","f","g","h","j","p","r","t"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/media-captions/dist/dev/index.js"],"sourcesContent":["const ParseErrorCode = {\n  LoadFail: 0,\n  BadSignature: 1,\n  BadTimestamp: 2,\n  BadSettingValue: 3,\n  BadFormat: 4,\n  UnknownSetting: 5\n};\nclass ParseError extends Error {\n  code;\n  line;\n  constructor(init) {\n    super(init.reason);\n    this.code = init.code;\n    this.line = init.line;\n  }\n}\n\nconst LINE_TERMINATOR_RE = /\\r?\\n|\\r/gm;\nclass TextLineTransformStream {\n  writable;\n  readable;\n  constructor(encoding) {\n    const transformer = new TextStreamLineIterator(encoding);\n    this.writable = new WritableStream({\n      write(chunk) {\n        transformer.transform(chunk);\n      },\n      close() {\n        transformer.close();\n      }\n    });\n    this.readable = new ReadableStream({\n      start(controller) {\n        transformer.onLine = (line) => controller.enqueue(line);\n        transformer.onClose = () => controller.close();\n      }\n    });\n  }\n}\nclass TextStreamLineIterator {\n  _buffer = \"\";\n  _decoder;\n  onLine;\n  onClose;\n  constructor(encoding) {\n    this._decoder = new TextDecoder(encoding);\n  }\n  transform(chunk) {\n    this._buffer += this._decoder.decode(chunk, { stream: true });\n    const lines = this._buffer.split(LINE_TERMINATOR_RE);\n    this._buffer = lines.pop() || \"\";\n    for (let i = 0; i < lines.length; i++)\n      this.onLine(lines[i].trim());\n  }\n  close() {\n    if (this._buffer)\n      this.onLine(this._buffer.trim());\n    this._buffer = \"\";\n    this.onClose();\n  }\n}\n\nasync function parseText(text, options) {\n  const stream = new ReadableStream({\n    start(controller) {\n      const lines = text.split(LINE_TERMINATOR_RE);\n      for (const line of lines)\n        controller.enqueue(line);\n      controller.close();\n    }\n  });\n  return parseTextStream(stream, options);\n}\nasync function parseTextStream(stream, options) {\n  const type = options?.type ?? \"vtt\";\n  let factory;\n  if (typeof type === \"string\") {\n    switch (type) {\n      case \"srt\":\n        factory = (await import('./srt-parser.js')).default;\n        break;\n      case \"ssa\":\n      case \"ass\":\n        factory = (await import('./ssa-parser.js')).default;\n        break;\n      default:\n        factory = (await Promise.resolve().then(function () { return vttParser; })).default;\n    }\n  } else {\n    factory = type;\n  }\n  let result;\n  const reader = stream.getReader(), parser = factory(), errors = options?.errors !== false || !!options?.strict || !!options?.errors;\n  await parser.init({\n    strict: false,\n    ...options,\n    errors,\n    type,\n    cancel() {\n      reader.cancel();\n      result = parser.done(true);\n    }\n  });\n  let i = 1;\n  while (true) {\n    const { value, done } = await reader.read();\n    if (done) {\n      parser.parse(\"\", i);\n      result = parser.done(false);\n      break;\n    }\n    parser.parse(value, i);\n    i++;\n  }\n  return result;\n}\n\nasync function parseResponse(response, options) {\n  const res = await response;\n  if (!res.ok || !res.body) {\n    let error;\n    {\n      error = new ParseError({\n        code: ParseErrorCode.LoadFail,\n        reason: !res.ok ? `response is not ok (status: ${res.status})` : `response body is missing (status: ${res.status})`,\n        line: -1\n      });\n      options?.onError?.(error);\n    }\n    return {\n      metadata: {},\n      cues: [],\n      regions: [],\n      errors: [error]\n    };\n  }\n  const contentType = res.headers.get(\"content-type\") || \"\", type = contentType.match(/text\\/(.*?)(?:;|$)/)?.[1], encoding = contentType.match(/charset=(.*?)(?:;|$)/)?.[1];\n  return parseByteStream(res.body, { type, encoding, ...options });\n}\nasync function parseByteStream(stream, { encoding = \"utf-8\", ...options } = {}) {\n  const textStream = stream.pipeThrough(new TextLineTransformStream(encoding));\n  return parseTextStream(textStream, options);\n}\n\nclass TextCue extends EventTarget {\n  /**\n   * A string that identifies the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/id}\n   */\n  id = \"\";\n  /**\n   * A `double` that represents the video time that the cue will start being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/startTime}\n   */\n  startTime;\n  /**\n   * A `double` that represents the video time that the cue will stop being displayed, in seconds.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/endTime}\n   */\n  endTime;\n  /**\n   * Returns a string with the contents of the cue.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/text}\n   */\n  text;\n  /**\n   * A `boolean` for whether the video will pause when this cue stops being displayed.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/TextTrackCue/pauseOnExit}\n   */\n  pauseOnExit = false;\n  constructor(startTime, endTime, text) {\n    super();\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.text = text;\n  }\n  addEventListener(type, listener, options) {\n    super.addEventListener(type, listener, options);\n  }\n  removeEventListener(type, listener, options) {\n    super.removeEventListener(type, listener, options);\n  }\n}\n\nconst CueBase = window.VTTCue;\nclass VTTCue extends CueBase {\n  /**\n   * A `VTTRegion` object describing the video's sub-region that the cue will be drawn onto,\n   * or `null` if none is assigned.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/region}\n   */\n  region = null;\n  /**\n   * The cue writing direction.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/vertical}\n   */\n  vertical = \"\";\n  /**\n   * Returns `true` if the `VTTCue.line` attribute is an integer number of lines or a percentage\n   * of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/snapToLines}\n   */\n  snapToLines = true;\n  /**\n   * Returns the line positioning of the cue. This can be the string `'auto'` or a number whose\n   * interpretation depends on the value of `VTTCue.snapToLines`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/line}\n   */\n  line = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the `VTTCue.line`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/lineAlign}\n   */\n  lineAlign = \"start\";\n  /**\n   * Returns the indentation of the cue within the line. This can be the string `'auto'` or a\n   * number representing the percentage of the `VTTCue.region`, or the video size if `VTTCue`.region`\n   * is `null`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/position}\n   */\n  position = \"auto\";\n  /**\n   * Returns an enum representing the alignment of the cue. This is used to determine what\n   * the `VTTCue.position` is anchored to. The default is `'auto'`.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/positionAlign}\n   */\n  positionAlign = \"auto\";\n  /**\n   * Returns a double representing the size of the cue, as a percentage of the video size.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/size}\n   */\n  size = 100;\n  /**\n   * Returns an enum representing the alignment of all the lines of text within the cue box.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/VTTCue/align}\n   */\n  align = \"center\";\n  /**\n   * Additional styles associated with the cue.\n   */\n  style;\n}\n\nclass VTTRegion {\n  /**\n   * A string that identifies the region.\n   */\n  id = \"\";\n  /**\n   * A `double` representing the width of the region, as a percentage of the video.\n   */\n  width = 100;\n  /**\n   * A `double` representing the height of the region, in number of lines.\n   */\n  lines = 3;\n  /**\n   * A `double` representing the region anchor X offset, as a percentage of the region.\n   */\n  regionAnchorX = 0;\n  /**\n   * A `double` representing the region anchor Y offset, as a percentage of the region.\n   */\n  regionAnchorY = 100;\n  /**\n   * A `double` representing the viewport anchor X offset, as a percentage of the video.\n   */\n  viewportAnchorX = 0;\n  /**\n   * A `double` representing the viewport anchor Y offset, as a percentage of the video.\n   */\n  viewportAnchorY = 100;\n  /**\n   * An enum representing how adding new cues will move existing cues.\n   */\n  scroll = \"\";\n}\n\nconst COMMA$1 = \",\", PERCENT_SIGN$1 = \"%\";\nfunction toNumber(text) {\n  const num = parseInt(text, 10);\n  return !Number.isNaN(num) ? num : null;\n}\nfunction toPercentage(text) {\n  const num = parseInt(text.replace(PERCENT_SIGN$1, \"\"), 10);\n  return !Number.isNaN(num) && num >= 0 && num <= 100 ? num : null;\n}\nfunction toCoords(text) {\n  if (!text.includes(COMMA$1))\n    return null;\n  const [x, y] = text.split(COMMA$1).map(toPercentage);\n  return x !== null && y !== null ? [x, y] : null;\n}\nfunction toFloat(text) {\n  const num = parseFloat(text);\n  return !Number.isNaN(num) ? num : null;\n}\n\nconst HEADER_MAGIC = \"WEBVTT\", COMMA = \",\", PERCENT_SIGN = \"%\", SETTING_SEP_RE = /[:=]/, SETTING_LINE_RE = /^[\\s\\t]*(region|vertical|line|position|size|align)[:=]/, NOTE_BLOCK_START = \"NOTE\", REGION_BLOCK_START = \"REGION\", REGION_BLOCK_START_RE = /^REGION:?[\\s\\t]+/, SPACE_RE = /[\\s\\t]+/, TIMESTAMP_SEP = \"-->\", TIMESTAMP_SEP_RE = /[\\s\\t]*-->[\\s\\t]+/, ALIGN_RE = /start|center|end|left|right/, LINE_ALIGN_RE = /start|center|end/, POS_ALIGN_RE = /line-(?:left|right)|center|auto/, TIMESTAMP_RE = /^(?:(\\d{1,2}):)?(\\d{2}):(\\d{2})(?:\\.(\\d{1,3}))?$/;\nvar VTTBlock = /* @__PURE__ */ ((VTTBlock2) => {\n  VTTBlock2[VTTBlock2[\"None\"] = 0] = \"None\";\n  VTTBlock2[VTTBlock2[\"Header\"] = 1] = \"Header\";\n  VTTBlock2[VTTBlock2[\"Cue\"] = 2] = \"Cue\";\n  VTTBlock2[VTTBlock2[\"Region\"] = 3] = \"Region\";\n  VTTBlock2[VTTBlock2[\"Note\"] = 4] = \"Note\";\n  return VTTBlock2;\n})(VTTBlock || {});\nclass VTTParser {\n  _init;\n  _block = 0 /* None */;\n  _metadata = {};\n  _regions = {};\n  _cues = [];\n  _cue = null;\n  _region = null;\n  _errors = [];\n  _errorBuilder;\n  _prevLine = \"\";\n  async init(init) {\n    this._init = init;\n    if (init.strict)\n      this._block = 1 /* Header */;\n    if (init.errors)\n      this._errorBuilder = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this._cue) {\n        this._cues.push(this._cue);\n        this._init.onCue?.(this._cue);\n        this._cue = null;\n      } else if (this._region) {\n        this._regions[this._region.id] = this._region;\n        this._init.onRegion?.(this._region);\n        this._region = null;\n      } else if (this._block === 1 /* Header */) {\n        this._parseHeader(line, lineCount);\n        this._init.onHeaderMetadata?.(this._metadata);\n      }\n      this._block = 0 /* None */;\n    } else if (this._block) {\n      switch (this._block) {\n        case 1 /* Header */:\n          this._parseHeader(line, lineCount);\n          break;\n        case 2 /* Cue */:\n          if (this._cue) {\n            const hasText = this._cue.text.length > 0;\n            if (!hasText && SETTING_LINE_RE.test(line)) {\n              this._parseCueSettings(line.split(SPACE_RE), lineCount);\n            } else {\n              this._cue.text += (hasText ? \"\\n\" : \"\") + line;\n            }\n          }\n          break;\n        case 3 /* Region */:\n          this._parseRegionSettings(line.split(SPACE_RE), lineCount);\n          break;\n      }\n    } else if (line.startsWith(NOTE_BLOCK_START)) {\n      this._block = 4 /* Note */;\n    } else if (line.startsWith(REGION_BLOCK_START)) {\n      this._block = 3 /* Region */;\n      this._region = new VTTRegion();\n      this._parseRegionSettings(line.replace(REGION_BLOCK_START_RE, \"\").split(SPACE_RE), lineCount);\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this._parseTimestamp(line, lineCount);\n      if (result) {\n        this._cue = new VTTCue(result[0], result[1], \"\");\n        this._cue.id = this._prevLine;\n        this._parseCueSettings(result[2], lineCount);\n      }\n      this._block = 2 /* Cue */;\n    } else if (lineCount === 1) {\n      this._parseHeader(line, lineCount);\n    }\n    this._prevLine = line;\n  }\n  done() {\n    return {\n      metadata: this._metadata,\n      cues: this._cues,\n      regions: Object.values(this._regions),\n      errors: this._errors\n    };\n  }\n  _parseHeader(line, lineCount) {\n    if (lineCount > 1) {\n      if (SETTING_SEP_RE.test(line)) {\n        const [key, value] = line.split(SETTING_SEP_RE);\n        if (key)\n          this._metadata[key] = (value || \"\").replace(SPACE_RE, \"\");\n      }\n    } else if (line.startsWith(HEADER_MAGIC)) {\n      this._block = 1 /* Header */;\n    } else {\n      this._handleError(this._errorBuilder?._badVTTHeader());\n    }\n  }\n  _parseTimestamp(line, lineCount) {\n    const [startTimeText, trailingText = \"\"] = line.split(TIMESTAMP_SEP_RE), [endTimeText, ...settingsText] = trailingText.split(SPACE_RE), startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime, settingsText];\n    } else {\n      if (startTime === null) {\n        this._handleError(this._errorBuilder?._badStartTimestamp(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this._handleError(this._errorBuilder?._badEndTimestamp(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this._handleError(this._errorBuilder?._badRangeTimestamp(startTime, endTime, lineCount));\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#region-settings-parsing}\n   */\n  _parseRegionSettings(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      if (SETTING_SEP_RE.test(settings[i])) {\n        badValue = false;\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"id\":\n            this._region.id = value;\n            break;\n          case \"width\":\n            const width = toPercentage(value);\n            if (width !== null)\n              this._region.width = width;\n            else\n              badValue = true;\n            break;\n          case \"lines\":\n            const lines = toNumber(value);\n            if (lines !== null)\n              this._region.lines = lines;\n            else\n              badValue = true;\n            break;\n          case \"regionanchor\":\n            const region = toCoords(value);\n            if (region !== null) {\n              this._region.regionAnchorX = region[0];\n              this._region.regionAnchorY = region[1];\n            } else\n              badValue = true;\n            break;\n          case \"viewportanchor\":\n            const viewport = toCoords(value);\n            if (viewport !== null) {\n              this._region.viewportAnchorX = viewport[0];\n              this._region.viewportAnchorY = viewport[1];\n            } else\n              badValue = true;\n            break;\n          case \"scroll\":\n            if (value === \"up\")\n              this._region.scroll = \"up\";\n            else\n              badValue = true;\n            break;\n          default:\n            this._handleError(this._errorBuilder?._unknownRegionSetting(name, value, line));\n        }\n        if (badValue) {\n          this._handleError(this._errorBuilder?._badRegionSetting(name, value, line));\n        }\n      }\n    }\n  }\n  /**\n   * @see {@link https://www.w3.org/TR/webvtt1/#cue-timings-and-settings-parsing}\n   */\n  _parseCueSettings(settings, line) {\n    let badValue;\n    for (let i = 0; i < settings.length; i++) {\n      badValue = false;\n      if (SETTING_SEP_RE.test(settings[i])) {\n        const [name, value] = settings[i].split(SETTING_SEP_RE);\n        switch (name) {\n          case \"region\":\n            const region = this._regions[value];\n            if (region)\n              this._cue.region = region;\n            break;\n          case \"vertical\":\n            if (value === \"lr\" || value === \"rl\") {\n              this._cue.vertical = value;\n              this._cue.region = null;\n            } else\n              badValue = true;\n            break;\n          case \"line\":\n            const [linePos, lineAlign] = value.split(COMMA);\n            if (linePos.includes(PERCENT_SIGN)) {\n              const percentage = toPercentage(linePos);\n              if (percentage !== null) {\n                this._cue.line = percentage;\n                this._cue.snapToLines = false;\n              } else\n                badValue = true;\n            } else {\n              const number = toFloat(linePos);\n              if (number !== null)\n                this._cue.line = number;\n              else\n                badValue = true;\n            }\n            if (LINE_ALIGN_RE.test(lineAlign)) {\n              this._cue.lineAlign = lineAlign;\n            } else if (lineAlign) {\n              badValue = true;\n            }\n            if (this._cue.line !== \"auto\")\n              this._cue.region = null;\n            break;\n          case \"position\":\n            const [colPos, colAlign] = value.split(COMMA), position = toPercentage(colPos);\n            if (position !== null)\n              this._cue.position = position;\n            else\n              badValue = true;\n            if (colAlign && POS_ALIGN_RE.test(colAlign)) {\n              this._cue.positionAlign = colAlign;\n            } else if (colAlign) {\n              badValue = true;\n            }\n            break;\n          case \"size\":\n            const size = toPercentage(value);\n            if (size !== null) {\n              this._cue.size = size;\n              if (size < 100)\n                this._cue.region = null;\n            } else {\n              badValue = true;\n            }\n            break;\n          case \"align\":\n            if (ALIGN_RE.test(value)) {\n              this._cue.align = value;\n            } else {\n              badValue = true;\n            }\n            break;\n          default:\n            this._handleError(this._errorBuilder?._unknownCueSetting(name, value, line));\n        }\n        if (badValue) {\n          this._handleError(this._errorBuilder?._badCueSetting(name, value, line));\n        }\n      }\n    }\n  }\n  _handleError(error) {\n    if (!error)\n      return;\n    this._errors.push(error);\n    if (this._init.strict) {\n      this._init.cancel();\n      throw error;\n    } else {\n      this._init.onError?.(error);\n    }\n  }\n}\nfunction parseVTTTimestamp(timestamp) {\n  const match = timestamp.match(TIMESTAMP_RE);\n  if (!match)\n    return null;\n  const hours = match[1] ? parseInt(match[1], 10) : 0, minutes = parseInt(match[2], 10), seconds = parseInt(match[3], 10), milliseconds = match[4] ? parseInt(match[4].padEnd(3, \"0\"), 10) : 0, total = hours * 3600 + minutes * 60 + seconds + milliseconds / 1e3;\n  if (hours < 0 || minutes < 0 || seconds < 0 || milliseconds < 0 || minutes > 59 || seconds > 59) {\n    return null;\n  }\n  return total;\n}\nfunction createVTTParser() {\n  return new VTTParser();\n}\n\nvar vttParser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  VTTBlock: VTTBlock,\n  VTTParser: VTTParser,\n  default: createVTTParser,\n  parseVTTTimestamp: parseVTTTimestamp\n});\n\nconst DIGIT_RE = /[0-9]/, MULTI_SPACE_RE = /[\\s\\t]+/, TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\",\n  timestamp: \"span\"\n}, HTML_ENTITIES = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&quot;\": '\"',\n  \"&#39;\": \"'\",\n  \"&nbsp;\": \"\\xA0\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\"\n}, HTML_ENTITY_RE = /&(?:amp|lt|gt|quot|#(0+)?39|nbsp|lrm|rlm);/g, COLORS = /* @__PURE__ */ new Set([\n  \"white\",\n  \"lime\",\n  \"cyan\",\n  \"red\",\n  \"yellow\",\n  \"magenta\",\n  \"blue\",\n  \"black\"\n]), BLOCK_TYPES = /* @__PURE__ */ new Set(Object.keys(TAG_NAME));\nfunction tokenizeVTTCue(cue) {\n  let buffer = \"\", mode = 1 /* Data */, result = [], stack = [], node;\n  for (let i = 0; i < cue.text.length; i++) {\n    const char = cue.text[i];\n    switch (mode) {\n      case 1 /* Data */:\n        if (char === \"<\") {\n          addText();\n          mode = 2 /* Tag */;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 2 /* Tag */:\n        switch (char) {\n          case \"\\n\":\n          case \"\t\":\n          case \" \":\n            addNode();\n            mode = 4 /* Annotation */;\n            break;\n          case \".\":\n            addNode();\n            mode = 3 /* Class */;\n            break;\n          case \"/\":\n            mode = 5 /* EndTag */;\n            break;\n          case \">\":\n            addNode();\n            mode = 1 /* Data */;\n            break;\n          default:\n            if (!buffer && DIGIT_RE.test(char))\n              mode = 6 /* Timestamp */;\n            buffer += char;\n            break;\n        }\n        break;\n      case 3 /* Class */:\n        switch (char) {\n          case \"\t\":\n          case \" \":\n          case \"\\n\":\n            addClass();\n            if (node)\n              node.class?.trim();\n            mode = 4 /* Annotation */;\n            break;\n          case \".\":\n            addClass();\n            break;\n          case \">\":\n            addClass();\n            if (node)\n              node.class?.trim();\n            mode = 1 /* Data */;\n            break;\n          default:\n            buffer += char;\n        }\n        break;\n      case 4 /* Annotation */:\n        if (char === \">\") {\n          buffer = buffer.replace(MULTI_SPACE_RE, \" \");\n          if (node?.type === \"v\")\n            node.voice = replaceHTMLEntities(buffer);\n          else if (node?.type === \"lang\")\n            node.lang = replaceHTMLEntities(buffer);\n          buffer = \"\";\n          mode = 1 /* Data */;\n        } else {\n          buffer += char;\n        }\n        break;\n      case 5 /* EndTag */:\n        if (char === \">\") {\n          buffer = \"\";\n          node = stack.pop();\n          mode = 1 /* Data */;\n        }\n        break;\n      case 6 /* Timestamp */:\n        if (char === \">\") {\n          const time = parseVTTTimestamp(buffer);\n          if (time !== null && time >= cue.startTime && time <= cue.endTime) {\n            buffer = \"timestamp\";\n            addNode();\n            node.time = time;\n          }\n          buffer = \"\";\n          mode = 1 /* Data */;\n        } else {\n          buffer += char;\n        }\n        break;\n    }\n  }\n  function addNode() {\n    if (BLOCK_TYPES.has(buffer)) {\n      const parent = node;\n      node = createBlockNode(buffer);\n      if (parent) {\n        if (stack[stack.length - 1] !== parent)\n          stack.push(parent);\n        parent.children.push(node);\n      } else\n        result.push(node);\n    }\n    buffer = \"\";\n    mode = 1 /* Data */;\n  }\n  function addClass() {\n    if (node && buffer) {\n      const color = buffer.replace(\"bg_\", \"\");\n      if (COLORS.has(color)) {\n        node[buffer.startsWith(\"bg_\") ? \"bgColor\" : \"color\"] = color;\n      } else {\n        node.class = !node.class ? buffer : node.class + \" \" + buffer;\n      }\n    }\n    buffer = \"\";\n  }\n  function addText() {\n    if (!buffer)\n      return;\n    const text = { type: \"text\", data: replaceHTMLEntities(buffer) };\n    node ? node.children.push(text) : result.push(text);\n    buffer = \"\";\n  }\n  if (mode === 1 /* Data */)\n    addText();\n  return result;\n}\nfunction createBlockNode(type) {\n  return {\n    tagName: TAG_NAME[type],\n    type,\n    children: []\n  };\n}\nfunction replaceHTMLEntities(text) {\n  return text.replace(HTML_ENTITY_RE, (entity) => HTML_ENTITIES[entity] || \"'\");\n}\n\nfunction setCSSVar(el, name, value) {\n  el.style.setProperty(`--${name}`, value + \"\");\n}\nfunction setDataAttr(el, name, value = true) {\n  el.setAttribute(`data-${name}`, value === true ? \"\" : value + \"\");\n}\nfunction setPartAttr(el, name) {\n  el.setAttribute(\"part\", name);\n}\nfunction getLineHeight(el) {\n  return parseFloat(getComputedStyle(el).lineHeight) || 0;\n}\n\nfunction createVTTCueTemplate(cue) {\n  const template = document.createElement(\"template\");\n  template.innerHTML = renderVTTCueString(cue);\n  return { cue, content: template.content };\n}\nfunction renderVTTCueString(cue, currentTime = 0) {\n  return renderVTTTokensString(tokenizeVTTCue(cue), currentTime);\n}\nfunction renderVTTTokensString(tokens, currentTime = 0) {\n  let attrs, result = \"\";\n  for (const token of tokens) {\n    if (token.type === \"text\") {\n      result += token.data;\n    } else {\n      const isTimestamp = token.type === \"timestamp\";\n      attrs = {};\n      attrs.class = token.class;\n      attrs.title = token.type === \"v\" && token.voice;\n      attrs.lang = token.type === \"lang\" && token.lang;\n      attrs[\"part\"] = token.type === \"v\" && \"voice\";\n      if (isTimestamp) {\n        attrs[\"part\"] = \"timed\";\n        attrs[\"data-time\"] = token.time;\n        attrs[\"data-future\"] = token.time > currentTime;\n        attrs[\"data-past\"] = token.time < currentTime;\n      }\n      attrs.style = `${token.color ? `color: ${token.color};` : \"\"}${token.bgColor ? `background-color: ${token.bgColor};` : \"\"}`;\n      const attributes = Object.entries(attrs).filter((v) => v[1]).map((v) => `${v[0]}=\"${v[1] === true ? \"\" : v[1]}\"`).join(\" \");\n      result += `<${token.tagName}${attributes ? \" \" + attributes : \"\"}>${renderVTTTokensString(\n        token.children\n      )}</${token.tagName}>`;\n    }\n  }\n  return result;\n}\nfunction updateTimedVTTCueNodes(root, currentTime) {\n  for (const el of root.querySelectorAll('[part=\"timed\"]')) {\n    const time = Number(el.getAttribute(\"data-time\"));\n    if (Number.isNaN(time))\n      continue;\n    if (time > currentTime)\n      setDataAttr(el, \"future\");\n    else\n      el.removeAttribute(\"data-future\");\n    if (time < currentTime)\n      setDataAttr(el, \"past\");\n    else\n      el.removeAttribute(\"data-past\");\n  }\n}\n\nfunction debounce(fn, delay) {\n  let timeout = null, args;\n  function run() {\n    clear();\n    fn(...args);\n    args = void 0;\n  }\n  function clear() {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  function debounce2() {\n    args = [].slice.call(arguments);\n    clear();\n    timeout = setTimeout(run, delay);\n  }\n  return debounce2;\n}\n\nconst STARTING_BOX = Symbol(\"STARTING_BOX\" );\nfunction createBox(box) {\n  if (box instanceof HTMLElement) {\n    return {\n      top: box.offsetTop,\n      width: box.clientWidth,\n      height: box.clientHeight,\n      left: box.offsetLeft,\n      right: box.offsetLeft + box.clientWidth,\n      bottom: box.offsetTop + box.clientHeight\n    };\n  }\n  return { ...box };\n}\nfunction moveBox(box, axis, delta) {\n  switch (axis) {\n    case \"+x\":\n      box.left += delta;\n      box.right += delta;\n      break;\n    case \"-x\":\n      box.left -= delta;\n      box.right -= delta;\n      break;\n    case \"+y\":\n      box.top += delta;\n      box.bottom += delta;\n      break;\n    case \"-y\":\n      box.top -= delta;\n      box.bottom -= delta;\n      break;\n  }\n}\nfunction isBoxCollision(a, b) {\n  return a.left <= b.right && a.right >= b.left && a.top <= b.bottom && a.bottom >= b.top;\n}\nfunction isAnyBoxCollision(box, boxes) {\n  for (let i = 0; i < boxes.length; i++)\n    if (isBoxCollision(box, boxes[i]))\n      return boxes[i];\n  return null;\n}\nfunction isWithinBox(container, box) {\n  return box.top >= 0 && box.bottom <= container.height && box.left >= 0 && box.right <= container.width;\n}\nfunction isBoxOutOfBounds(container, box, axis) {\n  switch (axis) {\n    case \"+x\":\n      return box.left < 0;\n    case \"-x\":\n      return box.right > container.width;\n    case \"+y\":\n      return box.top < 0;\n    case \"-y\":\n      return box.bottom > container.height;\n  }\n}\nfunction calcBoxIntersectPercentage(container, box) {\n  const x = Math.max(0, Math.min(container.width, box.right) - Math.max(0, box.left)), y = Math.max(0, Math.min(container.height, box.bottom) - Math.max(0, box.top)), intersectArea = x * y;\n  return intersectArea / (container.height * container.width);\n}\nfunction createCSSBox(container, box) {\n  return {\n    top: box.top / container.height,\n    left: box.left / container.width,\n    right: (container.width - box.right) / container.width,\n    bottom: (container.height - box.bottom) / container.height\n  };\n}\nfunction resolveRelativeBox(container, box) {\n  box.top = box.top * container.height;\n  box.left = box.left * container.width;\n  box.right = container.width - box.right * container.width;\n  box.bottom = container.height - box.bottom * container.height;\n  return box;\n}\nconst BOX_SIDES = [\"top\", \"left\", \"right\", \"bottom\"];\nfunction setBoxCSSVars(el, container, box, prefix) {\n  const cssBox = createCSSBox(container, box);\n  for (const side of BOX_SIDES) {\n    setCSSVar(el, `${prefix}-${side}`, cssBox[side] * 100 + \"%\");\n  }\n}\nfunction avoidBoxCollisions(container, box, boxes, axis) {\n  let percentage = 1, positionedBox, startBox = { ...box };\n  for (let i = 0; i < axis.length; i++) {\n    while (isBoxOutOfBounds(container, box, axis[i]) || isWithinBox(container, box) && isAnyBoxCollision(box, boxes)) {\n      moveBox(box, axis[i], 1);\n    }\n    if (isWithinBox(container, box))\n      return box;\n    const intersection = calcBoxIntersectPercentage(container, box);\n    if (percentage > intersection) {\n      positionedBox = { ...box };\n      percentage = intersection;\n    }\n    box = { ...startBox };\n  }\n  return positionedBox || startBox;\n}\n\nconst POSITION_OVERRIDE = Symbol(\"POSITION_OVERRIDE\" );\nfunction positionCue(container, cue, displayEl, boxes) {\n  let cueEl = displayEl.firstElementChild, line = computeCueLine(cue), displayBox, axis = [];\n  if (!displayEl[STARTING_BOX]) {\n    displayEl[STARTING_BOX] = createStartingBox(container, displayEl);\n  }\n  displayBox = resolveRelativeBox(container, { ...displayEl[STARTING_BOX] });\n  if (displayEl[POSITION_OVERRIDE]) {\n    axis = [displayEl[POSITION_OVERRIDE] === \"top\" ? \"+y\" : \"-y\", \"+x\", \"-x\"];\n  } else if (cue.snapToLines) {\n    let size;\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n    let step = getLineHeight(cueEl), position = step * Math.round(line), maxPosition = container[size] + step, initialAxis = axis[0];\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n    if (line < 0) {\n      position += cue.vertical === \"\" ? container.height : container.width;\n      axis = axis.reverse();\n    }\n    moveBox(displayBox, initialAxis, position);\n  } else {\n    const isHorizontal = cue.vertical === \"\", posAxis = isHorizontal ? \"+y\" : \"+x\", size = isHorizontal ? displayBox.height : displayBox.width;\n    moveBox(\n      displayBox,\n      posAxis,\n      (isHorizontal ? container.height : container.width) * line / 100\n    );\n    moveBox(\n      displayBox,\n      posAxis,\n      cue.lineAlign === \"center\" ? size / 2 : cue.lineAlign === \"end\" ? size : 0\n    );\n    axis = isHorizontal ? [\"-y\", \"+y\", \"-x\", \"+x\"] : [\"-x\", \"+x\", \"-y\", \"+y\"];\n  }\n  displayBox = avoidBoxCollisions(container, displayBox, boxes, axis);\n  setBoxCSSVars(displayEl, container, displayBox, \"cue\");\n  return displayBox;\n}\nfunction createStartingBox(container, cueEl) {\n  const box = createBox(cueEl), pos = getStyledPositions(cueEl);\n  cueEl[POSITION_OVERRIDE] = false;\n  if (pos.top) {\n    box.top = pos.top;\n    box.bottom = pos.top + box.height;\n    cueEl[POSITION_OVERRIDE] = \"top\";\n  }\n  if (pos.bottom) {\n    const bottom = container.height - pos.bottom;\n    box.top = bottom - box.height;\n    box.bottom = bottom;\n    cueEl[POSITION_OVERRIDE] = \"bottom\";\n  }\n  if (pos.left)\n    box.left = pos.left;\n  if (pos.right)\n    box.right = container.width - pos.right;\n  return createCSSBox(container, box);\n}\nfunction getStyledPositions(el) {\n  const positions = {};\n  for (const side of BOX_SIDES) {\n    positions[side] = parseFloat(el.style.getPropertyValue(`--cue-${side}`));\n  }\n  return positions;\n}\nfunction computeCueLine(cue) {\n  if (cue.line === \"auto\") {\n    if (!cue.snapToLines) {\n      return 100;\n    } else {\n      return -1;\n    }\n  }\n  return cue.line;\n}\nfunction computeCuePosition(cue) {\n  if (cue.position === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n      case \"left\":\n        return 0;\n      case \"right\":\n      case \"end\":\n        return 100;\n      default:\n        return 50;\n    }\n  }\n  return cue.position;\n}\nfunction computeCuePositionAlignment(cue, dir) {\n  if (cue.positionAlign === \"auto\") {\n    switch (cue.align) {\n      case \"start\":\n        return dir === \"ltr\" ? \"line-left\" : \"line-right\";\n      case \"end\":\n        return dir === \"ltr\" ? \"line-right\" : \"line-left\";\n      case \"center\":\n        return \"center\";\n      default:\n        return `line-${cue.align}`;\n    }\n  }\n  return cue.positionAlign;\n}\n\nconst REGION_AXIS = [\"-y\", \"+y\", \"-x\", \"+x\"];\nfunction positionRegion(container, region, regionEl, boxes) {\n  let cues = Array.from(regionEl.querySelectorAll('[part=\"cue-display\"]')), height = 0, limit = Math.max(0, cues.length - region.lines);\n  for (let i = cues.length - 1; i >= limit; i--) {\n    height += cues[i].offsetHeight;\n  }\n  setCSSVar(regionEl, \"region-height\", height + \"px\");\n  if (!regionEl[STARTING_BOX]) {\n    regionEl[STARTING_BOX] = createCSSBox(container, createBox(regionEl));\n  }\n  let box = { ...regionEl[STARTING_BOX] };\n  box = resolveRelativeBox(container, box);\n  box.width = regionEl.clientWidth;\n  box.height = height;\n  box.right = box.left + box.width;\n  box.bottom = box.top + height;\n  box = avoidBoxCollisions(container, box, boxes, REGION_AXIS);\n  setBoxCSSVars(regionEl, container, box, \"region\");\n  return box;\n}\n\nclass CaptionsRenderer {\n  overlay;\n  _overlayBox;\n  _currentTime = 0;\n  _dir = \"ltr\";\n  _activeCues = [];\n  _isResizing = false;\n  _resizeObserver;\n  _regions = /* @__PURE__ */ new Map();\n  _cues = /* @__PURE__ */ new Map();\n  /* Text direction. */\n  get dir() {\n    return this._dir;\n  }\n  set dir(dir) {\n    this._dir = dir;\n    setDataAttr(this.overlay, \"dir\", dir);\n  }\n  get currentTime() {\n    return this._currentTime;\n  }\n  set currentTime(time) {\n    this._currentTime = time;\n    this.update();\n  }\n  constructor(overlay, init) {\n    this.overlay = overlay;\n    this.dir = init?.dir ?? \"ltr\";\n    overlay.setAttribute(\"translate\", \"yes\");\n    overlay.setAttribute(\"aria-live\", \"off\");\n    overlay.setAttribute(\"aria-atomic\", \"true\");\n    setPartAttr(overlay, \"captions\");\n    this._updateOverlay();\n    this._resizeObserver = new ResizeObserver(this._resizing.bind(this));\n    this._resizeObserver.observe(overlay);\n  }\n  changeTrack({ regions, cues }) {\n    this.reset();\n    this._buildRegions(regions);\n    for (const cue of cues)\n      this._cues.set(cue, null);\n    this.update();\n  }\n  addCue(cue) {\n    this._cues.set(cue, null);\n    this.update();\n  }\n  removeCue(cue) {\n    this._cues.delete(cue);\n    this.update();\n  }\n  update(forceUpdate = false) {\n    this._render(forceUpdate);\n  }\n  reset() {\n    this._cues.clear();\n    this._regions.clear();\n    this._activeCues = [];\n    this.overlay.textContent = \"\";\n  }\n  destroy() {\n    this.reset();\n    this._resizeObserver.disconnect();\n  }\n  _resizing() {\n    this._isResizing = true;\n    this._resize();\n  }\n  _resize = debounce(() => {\n    this._isResizing = false;\n    this._updateOverlay();\n    for (const el of this._regions.values()) {\n      el[STARTING_BOX] = null;\n    }\n    for (const el of this._cues.values()) {\n      if (el)\n        el[STARTING_BOX] = null;\n    }\n    this._render(true);\n  }, 50);\n  _updateOverlay() {\n    this._overlayBox = createBox(this.overlay);\n    setCSSVar(this.overlay, \"overlay-width\", this._overlayBox.width + \"px\");\n    setCSSVar(this.overlay, \"overlay-height\", this._overlayBox.height + \"px\");\n  }\n  _render(forceUpdate = false) {\n    if (!this._cues.size || this._isResizing)\n      return;\n    let cue, activeCues = [...this._cues.keys()].filter((cue2) => this._currentTime >= cue2.startTime && this._currentTime <= cue2.endTime).sort(\n      (cueA, cueB) => cueA.startTime !== cueB.startTime ? cueA.startTime - cueB.startTime : cueA.endTime - cueB.endTime\n    ), activeRegions = activeCues.map((cue2) => cue2.region);\n    for (let i = 0; i < this._activeCues.length; i++) {\n      cue = this._activeCues[i];\n      if (activeCues[i] === cue)\n        continue;\n      if (cue.region && !activeRegions.includes(cue.region)) {\n        const regionEl = this._regions.get(cue.region.id);\n        if (regionEl) {\n          regionEl.removeAttribute(\"data-active\");\n          forceUpdate = true;\n        }\n      }\n      const cueEl = this._cues.get(cue);\n      if (cueEl) {\n        cueEl.remove();\n        forceUpdate = true;\n      }\n    }\n    for (let i = 0; i < activeCues.length; i++) {\n      cue = activeCues[i];\n      let cueEl = this._cues.get(cue);\n      if (!cueEl)\n        this._cues.set(cue, cueEl = this._createCueElement(cue));\n      const regionEl = this._hasRegion(cue) && this._regions.get(cue.region.id);\n      if (regionEl && !regionEl.hasAttribute(\"data-active\")) {\n        requestAnimationFrame(() => setDataAttr(regionEl, \"active\"));\n        forceUpdate = true;\n      }\n      if (!cueEl.isConnected) {\n        (regionEl || this.overlay).append(cueEl);\n        forceUpdate = true;\n      }\n    }\n    if (forceUpdate) {\n      const boxes = [], seen = /* @__PURE__ */ new Set();\n      for (let i = activeCues.length - 1; i >= 0; i--) {\n        cue = activeCues[i];\n        if (seen.has(cue.region || cue))\n          continue;\n        const isRegion = this._hasRegion(cue), el = isRegion ? this._regions.get(cue.region.id) : this._cues.get(cue);\n        if (isRegion) {\n          boxes.push(positionRegion(this._overlayBox, cue.region, el, boxes));\n        } else {\n          boxes.push(positionCue(this._overlayBox, cue, el, boxes));\n        }\n        seen.add(isRegion ? cue.region : cue);\n      }\n    }\n    updateTimedVTTCueNodes(this.overlay, this._currentTime);\n    this._activeCues = activeCues;\n  }\n  _buildRegions(regions) {\n    if (!regions)\n      return;\n    for (const region of regions) {\n      const el = this._createRegionElement(region);\n      this._regions.set(region.id, el);\n      this.overlay.append(el);\n    }\n  }\n  _createRegionElement(region) {\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"region\");\n    setDataAttr(el, \"id\", region.id);\n    setDataAttr(el, \"scroll\", region.scroll);\n    setCSSVar(el, \"region-width\", region.width + \"%\");\n    setCSSVar(el, \"region-anchor-x\", region.regionAnchorX);\n    setCSSVar(el, \"region-anchor-y\", region.regionAnchorY);\n    setCSSVar(el, \"region-viewport-anchor-x\", region.viewportAnchorX);\n    setCSSVar(el, \"region-viewport-anchor-y\", region.viewportAnchorY);\n    setCSSVar(el, \"region-lines\", region.lines);\n    return el;\n  }\n  _createCueElement(cue) {\n    const display = document.createElement(\"div\"), position = computeCuePosition(cue), positionAlignment = computeCuePositionAlignment(cue, this._dir);\n    setPartAttr(display, \"cue-display\");\n    if (cue.vertical !== \"\")\n      setDataAttr(display, \"vertical\");\n    setCSSVar(display, \"cue-text-align\", cue.align);\n    if (cue.style) {\n      for (const prop of Object.keys(cue.style)) {\n        display.style.setProperty(prop, cue.style[prop]);\n      }\n    }\n    if (!this._hasRegion(cue)) {\n      setCSSVar(\n        display,\n        \"cue-writing-mode\",\n        cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\"\n      );\n      if (!cue.style?.[\"--cue-width\"]) {\n        let maxSize = position;\n        if (positionAlignment === \"line-left\") {\n          maxSize = 100 - position;\n        } else if (positionAlignment === \"center\" && position <= 50) {\n          maxSize = position * 2;\n        } else if (positionAlignment === \"center\" && position > 50) {\n          maxSize = (100 - position) * 2;\n        }\n        const size = cue.size < maxSize ? cue.size : maxSize;\n        if (cue.vertical === \"\")\n          setCSSVar(display, \"cue-width\", size + \"%\");\n        else\n          setCSSVar(display, \"cue-height\", size + \"%\");\n      }\n    } else {\n      setCSSVar(\n        display,\n        \"cue-offset\",\n        `${position - (positionAlignment === \"line-right\" ? 100 : positionAlignment === \"center\" ? 50 : 0)}%`\n      );\n    }\n    const el = document.createElement(\"div\");\n    setPartAttr(el, \"cue\");\n    if (cue.id)\n      setDataAttr(el, \"id\", cue.id);\n    el.innerHTML = renderVTTCueString(cue);\n    display.append(el);\n    return display;\n  }\n  _hasRegion(cue) {\n    return cue.region && cue.size === 100 && cue.vertical === \"\" && cue.line === \"auto\";\n  }\n}\n\nexport { CaptionsRenderer as C, ParseError as P, TextCue as T, VTTParser as V, VTTBlock as a, VTTCue as b, ParseErrorCode as c, parseResponse as d, parseByteStream as e, parseText as f, parseTextStream as g, VTTRegion as h, createVTTCueTemplate as i, renderVTTTokensString as j, parseVTTTimestamp as p, renderVTTCueString as r, tokenizeVTTCue as t, updateTimedVTTCueNodes as u };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}