{"ast":null,"code":"import { listenEvent } from 'maverick.js/std';\nimport { P as LIST_ADD, X as LIST_REMOVE, L as LIST_SELECT } from '../../media-core.js';\nclass NativeAudioTracks {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._nativeTracks.onaddtrack = this._onAddNativeTrack.bind(this);\n    this._nativeTracks.onremovetrack = this._onRemoveNativeTrack.bind(this);\n    this._nativeTracks.onchange = this._onChangeNativeTrack.bind(this);\n    listenEvent(this._context.audioTracks, \"change\", this._onChangeTrack.bind(this));\n  }\n  get _nativeTracks() {\n    return this._provider.media.audioTracks;\n  }\n  _onAddNativeTrack(event) {\n    const _track = event.track;\n    if (_track.label === \"\") return;\n    const audioTrack = {\n      id: _track.id + \"\",\n      label: _track.label,\n      language: _track.language,\n      kind: _track.kind,\n      selected: false\n    };\n    this._context.audioTracks[LIST_ADD](audioTrack, event);\n    if (_track.enabled) audioTrack.selected = true;\n  }\n  _onRemoveNativeTrack(event) {\n    const track = this._context.audioTracks.getById(event.track.id);\n    if (track) this._context.audioTracks[LIST_REMOVE](track, event);\n  }\n  _onChangeNativeTrack(event) {\n    let enabledTrack = this._getEnabledNativeTrack();\n    if (!enabledTrack) return;\n    const track = this._context.audioTracks.getById(enabledTrack.id);\n    if (track) this._context.audioTracks[LIST_SELECT](track, true, event);\n  }\n  _getEnabledNativeTrack() {\n    return Array.from(this._nativeTracks).find(track => track.enabled);\n  }\n  _onChangeTrack(event) {\n    const {\n      current\n    } = event.detail;\n    if (!current) return;\n    const track = this._nativeTracks.getTrackById(current.id);\n    if (track) {\n      const prev = this._getEnabledNativeTrack();\n      if (prev) prev.enabled = false;\n      track.enabled = true;\n    }\n  }\n}\nexport { NativeAudioTracks as N };","map":{"version":3,"names":["listenEvent","P","LIST_ADD","X","LIST_REMOVE","L","LIST_SELECT","NativeAudioTracks","constructor","_provider","_context","_nativeTracks","onaddtrack","_onAddNativeTrack","bind","onremovetrack","_onRemoveNativeTrack","onchange","_onChangeNativeTrack","audioTracks","_onChangeTrack","media","event","_track","track","label","audioTrack","id","language","kind","selected","enabled","getById","enabledTrack","_getEnabledNativeTrack","Array","from","find","current","detail","getTrackById","prev","N"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/html/native-audio-tracks.js"],"sourcesContent":["import { listenEvent } from 'maverick.js/std';\nimport { P as LIST_ADD, X as LIST_REMOVE, L as LIST_SELECT } from '../../media-core.js';\n\nclass NativeAudioTracks {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._nativeTracks.onaddtrack = this._onAddNativeTrack.bind(this);\n    this._nativeTracks.onremovetrack = this._onRemoveNativeTrack.bind(this);\n    this._nativeTracks.onchange = this._onChangeNativeTrack.bind(this);\n    listenEvent(this._context.audioTracks, \"change\", this._onChangeTrack.bind(this));\n  }\n  get _nativeTracks() {\n    return this._provider.media.audioTracks;\n  }\n  _onAddNativeTrack(event) {\n    const _track = event.track;\n    if (_track.label === \"\")\n      return;\n    const audioTrack = {\n      id: _track.id + \"\",\n      label: _track.label,\n      language: _track.language,\n      kind: _track.kind,\n      selected: false\n    };\n    this._context.audioTracks[LIST_ADD](audioTrack, event);\n    if (_track.enabled)\n      audioTrack.selected = true;\n  }\n  _onRemoveNativeTrack(event) {\n    const track = this._context.audioTracks.getById(event.track.id);\n    if (track)\n      this._context.audioTracks[LIST_REMOVE](track, event);\n  }\n  _onChangeNativeTrack(event) {\n    let enabledTrack = this._getEnabledNativeTrack();\n    if (!enabledTrack)\n      return;\n    const track = this._context.audioTracks.getById(enabledTrack.id);\n    if (track)\n      this._context.audioTracks[LIST_SELECT](track, true, event);\n  }\n  _getEnabledNativeTrack() {\n    return Array.from(this._nativeTracks).find((track) => track.enabled);\n  }\n  _onChangeTrack(event) {\n    const { current } = event.detail;\n    if (!current)\n      return;\n    const track = this._nativeTracks.getTrackById(current.id);\n    if (track) {\n      const prev = this._getEnabledNativeTrack();\n      if (prev)\n        prev.enabled = false;\n      track.enabled = true;\n    }\n  }\n}\n\nexport { NativeAudioTracks as N };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,WAAW,QAAQ,qBAAqB;AAEvF,MAAMC,iBAAiB,CAAC;EACtBC,WAAWA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAC/B,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,CAACC,UAAU,GAAG,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;IACjE,IAAI,CAACH,aAAa,CAACI,aAAa,GAAG,IAAI,CAACC,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;IACvE,IAAI,CAACH,aAAa,CAACM,QAAQ,GAAG,IAAI,CAACC,oBAAoB,CAACJ,IAAI,CAAC,IAAI,CAAC;IAClEd,WAAW,CAAC,IAAI,CAACU,QAAQ,CAACS,WAAW,EAAE,QAAQ,EAAE,IAAI,CAACC,cAAc,CAACN,IAAI,CAAC,IAAI,CAAC,CAAC;EAClF;EACA,IAAIH,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACF,SAAS,CAACY,KAAK,CAACF,WAAW;EACzC;EACAN,iBAAiBA,CAACS,KAAK,EAAE;IACvB,MAAMC,MAAM,GAAGD,KAAK,CAACE,KAAK;IAC1B,IAAID,MAAM,CAACE,KAAK,KAAK,EAAE,EACrB;IACF,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEJ,MAAM,CAACI,EAAE,GAAG,EAAE;MAClBF,KAAK,EAAEF,MAAM,CAACE,KAAK;MACnBG,QAAQ,EAAEL,MAAM,CAACK,QAAQ;MACzBC,IAAI,EAAEN,MAAM,CAACM,IAAI;MACjBC,QAAQ,EAAE;IACZ,CAAC;IACD,IAAI,CAACpB,QAAQ,CAACS,WAAW,CAACjB,QAAQ,CAAC,CAACwB,UAAU,EAAEJ,KAAK,CAAC;IACtD,IAAIC,MAAM,CAACQ,OAAO,EAChBL,UAAU,CAACI,QAAQ,GAAG,IAAI;EAC9B;EACAd,oBAAoBA,CAACM,KAAK,EAAE;IAC1B,MAAME,KAAK,GAAG,IAAI,CAACd,QAAQ,CAACS,WAAW,CAACa,OAAO,CAACV,KAAK,CAACE,KAAK,CAACG,EAAE,CAAC;IAC/D,IAAIH,KAAK,EACP,IAAI,CAACd,QAAQ,CAACS,WAAW,CAACf,WAAW,CAAC,CAACoB,KAAK,EAAEF,KAAK,CAAC;EACxD;EACAJ,oBAAoBA,CAACI,KAAK,EAAE;IAC1B,IAAIW,YAAY,GAAG,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAChD,IAAI,CAACD,YAAY,EACf;IACF,MAAMT,KAAK,GAAG,IAAI,CAACd,QAAQ,CAACS,WAAW,CAACa,OAAO,CAACC,YAAY,CAACN,EAAE,CAAC;IAChE,IAAIH,KAAK,EACP,IAAI,CAACd,QAAQ,CAACS,WAAW,CAACb,WAAW,CAAC,CAACkB,KAAK,EAAE,IAAI,EAAEF,KAAK,CAAC;EAC9D;EACAY,sBAAsBA,CAAA,EAAG;IACvB,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACzB,aAAa,CAAC,CAAC0B,IAAI,CAAEb,KAAK,IAAKA,KAAK,CAACO,OAAO,CAAC;EACtE;EACAX,cAAcA,CAACE,KAAK,EAAE;IACpB,MAAM;MAAEgB;IAAQ,CAAC,GAAGhB,KAAK,CAACiB,MAAM;IAChC,IAAI,CAACD,OAAO,EACV;IACF,MAAMd,KAAK,GAAG,IAAI,CAACb,aAAa,CAAC6B,YAAY,CAACF,OAAO,CAACX,EAAE,CAAC;IACzD,IAAIH,KAAK,EAAE;MACT,MAAMiB,IAAI,GAAG,IAAI,CAACP,sBAAsB,CAAC,CAAC;MAC1C,IAAIO,IAAI,EACNA,IAAI,CAACV,OAAO,GAAG,KAAK;MACtBP,KAAK,CAACO,OAAO,GAAG,IAAI;IACtB;EACF;AACF;AAEA,SAASxB,iBAAiB,IAAImC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}