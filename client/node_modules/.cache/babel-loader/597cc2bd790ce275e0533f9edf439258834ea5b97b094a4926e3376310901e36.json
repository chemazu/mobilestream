{"ast":null,"code":"import { onDispose } from 'maverick.js';\nimport { H as TextTrack, Z as TEXT_TRACK_NATIVE, J as TEXT_TRACK_READY_STATE, _ as TEXT_TRACK_NATIVE_HLS } from '../../media-core.js';\nclass NativeHLSTextTracks {\n  constructor(_video, _context) {\n    this._video = _video;\n    this._context = _context;\n    _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n    onDispose(this._onDispose.bind(this));\n  }\n  _onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this._video, nativeTrack)) return;\n    const track = new TextTrack({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label,\n      language: nativeTrack.language,\n      type: \"vtt\"\n    });\n    track[TEXT_TRACK_NATIVE] = {\n      track: nativeTrack\n    };\n    track[TEXT_TRACK_READY_STATE] = 2;\n    track[TEXT_TRACK_NATIVE_HLS] = true;\n    let lastIndex = 0;\n    const onCueChange = event2 => {\n      if (!nativeTrack.cues) return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this._context.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  _onDispose() {\n    this._video.textTracks.onaddtrack = null;\n    for (const track of this._context.textTracks) {\n      const nativeTrack = track[TEXT_TRACK_NATIVE]?.track;\n      if (nativeTrack?.oncuechange) nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find(el => el.track === track);\n}\nexport { NativeHLSTextTracks as N };","map":{"version":3,"names":["onDispose","H","TextTrack","Z","TEXT_TRACK_NATIVE","J","TEXT_TRACK_READY_STATE","_","TEXT_TRACK_NATIVE_HLS","NativeHLSTextTracks","constructor","_video","_context","textTracks","onaddtrack","_onAddTrack","bind","_onDispose","event","nativeTrack","track","findTextTrackElement","id","kind","label","language","type","lastIndex","onCueChange","event2","cues","i","length","addCue","oncuechange","add","setMode","mode","video","Array","from","children","find","el","N"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/video/native-hls-text-tracks.js"],"sourcesContent":["import { onDispose } from 'maverick.js';\nimport { H as TextTrack, Z as TEXT_TRACK_NATIVE, J as TEXT_TRACK_READY_STATE, _ as TEXT_TRACK_NATIVE_HLS } from '../../media-core.js';\n\nclass NativeHLSTextTracks {\n  constructor(_video, _context) {\n    this._video = _video;\n    this._context = _context;\n    _video.textTracks.onaddtrack = this._onAddTrack.bind(this);\n    onDispose(this._onDispose.bind(this));\n  }\n  _onAddTrack(event) {\n    const nativeTrack = event.track;\n    if (!nativeTrack || findTextTrackElement(this._video, nativeTrack))\n      return;\n    const track = new TextTrack({\n      id: nativeTrack.id,\n      kind: nativeTrack.kind,\n      label: nativeTrack.label,\n      language: nativeTrack.language,\n      type: \"vtt\"\n    });\n    track[TEXT_TRACK_NATIVE] = { track: nativeTrack };\n    track[TEXT_TRACK_READY_STATE] = 2;\n    track[TEXT_TRACK_NATIVE_HLS] = true;\n    let lastIndex = 0;\n    const onCueChange = (event2) => {\n      if (!nativeTrack.cues)\n        return;\n      for (let i = lastIndex; i < nativeTrack.cues.length; i++) {\n        track.addCue(nativeTrack.cues[i], event2);\n        lastIndex++;\n      }\n    };\n    onCueChange(event);\n    nativeTrack.oncuechange = onCueChange;\n    this._context.textTracks.add(track, event);\n    track.setMode(nativeTrack.mode, event);\n  }\n  _onDispose() {\n    this._video.textTracks.onaddtrack = null;\n    for (const track of this._context.textTracks) {\n      const nativeTrack = track[TEXT_TRACK_NATIVE]?.track;\n      if (nativeTrack?.oncuechange)\n        nativeTrack.oncuechange = null;\n    }\n  }\n}\nfunction findTextTrackElement(video, track) {\n  return Array.from(video.children).find((el) => el.track === track);\n}\n\nexport { NativeHLSTextTracks as N };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,sBAAsB,EAAEC,CAAC,IAAIC,qBAAqB,QAAQ,qBAAqB;AAErI,MAAMC,mBAAmB,CAAC;EACxBC,WAAWA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAC5B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxBD,MAAM,CAACE,UAAU,CAACC,UAAU,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1DhB,SAAS,CAAC,IAAI,CAACiB,UAAU,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;EACvC;EACAD,WAAWA,CAACG,KAAK,EAAE;IACjB,MAAMC,WAAW,GAAGD,KAAK,CAACE,KAAK;IAC/B,IAAI,CAACD,WAAW,IAAIE,oBAAoB,CAAC,IAAI,CAACV,MAAM,EAAEQ,WAAW,CAAC,EAChE;IACF,MAAMC,KAAK,GAAG,IAAIlB,SAAS,CAAC;MAC1BoB,EAAE,EAAEH,WAAW,CAACG,EAAE;MAClBC,IAAI,EAAEJ,WAAW,CAACI,IAAI;MACtBC,KAAK,EAAEL,WAAW,CAACK,KAAK;MACxBC,QAAQ,EAAEN,WAAW,CAACM,QAAQ;MAC9BC,IAAI,EAAE;IACR,CAAC,CAAC;IACFN,KAAK,CAAChB,iBAAiB,CAAC,GAAG;MAAEgB,KAAK,EAAED;IAAY,CAAC;IACjDC,KAAK,CAACd,sBAAsB,CAAC,GAAG,CAAC;IACjCc,KAAK,CAACZ,qBAAqB,CAAC,GAAG,IAAI;IACnC,IAAImB,SAAS,GAAG,CAAC;IACjB,MAAMC,WAAW,GAAIC,MAAM,IAAK;MAC9B,IAAI,CAACV,WAAW,CAACW,IAAI,EACnB;MACF,KAAK,IAAIC,CAAC,GAAGJ,SAAS,EAAEI,CAAC,GAAGZ,WAAW,CAACW,IAAI,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACxDX,KAAK,CAACa,MAAM,CAACd,WAAW,CAACW,IAAI,CAACC,CAAC,CAAC,EAAEF,MAAM,CAAC;QACzCF,SAAS,EAAE;MACb;IACF,CAAC;IACDC,WAAW,CAACV,KAAK,CAAC;IAClBC,WAAW,CAACe,WAAW,GAAGN,WAAW;IACrC,IAAI,CAAChB,QAAQ,CAACC,UAAU,CAACsB,GAAG,CAACf,KAAK,EAAEF,KAAK,CAAC;IAC1CE,KAAK,CAACgB,OAAO,CAACjB,WAAW,CAACkB,IAAI,EAAEnB,KAAK,CAAC;EACxC;EACAD,UAAUA,CAAA,EAAG;IACX,IAAI,CAACN,MAAM,CAACE,UAAU,CAACC,UAAU,GAAG,IAAI;IACxC,KAAK,MAAMM,KAAK,IAAI,IAAI,CAACR,QAAQ,CAACC,UAAU,EAAE;MAC5C,MAAMM,WAAW,GAAGC,KAAK,CAAChB,iBAAiB,CAAC,EAAEgB,KAAK;MACnD,IAAID,WAAW,EAAEe,WAAW,EAC1Bf,WAAW,CAACe,WAAW,GAAG,IAAI;IAClC;EACF;AACF;AACA,SAASb,oBAAoBA,CAACiB,KAAK,EAAElB,KAAK,EAAE;EAC1C,OAAOmB,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC,CAACC,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACvB,KAAK,KAAKA,KAAK,CAAC;AACpE;AAEA,SAASX,mBAAmB,IAAImC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}