{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/mobilestreamapp/client/src/Stream.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport { MediaPlayer, MediaOutlet, MediaCommunitySkin } from \"@vidstack/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stream() {\n  _s();\n  let [one, setOne] = useState(\"\");\n  let [screensharingStatus, setScreensharingStatus] = useState();\n  const socket = io(\"http://localhost:5000\");\n  const myVideoRef = useRef();\n  let roomid = 1;\n  const peerRef = useRef();\n  const initPeer = () => {\n    const peerInstance = new Peer();\n    peerRef.current = peerInstance;\n    peerInstance.on(\"open\", peerId => {\n      console.log(\"Connected to PeerJS with ID:\", peerId);\n      socket.emit(\"broadcaster\", roomid, peerId);\n    });\n    if (screensharingStatus) {\n      console.log(screensharingStatus);\n      navigator.mediaDevices.getDisplayMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        socket.emit(\"startScreenSharing\", roomid);\n        setOne(stream);\n        peerInstance.on(\"call\", call => {\n          console.log(\"Incoming call:\", call);\n          call.answer(stream);\n          // Answer the incoming call and send our stream\n\n          call.on(\"stream\", remoteStream => {\n            console.log(\"first verse\");\n            // Handle the remote stream as needed\n          });\n        });\n      }).catch(error => console.error(\"Error accessing media devices:\", error));\n    } else {\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      }).then(stream => {\n        // myVideoRef.current.srcObject = stream;\n        console.log(\"Stream obtained successfully:\", stream);\n        setOne(stream);\n        peerInstance.on(\"call\", call => {\n          console.log(\"Incoming call:\", call);\n          call.answer(stream);\n          // Answer the incoming call and send our stream\n\n          call.on(\"stream\", remoteStream => {\n            console.log(\"first verse\");\n            // Handle the remote stream as needed\n          });\n        });\n      }).catch(error => console.error(\"Error accessing media devices:\", error));\n    }\n  };\n  const toggleScreen = () => {\n    console.log(\"\");\n    socket.emit(\"screenSharingStatus\", true);\n    setScreensharingStatus(true);\n  };\n  useEffect(() => {\n    initPeer();\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n    };\n  }, [screensharingStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MediaPlayer, {\n      title: \"Tuturly Classroom\",\n      poster: \"https://image.mux.com/VZtzUzGRv02OhRnZCxcNg49OilvolTqdnFLEqBsTwaxU/thumbnail.webp?time=268&width=980\",\n      thumbnails: \"https://media-files.vidstack.io/sprite-fight/thumbnails.vtt\",\n      aspectRatio: 16 / 9,\n      autoplay: true,\n      crossorigin: \"\",\n      src: one,\n      children: [/*#__PURE__*/_jsxDEV(MediaOutlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediaCommunitySkin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        toggleScreen();\n      },\n      children: \"Toggle ScreenSharing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Stream, \"R6eKPyNqLnGVgGipwks1/kkqKfU=\");\n_c = Stream;\nvar _c;\n$RefreshReg$(_c, \"Stream\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","Peer","MediaPlayer","MediaOutlet","MediaCommunitySkin","jsxDEV","_jsxDEV","Stream","_s","one","setOne","screensharingStatus","setScreensharingStatus","socket","myVideoRef","roomid","peerRef","initPeer","peerInstance","current","on","peerId","console","log","emit","navigator","mediaDevices","getDisplayMedia","video","audio","then","stream","call","answer","remoteStream","catch","error","getUserMedia","toggleScreen","children","title","poster","thumbnails","aspectRatio","autoplay","crossorigin","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/mobilestreamapp/client/src/Stream.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"peerjs\";\nimport { MediaPlayer, MediaOutlet, MediaCommunitySkin } from \"@vidstack/react\";\n\nexport default function Stream() {\n  let [one, setOne] = useState(\"\");\n  let [screensharingStatus, setScreensharingStatus] = useState();\n\n  const socket = io(\"http://localhost:5000\");\n  const myVideoRef = useRef();\n\n  let roomid = 1;\n  const peerRef = useRef();\n\n  const initPeer = () => {\n    const peerInstance = new Peer();\n\n    peerRef.current = peerInstance;\n\n    peerInstance.on(\"open\", (peerId) => {\n      console.log(\"Connected to PeerJS with ID:\", peerId);\n      socket.emit(\"broadcaster\", roomid, peerId);\n    });\n    if (screensharingStatus) {\n      console.log(screensharingStatus);\n      navigator.mediaDevices\n        .getDisplayMedia({ video: true, audio: true })\n        .then((stream) => {\n          socket.emit(\"startScreenSharing\", roomid);\n          setOne(stream);\n          peerInstance.on(\"call\", (call) => {\n            console.log(\"Incoming call:\", call);\n            call.answer(stream);\n            // Answer the incoming call and send our stream\n\n            call.on(\"stream\", (remoteStream) => {\n              console.log(\"first verse\");\n              // Handle the remote stream as needed\n            });\n          });\n        })\n        .catch((error) =>\n          console.error(\"Error accessing media devices:\", error)\n        );\n    } else {\n      navigator.mediaDevices\n        .getUserMedia({ audio: true, video: true })\n        .then((stream) => {\n          // myVideoRef.current.srcObject = stream;\n          console.log(\"Stream obtained successfully:\", stream);\n          setOne(stream);\n          peerInstance.on(\"call\", (call) => {\n            console.log(\"Incoming call:\", call);\n            call.answer(stream);\n            // Answer the incoming call and send our stream\n\n            call.on(\"stream\", (remoteStream) => {\n              console.log(\"first verse\");\n              // Handle the remote stream as needed\n            });\n          });\n        })\n        .catch((error) =>\n          console.error(\"Error accessing media devices:\", error)\n        );\n    }\n  };\n  const toggleScreen = () => {\n    console.log(\"\");\n    socket.emit(\"screenSharingStatus\",true);\n    setScreensharingStatus(true);\n  };\n  useEffect(() => {\n    initPeer();\n\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n    };\n  }, [screensharingStatus]);\n\n  return (\n    <div>\n      <MediaPlayer\n        title=\"Tuturly Classroom\"\n        poster=\"https://image.mux.com/VZtzUzGRv02OhRnZCxcNg49OilvolTqdnFLEqBsTwaxU/thumbnail.webp?time=268&width=980\"\n        thumbnails=\"https://media-files.vidstack.io/sprite-fight/thumbnails.vtt\"\n        aspectRatio={16 / 9}\n        autoplay={true}\n        crossorigin=\"\"\n        src={one}\n      >\n        <MediaOutlet>\n          {/* Add any additional tracks or configurations here */}\n        </MediaOutlet>\n        <MediaCommunitySkin />\n      </MediaPlayer>\n      <button\n        onClick={() => {\n          toggleScreen();\n        }}\n      >\n        Toggle ScreenSharing\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}