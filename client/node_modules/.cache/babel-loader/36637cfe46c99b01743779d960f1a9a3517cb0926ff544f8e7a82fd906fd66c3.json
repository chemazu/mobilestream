{"ast":null,"code":"import { listenEvent, DOMEvent } from 'maverick.js/std';\nimport { a0 as canUseVideoPresentation } from '../../../media-core.js';\nclass VideoPresentation {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    listenEvent(this._video, \"webkitpresentationmodechanged\", this._onModeChange.bind(this));\n  }\n  _mode = \"inline\";\n  get _supported() {\n    return canUseVideoPresentation(this._video);\n  }\n  async _setPresentationMode(mode) {\n    if (this._mode === mode) return;\n    this._video.webkitSetPresentationMode(mode);\n  }\n  _onModeChange() {\n    const prevMode = this._mode;\n    this._mode = this._video.webkitPresentationMode;\n    {\n      this._media.logger?.infoGroup(\"presentation mode change\").labelledLog(\"Mode\", this._mode).labelledLog(\"Event\", event).dispatch();\n    }\n    this._media.player?.dispatchEvent(new DOMEvent(\"video-presentation-change\", {\n      detail: this._mode,\n      trigger: event\n    }));\n    [\"fullscreen\", \"picture-in-picture\"].forEach(type => {\n      if (this._mode === type || prevMode === type) {\n        this._media.delegate._dispatch(`${type}-change`, {\n          detail: this._mode === type,\n          trigger: event\n        });\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"fullscreen\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"fullscreen\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\nclass PIPPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"picture-in-picture\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"picture-in-picture\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\nexport { FullscreenPresentationAdapter as F, PIPPresentationAdapter as P, VideoPresentation as V };","map":{"version":3,"names":["listenEvent","DOMEvent","a0","canUseVideoPresentation","VideoPresentation","constructor","_video","_media","_onModeChange","bind","_mode","_supported","_setPresentationMode","mode","webkitSetPresentationMode","prevMode","webkitPresentationMode","logger","infoGroup","labelledLog","event","dispatch","player","dispatchEvent","detail","trigger","forEach","type","delegate","_dispatch","FullscreenPresentationAdapter","_presentation","active","supported","enter","exit","PIPPresentationAdapter","F","P","V"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/video/presentation/video-presentation.js"],"sourcesContent":["import { listenEvent, DOMEvent } from 'maverick.js/std';\nimport { a0 as canUseVideoPresentation } from '../../../media-core.js';\n\nclass VideoPresentation {\n  constructor(_video, _media) {\n    this._video = _video;\n    this._media = _media;\n    listenEvent(this._video, \"webkitpresentationmodechanged\", this._onModeChange.bind(this));\n  }\n  _mode = \"inline\";\n  get _supported() {\n    return canUseVideoPresentation(this._video);\n  }\n  async _setPresentationMode(mode) {\n    if (this._mode === mode)\n      return;\n    this._video.webkitSetPresentationMode(mode);\n  }\n  _onModeChange() {\n    const prevMode = this._mode;\n    this._mode = this._video.webkitPresentationMode;\n    {\n      this._media.logger?.infoGroup(\"presentation mode change\").labelledLog(\"Mode\", this._mode).labelledLog(\"Event\", event).dispatch();\n    }\n    this._media.player?.dispatchEvent(\n      new DOMEvent(\"video-presentation-change\", {\n        detail: this._mode,\n        trigger: event\n      })\n    );\n    [\"fullscreen\", \"picture-in-picture\"].forEach((type) => {\n      if (this._mode === type || prevMode === type) {\n        this._media.delegate._dispatch(`${type}-change`, {\n          detail: this._mode === type,\n          trigger: event\n        });\n      }\n    });\n  }\n}\nclass FullscreenPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"fullscreen\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"fullscreen\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\nclass PIPPresentationAdapter {\n  constructor(_presentation) {\n    this._presentation = _presentation;\n  }\n  get active() {\n    return this._presentation._mode === \"picture-in-picture\";\n  }\n  get supported() {\n    return this._presentation._supported;\n  }\n  async enter() {\n    this._presentation._setPresentationMode(\"picture-in-picture\");\n  }\n  async exit() {\n    this._presentation._setPresentationMode(\"inline\");\n  }\n}\n\nexport { FullscreenPresentationAdapter as F, PIPPresentationAdapter as P, VideoPresentation as V };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}