{"ast":null,"code":"import { V as VTTParser, a as VTTBlock, b as VTTCue } from './index.js';\nconst MILLISECOND_SEP_RE = /,/g,\n  TIMESTAMP_SEP = \"-->\";\nclass SRTParser extends VTTParser {\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this._cue) {\n        this._cues.push(this._cue);\n        this._init.onCue?.(this._cue);\n        this._cue = null;\n      }\n      this._block = VTTBlock.None;\n    } else if (this._block === VTTBlock.Cue) {\n      this._cue.text += (this._cue.text ? \"\\n\" : \"\") + line;\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this._parseTimestamp(line, lineCount);\n      if (result) {\n        this._cue = new VTTCue(result[0], result[1], result[2].join(\" \"));\n        this._cue.id = this._prevLine;\n        this._block = VTTBlock.Cue;\n      }\n    }\n    this._prevLine = line;\n  }\n  _parseTimestamp(line, lineCount) {\n    return super._parseTimestamp(line.replace(MILLISECOND_SEP_RE, \".\"), lineCount);\n  }\n}\nfunction createSRTParser() {\n  return new SRTParser();\n}\nexport { SRTParser, createSRTParser as default };","map":{"version":3,"names":["V","VTTParser","a","VTTBlock","b","VTTCue","MILLISECOND_SEP_RE","TIMESTAMP_SEP","SRTParser","parse","line","lineCount","_cue","_cues","push","_init","onCue","_block","None","Cue","text","includes","result","_parseTimestamp","join","id","_prevLine","replace","createSRTParser","default"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/media-captions/dist/dev/srt-parser.js"],"sourcesContent":["import { V as VTTParser, a as VTTBlock, b as VTTCue } from './index.js';\n\nconst MILLISECOND_SEP_RE = /,/g, TIMESTAMP_SEP = \"-->\";\nclass SRTParser extends VTTParser {\n  parse(line, lineCount) {\n    if (line === \"\") {\n      if (this._cue) {\n        this._cues.push(this._cue);\n        this._init.onCue?.(this._cue);\n        this._cue = null;\n      }\n      this._block = VTTBlock.None;\n    } else if (this._block === VTTBlock.Cue) {\n      this._cue.text += (this._cue.text ? \"\\n\" : \"\") + line;\n    } else if (line.includes(TIMESTAMP_SEP)) {\n      const result = this._parseTimestamp(line, lineCount);\n      if (result) {\n        this._cue = new VTTCue(result[0], result[1], result[2].join(\" \"));\n        this._cue.id = this._prevLine;\n        this._block = VTTBlock.Cue;\n      }\n    }\n    this._prevLine = line;\n  }\n  _parseTimestamp(line, lineCount) {\n    return super._parseTimestamp(line.replace(MILLISECOND_SEP_RE, \".\"), lineCount);\n  }\n}\nfunction createSRTParser() {\n  return new SRTParser();\n}\n\nexport { SRTParser, createSRTParser as default };\n"],"mappings":"AAAA,SAASA,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,MAAM,QAAQ,YAAY;AAEvE,MAAMC,kBAAkB,GAAG,IAAI;EAAEC,aAAa,GAAG,KAAK;AACtD,MAAMC,SAAS,SAASP,SAAS,CAAC;EAChCQ,KAAKA,CAACC,IAAI,EAAEC,SAAS,EAAE;IACrB,IAAID,IAAI,KAAK,EAAE,EAAE;MACf,IAAI,IAAI,CAACE,IAAI,EAAE;QACb,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;QAC1B,IAAI,CAACG,KAAK,CAACC,KAAK,GAAG,IAAI,CAACJ,IAAI,CAAC;QAC7B,IAAI,CAACA,IAAI,GAAG,IAAI;MAClB;MACA,IAAI,CAACK,MAAM,GAAGd,QAAQ,CAACe,IAAI;IAC7B,CAAC,MAAM,IAAI,IAAI,CAACD,MAAM,KAAKd,QAAQ,CAACgB,GAAG,EAAE;MACvC,IAAI,CAACP,IAAI,CAACQ,IAAI,IAAI,CAAC,IAAI,CAACR,IAAI,CAACQ,IAAI,GAAG,IAAI,GAAG,EAAE,IAAIV,IAAI;IACvD,CAAC,MAAM,IAAIA,IAAI,CAACW,QAAQ,CAACd,aAAa,CAAC,EAAE;MACvC,MAAMe,MAAM,GAAG,IAAI,CAACC,eAAe,CAACb,IAAI,EAAEC,SAAS,CAAC;MACpD,IAAIW,MAAM,EAAE;QACV,IAAI,CAACV,IAAI,GAAG,IAAIP,MAAM,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;QACjE,IAAI,CAACZ,IAAI,CAACa,EAAE,GAAG,IAAI,CAACC,SAAS;QAC7B,IAAI,CAACT,MAAM,GAAGd,QAAQ,CAACgB,GAAG;MAC5B;IACF;IACA,IAAI,CAACO,SAAS,GAAGhB,IAAI;EACvB;EACAa,eAAeA,CAACb,IAAI,EAAEC,SAAS,EAAE;IAC/B,OAAO,KAAK,CAACY,eAAe,CAACb,IAAI,CAACiB,OAAO,CAACrB,kBAAkB,EAAE,GAAG,CAAC,EAAEK,SAAS,CAAC;EAChF;AACF;AACA,SAASiB,eAAeA,CAAA,EAAG;EACzB,OAAO,IAAIpB,SAAS,CAAC,CAAC;AACxB;AAEA,SAASA,SAAS,EAAEoB,eAAe,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}