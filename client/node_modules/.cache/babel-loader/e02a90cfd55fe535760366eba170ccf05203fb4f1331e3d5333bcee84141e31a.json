{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/mobilestreamapp/client/src/Watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Peer from \"peerjs\";\nimport \"vidstack/styles/defaults.css\";\nimport \"vidstack/styles/community-skin/video.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { MediaCommunitySkin, MediaOutlet, MediaPlayer, MediaPoster } from \"@vidstack/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Watch() {\n  _s();\n  const socket = io(\"http://localhost:5000\");\n  const myVideoRef = useRef();\n  let [one, setOne] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  let roomid = id;\n  console.log(roomid);\n  const peerRef = useRef();\n  useEffect(() => {\n    const peerInstance = new Peer();\n    peerRef.current = peerInstance;\n    peerInstance.on(\"open\", user => {\n      socket.emit(\"watcher\", roomid, user);\n    });\n    const startClass = (peerId, stat) => {\n      console.log(stat);\n      if (peerRef.current) {\n        console.log(\"first\");\n      }\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(newStream => {\n        var _peerRef$current;\n        const call = (_peerRef$current = peerRef.current) === null || _peerRef$current === void 0 ? void 0 : _peerRef$current.call(peerId, newStream);\n        call === null || call === void 0 ? void 0 : call.on(\"stream\", function (remoteStream) {\n          console.log(remoteStream);\n          setOne(remoteStream);\n        });\n      });\n    };\n    socket.on(\"join stream\", (roomSize, peerId, roomStatus) => {\n      startClass(peerId, \"join\");\n    });\n    socket.on(\"no stream\", () => {\n      console.log(\"no stream\");\n    });\n    socket.on(\"startScreenSharing\", (status, peerId) => {\n      peerInstance.destroy();\n      const newPeer = new Peer();\n      peerRef.current = newPeer;\n      startClass(peerId, \"share\");\n    });\n    socket.on(\"broadcaster\", peerId => {\n      startClass(peerId, \"broadcaster\");\n      console.log(\"broadcaster\");\n    });\n    socket.on(\"broadcaster-disconnected\", () => {\n      peerInstance.destroy();\n    });\n    return () => {\n      peerInstance.destroy();\n      socket.off(\"join stream\");\n      socket.off(\"broadcaster\");\n    };\n  }, [roomid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      title: \"Tuturly Classroom\",\n      poster: \"https://media-files.vidstack.io/poster.png\",\n      controls: true,\n      src: one,\n      autoplay: true,\n      playsinline: true,\n      children: [/*#__PURE__*/_jsxDEV(MediaOutlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediaCommunitySkin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Watch, \"xnXtggxi+1JdOSuEFT10UiB2u3k=\", false, function () {\n  return [useParams];\n});\n_c = Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Peer","io","useParams","MediaCommunitySkin","MediaOutlet","MediaPlayer","MediaPoster","jsxDEV","_jsxDEV","Watch","_s","socket","myVideoRef","one","setOne","id","roomid","console","log","peerRef","peerInstance","current","on","user","emit","startClass","peerId","stat","navigator","mediaDevices","getUserMedia","video","audio","then","newStream","_peerRef$current","call","remoteStream","roomSize","roomStatus","status","destroy","newPeer","off","children","title","poster","controls","src","autoplay","playsinline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/mobilestreamapp/client/src/Watch.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport Peer from \"peerjs\";\n\nimport \"vidstack/styles/defaults.css\";\nimport \"vidstack/styles/community-skin/video.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  MediaCommunitySkin,\n  MediaOutlet,\n  MediaPlayer,\n  MediaPoster,\n} from \"@vidstack/react\";\nexport default function Watch() {\n  const socket = io(\"http://localhost:5000\");\n\n  const myVideoRef = useRef();\n  let [one, setOne] = useState(\"\");\n\n  let { id } = useParams();\n  let roomid = id;\n  console.log(roomid);\n  const peerRef = useRef();\n\n  useEffect(() => {\n    const peerInstance = new Peer();\n    peerRef.current = peerInstance;\n    peerInstance.on(\"open\", (user) => {\n      socket.emit(\"watcher\", roomid, user);\n    });\n\n    const startClass = (peerId, stat) => {\n      console.log(stat);\n      if (peerRef.current) {\n        console.log(\"first\");\n      }\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((newStream) => {\n          const call = peerRef.current?.call(peerId, newStream);\n          call?.on(\"stream\", function (remoteStream) {\n            console.log(remoteStream);\n            setOne(remoteStream);\n          });\n        });\n    };\n    socket.on(\"join stream\", (roomSize, peerId, roomStatus) => {\n      startClass(peerId, \"join\");\n    });\n\n    socket.on(\"no stream\", () => {\n      console.log(\"no stream\");\n    });\n    socket.on(\"startScreenSharing\", (status, peerId) => {\n      peerInstance.destroy()\n      const newPeer = new Peer();\n      peerRef.current = newPeer;\n      startClass(peerId, \"share\");\n    });\n    socket.on(\"broadcaster\", (peerId) => {\n      startClass(peerId, \"broadcaster\");\n      console.log(\"broadcaster\");\n    });\n    socket.on(\"broadcaster-disconnected\", () => {\n      peerInstance.destroy();\n    });\n\n    return () => {\n      peerInstance.destroy();\n      socket.off(\"join stream\");\n      socket.off(\"broadcaster\");\n    };\n  }, [roomid]);\n  return (\n    <div>\n      {\" \"}\n      <MediaPlayer\n        title=\"Tuturly Classroom\"\n        poster=\"https://media-files.vidstack.io/poster.png\"\n        controls\n        src={one}\n        autoplay={true}\n        playsinline={true}\n      >\n        <MediaOutlet />\n        <MediaCommunitySkin />\n      </MediaPlayer>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}