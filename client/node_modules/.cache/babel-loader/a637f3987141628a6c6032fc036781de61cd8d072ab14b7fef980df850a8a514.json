{"ast":null,"code":"import { setAttribute, isString } from 'maverick.js/std';\nimport { b as isMediaStream } from '../audio/loader.js';\nimport { H as HTMLMediaEvents } from './html–media-events.js';\nimport { N as NativeAudioTracks } from './native-audio-tracks.js';\nclass HTMLMediaProvider {\n  constructor(_media) {\n    this._media = _media;\n  }\n  setup(context) {\n    new HTMLMediaEvents(this, context);\n    if (\"audioTracks\" in this.media) new NativeAudioTracks(this, context);\n  }\n  get type() {\n    return \"\";\n  }\n  get media() {\n    return this._media;\n  }\n  get paused() {\n    return this._media.paused;\n  }\n  get muted() {\n    return this._media.muted;\n  }\n  set muted(muted) {\n    this._media.muted = muted;\n  }\n  get volume() {\n    return this._media.volume;\n  }\n  set volume(volume) {\n    this._media.volume = volume;\n  }\n  get currentTime() {\n    return this._media.currentTime;\n  }\n  set currentTime(time) {\n    this._media.currentTime = time;\n  }\n  get playsinline() {\n    return this._media.hasAttribute(\"playsinline\");\n  }\n  set playsinline(playsinline) {\n    setAttribute(this._media, \"playsinline\", playsinline);\n  }\n  get playbackRate() {\n    return this._media.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._media.playbackRate = rate;\n  }\n  async play() {\n    return this._media.play();\n  }\n  async pause() {\n    return this._media.pause();\n  }\n  async loadSource({\n    src\n  }, preload) {\n    this._media.preload = preload;\n    if (isMediaStream(src)) {\n      this._media.srcObject = src;\n    } else {\n      this._media.srcObject = null;\n      this._media.src = isString(src) ? src : window.URL.createObjectURL(src);\n    }\n    this._media.load();\n  }\n}\nexport { HTMLMediaProvider as H };","map":{"version":3,"names":["setAttribute","isString","b","isMediaStream","H","HTMLMediaEvents","N","NativeAudioTracks","HTMLMediaProvider","constructor","_media","setup","context","media","type","paused","muted","volume","currentTime","time","playsinline","hasAttribute","playbackRate","rate","play","pause","loadSource","src","preload","srcObject","window","URL","createObjectURL","load"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/html/provider.js"],"sourcesContent":["import { setAttribute, isString } from 'maverick.js/std';\nimport { b as isMediaStream } from '../audio/loader.js';\nimport { H as HTMLMediaEvents } from './html–media-events.js';\nimport { N as NativeAudioTracks } from './native-audio-tracks.js';\n\nclass HTMLMediaProvider {\n  constructor(_media) {\n    this._media = _media;\n  }\n  setup(context) {\n    new HTMLMediaEvents(this, context);\n    if (\"audioTracks\" in this.media)\n      new NativeAudioTracks(this, context);\n  }\n  get type() {\n    return \"\";\n  }\n  get media() {\n    return this._media;\n  }\n  get paused() {\n    return this._media.paused;\n  }\n  get muted() {\n    return this._media.muted;\n  }\n  set muted(muted) {\n    this._media.muted = muted;\n  }\n  get volume() {\n    return this._media.volume;\n  }\n  set volume(volume) {\n    this._media.volume = volume;\n  }\n  get currentTime() {\n    return this._media.currentTime;\n  }\n  set currentTime(time) {\n    this._media.currentTime = time;\n  }\n  get playsinline() {\n    return this._media.hasAttribute(\"playsinline\");\n  }\n  set playsinline(playsinline) {\n    setAttribute(this._media, \"playsinline\", playsinline);\n  }\n  get playbackRate() {\n    return this._media.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._media.playbackRate = rate;\n  }\n  async play() {\n    return this._media.play();\n  }\n  async pause() {\n    return this._media.pause();\n  }\n  async loadSource({ src }, preload) {\n    this._media.preload = preload;\n    if (isMediaStream(src)) {\n      this._media.srcObject = src;\n    } else {\n      this._media.srcObject = null;\n      this._media.src = isString(src) ? src : window.URL.createObjectURL(src);\n    }\n    this._media.load();\n  }\n}\n\nexport { HTMLMediaProvider as H };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}