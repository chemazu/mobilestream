{"ast":null,"code":"import { effect, onDispose } from 'maverick.js';\nimport { useDisposalBin, listenEvent, DOMEvent, isNil } from 'maverick.js/std';\nimport { R as RAFLoop } from '../hls/hls.js';\nimport { i as isHLSSrc } from '../audio/loader.js';\nimport { z as getNumberOfDecimalPlaces } from '../../media-ui.js';\nimport { I as IS_SAFARI } from '../../media-core.js';\nclass HTMLMediaEvents {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._attachInitialListeners();\n    effect(this._attachTimeUpdate.bind(this));\n    onDispose(this._onDispose.bind(this));\n  }\n  _disposal = useDisposalBin();\n  _waiting = false;\n  _attachedLoadStart = false;\n  _attachedCanPlay = false;\n  _timeRAF = new RAFLoop(this._onRAF.bind(this));\n  get _media() {\n    return this._provider.media;\n  }\n  get _delegate() {\n    return this._context.delegate;\n  }\n  _onDispose() {\n    this._timeRAF._stop();\n    this._disposal.empty();\n  }\n  /**\n   * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n   * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n   * resolve that by retrieving time updates in a request animation frame loop.\n   */\n  _onRAF() {\n    const newTime = this._provider.currentTime;\n    if (this._context.$store.currentTime() !== newTime) this._updateCurrentTime(newTime);\n  }\n  _attachInitialListeners() {\n    this._attachEventListener(\"loadstart\", this._onLoadStart);\n    this._attachEventListener(\"abort\", this._onAbort);\n    this._attachEventListener(\"emptied\", this._onEmptied);\n    this._attachEventListener(\"error\", this._onError);\n    this._context.logger?.debug(\"attached initial media event listeners\");\n  }\n  _attachLoadStartListeners() {\n    if (this._attachedLoadStart) return;\n    this._disposal.add(this._attachEventListener(\"loadeddata\", this._onLoadedData), this._attachEventListener(\"loadedmetadata\", this._onLoadedMetadata), this._attachEventListener(\"canplay\", this._onCanPlay), this._attachEventListener(\"canplaythrough\", this._onCanPlayThrough), this._attachEventListener(\"durationchange\", this._onDurationChange), this._attachEventListener(\"play\", this._onPlay), this._attachEventListener(\"progress\", this._onProgress), this._attachEventListener(\"stalled\", this._onStalled), this._attachEventListener(\"suspend\", this._onSuspend));\n    this._attachedLoadStart = true;\n  }\n  _attachCanPlayListeners() {\n    if (this._attachedCanPlay) return;\n    this._disposal.add(this._attachEventListener(\"pause\", this._onPause), this._attachEventListener(\"playing\", this._onPlaying), this._attachEventListener(\"ratechange\", this._onRateChange), this._attachEventListener(\"seeked\", this._onSeeked), this._attachEventListener(\"seeking\", this._onSeeking), this._attachEventListener(\"ended\", this._onEnded), this._attachEventListener(\"volumechange\", this._onVolumeChange), this._attachEventListener(\"waiting\", this._onWaiting));\n    this._attachedCanPlay = true;\n  }\n  _handlers = /* @__PURE__ */new Map();\n  _handleDevEvent = this._onDevEvent.bind(this);\n  _attachEventListener(eventType, handler) {\n    this._handlers.set(eventType, handler);\n    return listenEvent(this._media, eventType, this._handleDevEvent);\n  }\n  _onDevEvent(event2) {\n    this._context.logger?.debugGroup(`\\u{1F4FA} fired \\`${event2.type}\\``).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", {\n      ...this._context.$store\n    }).dispatch();\n    this._handlers.get(event2.type)?.call(this, event2);\n  }\n  _updateCurrentTime(time, trigger) {\n    this._delegate._dispatch(\"time-update\", {\n      // Avoid errors where `currentTime` can have higher precision.\n      detail: {\n        currentTime: Math.min(time, this._context.$store.seekableEnd()),\n        played: this._media.played\n      },\n      trigger\n    });\n  }\n  _onLoadStart(event2) {\n    if (this._media.networkState === 3) {\n      this._onAbort(event2);\n      return;\n    }\n    this._attachLoadStartListeners();\n    this._delegate._dispatch(\"load-start\", {\n      trigger: event2\n    });\n  }\n  _onAbort(event2) {\n    this._delegate._dispatch(\"abort\", {\n      trigger: event2\n    });\n  }\n  _onEmptied() {\n    this._delegate._dispatch(\"emptied\", {\n      trigger: event\n    });\n  }\n  _onLoadedData(event2) {\n    this._delegate._dispatch(\"loaded-data\", {\n      trigger: event2\n    });\n  }\n  _onLoadedMetadata(event2) {\n    this._onStreamTypeChange();\n    this._attachCanPlayListeners();\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      }\n    });\n    this._delegate._dispatch(\"loaded-metadata\", {\n      trigger: event2\n    });\n    if (IS_SAFARI && isHLSSrc(this._context.$store.source())) {\n      this._delegate._ready(this._getCanPlayDetail(), event2);\n    }\n  }\n  _getCanPlayDetail() {\n    return {\n      duration: this._media.duration,\n      buffered: this._media.buffered,\n      seekable: this._media.seekable\n    };\n  }\n  _onStreamTypeChange() {\n    const isLive = !Number.isFinite(this._media.duration);\n    this._delegate._dispatch(\"stream-type-change\", {\n      detail: isLive ? \"live\" : \"on-demand\"\n    });\n  }\n  _onPlay(event2) {\n    if (!this._context.$store.canPlay) return;\n    this._delegate._dispatch(\"play\", {\n      trigger: event2\n    });\n  }\n  _onPause(event2) {\n    if (this._media.readyState === 1 && !this._waiting) return;\n    this._waiting = false;\n    this._timeRAF._stop();\n    this._delegate._dispatch(\"pause\", {\n      trigger: event2\n    });\n  }\n  _onCanPlay(event2) {\n    this._delegate._ready(this._getCanPlayDetail(), event2);\n  }\n  _onCanPlayThrough(event2) {\n    if (this._context.$store.started()) return;\n    this._delegate._dispatch(\"can-play-through\", {\n      trigger: event2,\n      detail: this._getCanPlayDetail()\n    });\n  }\n  _onPlaying(event2) {\n    this._waiting = false;\n    this._delegate._dispatch(\"playing\", {\n      trigger: event2\n    });\n    this._timeRAF._start();\n  }\n  _onStalled(event2) {\n    this._delegate._dispatch(\"stalled\", {\n      trigger: event2\n    });\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", {\n        trigger: event2\n      });\n    }\n  }\n  _onWaiting(event2) {\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", {\n        trigger: event2\n      });\n    }\n  }\n  _onEnded(event2) {\n    this._timeRAF._stop();\n    this._updateCurrentTime(this._media.duration, event2);\n    this._delegate._dispatch(\"end\", {\n      trigger: event2\n    });\n    if (this._context.$store.loop()) {\n      this._onLoop();\n    } else {\n      this._delegate._dispatch(\"ended\", {\n        trigger: event2\n      });\n    }\n  }\n  _attachTimeUpdate() {\n    if (this._context.$store.paused()) {\n      listenEvent(this._media, \"timeupdate\", this._onTimeUpdate.bind(this));\n    }\n  }\n  _onTimeUpdate(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n  }\n  _onDurationChange(event2) {\n    this._onStreamTypeChange();\n    if (this._context.$store.ended()) {\n      this._updateCurrentTime(this._media.duration, event2);\n    }\n    this._delegate._dispatch(\"duration-change\", {\n      detail: this._media.duration,\n      trigger: event2\n    });\n  }\n  _onVolumeChange(event2) {\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      },\n      trigger: event2\n    });\n  }\n  _onSeeked(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n    this._delegate._dispatch(\"seeked\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n    if (Math.trunc(this._media.currentTime) === Math.trunc(this._media.duration) && getNumberOfDecimalPlaces(this._media.duration) > getNumberOfDecimalPlaces(this._media.currentTime)) {\n      this._updateCurrentTime(this._media.duration, event2);\n      if (!this._media.ended) {\n        this._context.player.dispatchEvent(new DOMEvent(\"media-play-request\", {\n          trigger: event2\n        }));\n      }\n    }\n  }\n  _onSeeking(event2) {\n    this._delegate._dispatch(\"seeking\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n  }\n  _onProgress(event2) {\n    this._delegate._dispatch(\"progress\", {\n      detail: {\n        buffered: this._media.buffered,\n        seekable: this._media.seekable\n      },\n      trigger: event2\n    });\n  }\n  _onLoop() {\n    const hasCustomControls = isNil(this._media.controls);\n    if (hasCustomControls) this._media.controls = false;\n    this._context.player.dispatchEvent(new DOMEvent(\"media-loop-request\"));\n  }\n  _onSuspend(event2) {\n    this._delegate._dispatch(\"suspend\", {\n      trigger: event2\n    });\n  }\n  _onRateChange(event2) {\n    this._delegate._dispatch(\"rate-change\", {\n      detail: this._media.playbackRate,\n      trigger: event2\n    });\n  }\n  _onError(event2) {\n    const error = this._media.error;\n    if (!error) return;\n    this._delegate._dispatch(\"error\", {\n      detail: {\n        message: error.message,\n        code: error.code,\n        mediaError: error\n      },\n      trigger: event2\n    });\n  }\n}\nexport { HTMLMediaEvents as H };","map":{"version":3,"names":["effect","onDispose","useDisposalBin","listenEvent","DOMEvent","isNil","R","RAFLoop","i","isHLSSrc","z","getNumberOfDecimalPlaces","I","IS_SAFARI","HTMLMediaEvents","constructor","_provider","_context","_attachInitialListeners","_attachTimeUpdate","bind","_onDispose","_disposal","_waiting","_attachedLoadStart","_attachedCanPlay","_timeRAF","_onRAF","_media","media","_delegate","delegate","_stop","empty","newTime","currentTime","$store","_updateCurrentTime","_attachEventListener","_onLoadStart","_onAbort","_onEmptied","_onError","logger","debug","_attachLoadStartListeners","add","_onLoadedData","_onLoadedMetadata","_onCanPlay","_onCanPlayThrough","_onDurationChange","_onPlay","_onProgress","_onStalled","_onSuspend","_attachCanPlayListeners","_onPause","_onPlaying","_onRateChange","_onSeeked","_onSeeking","_onEnded","_onVolumeChange","_onWaiting","_handlers","Map","_handleDevEvent","_onDevEvent","eventType","handler","set","event2","debugGroup","type","labelledLog","dispatch","get","call","time","trigger","_dispatch","detail","Math","min","seekableEnd","played","networkState","event","_onStreamTypeChange","volume","muted","source","_ready","_getCanPlayDetail","duration","buffered","seekable","isLive","Number","isFinite","canPlay","readyState","started","_start","loop","_onLoop","paused","_onTimeUpdate","ended","trunc","player","dispatchEvent","hasCustomControls","controls","playbackRate","error","message","code","mediaError","H"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/html/html–media-events.js"],"sourcesContent":["import { effect, onDispose } from 'maverick.js';\nimport { useDisposalBin, listenEvent, DOMEvent, isNil } from 'maverick.js/std';\nimport { R as RAFLoop } from '../hls/hls.js';\nimport { i as isHLSSrc } from '../audio/loader.js';\nimport { z as getNumberOfDecimalPlaces } from '../../media-ui.js';\nimport { I as IS_SAFARI } from '../../media-core.js';\n\nclass HTMLMediaEvents {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._attachInitialListeners();\n    effect(this._attachTimeUpdate.bind(this));\n    onDispose(this._onDispose.bind(this));\n  }\n  _disposal = useDisposalBin();\n  _waiting = false;\n  _attachedLoadStart = false;\n  _attachedCanPlay = false;\n  _timeRAF = new RAFLoop(this._onRAF.bind(this));\n  get _media() {\n    return this._provider.media;\n  }\n  get _delegate() {\n    return this._context.delegate;\n  }\n  _onDispose() {\n    this._timeRAF._stop();\n    this._disposal.empty();\n  }\n  /**\n   * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n   * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n   * resolve that by retrieving time updates in a request animation frame loop.\n   */\n  _onRAF() {\n    const newTime = this._provider.currentTime;\n    if (this._context.$store.currentTime() !== newTime)\n      this._updateCurrentTime(newTime);\n  }\n  _attachInitialListeners() {\n    this._attachEventListener(\"loadstart\", this._onLoadStart);\n    this._attachEventListener(\"abort\", this._onAbort);\n    this._attachEventListener(\"emptied\", this._onEmptied);\n    this._attachEventListener(\"error\", this._onError);\n    this._context.logger?.debug(\"attached initial media event listeners\");\n  }\n  _attachLoadStartListeners() {\n    if (this._attachedLoadStart)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"loadeddata\", this._onLoadedData),\n      this._attachEventListener(\"loadedmetadata\", this._onLoadedMetadata),\n      this._attachEventListener(\"canplay\", this._onCanPlay),\n      this._attachEventListener(\"canplaythrough\", this._onCanPlayThrough),\n      this._attachEventListener(\"durationchange\", this._onDurationChange),\n      this._attachEventListener(\"play\", this._onPlay),\n      this._attachEventListener(\"progress\", this._onProgress),\n      this._attachEventListener(\"stalled\", this._onStalled),\n      this._attachEventListener(\"suspend\", this._onSuspend)\n    );\n    this._attachedLoadStart = true;\n  }\n  _attachCanPlayListeners() {\n    if (this._attachedCanPlay)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"pause\", this._onPause),\n      this._attachEventListener(\"playing\", this._onPlaying),\n      this._attachEventListener(\"ratechange\", this._onRateChange),\n      this._attachEventListener(\"seeked\", this._onSeeked),\n      this._attachEventListener(\"seeking\", this._onSeeking),\n      this._attachEventListener(\"ended\", this._onEnded),\n      this._attachEventListener(\"volumechange\", this._onVolumeChange),\n      this._attachEventListener(\"waiting\", this._onWaiting)\n    );\n    this._attachedCanPlay = true;\n  }\n  _handlers = /* @__PURE__ */ new Map() ;\n  _handleDevEvent = this._onDevEvent.bind(this) ;\n  _attachEventListener(eventType, handler) {\n    this._handlers.set(eventType, handler);\n    return listenEvent(\n      this._media,\n      eventType,\n      this._handleDevEvent \n    );\n  }\n  _onDevEvent(event2) {\n    this._context.logger?.debugGroup(`\\u{1F4FA} fired \\`${event2.type}\\``).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    this._handlers.get(event2.type)?.call(this, event2);\n  }\n  _updateCurrentTime(time, trigger) {\n    this._delegate._dispatch(\"time-update\", {\n      // Avoid errors where `currentTime` can have higher precision.\n      detail: {\n        currentTime: Math.min(time, this._context.$store.seekableEnd()),\n        played: this._media.played\n      },\n      trigger\n    });\n  }\n  _onLoadStart(event2) {\n    if (this._media.networkState === 3) {\n      this._onAbort(event2);\n      return;\n    }\n    this._attachLoadStartListeners();\n    this._delegate._dispatch(\"load-start\", { trigger: event2 });\n  }\n  _onAbort(event2) {\n    this._delegate._dispatch(\"abort\", { trigger: event2 });\n  }\n  _onEmptied() {\n    this._delegate._dispatch(\"emptied\", { trigger: event });\n  }\n  _onLoadedData(event2) {\n    this._delegate._dispatch(\"loaded-data\", { trigger: event2 });\n  }\n  _onLoadedMetadata(event2) {\n    this._onStreamTypeChange();\n    this._attachCanPlayListeners();\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      }\n    });\n    this._delegate._dispatch(\"loaded-metadata\", { trigger: event2 });\n    if (IS_SAFARI && isHLSSrc(this._context.$store.source())) {\n      this._delegate._ready(this._getCanPlayDetail(), event2);\n    }\n  }\n  _getCanPlayDetail() {\n    return {\n      duration: this._media.duration,\n      buffered: this._media.buffered,\n      seekable: this._media.seekable\n    };\n  }\n  _onStreamTypeChange() {\n    const isLive = !Number.isFinite(this._media.duration);\n    this._delegate._dispatch(\"stream-type-change\", {\n      detail: isLive ? \"live\" : \"on-demand\"\n    });\n  }\n  _onPlay(event2) {\n    if (!this._context.$store.canPlay)\n      return;\n    this._delegate._dispatch(\"play\", { trigger: event2 });\n  }\n  _onPause(event2) {\n    if (this._media.readyState === 1 && !this._waiting)\n      return;\n    this._waiting = false;\n    this._timeRAF._stop();\n    this._delegate._dispatch(\"pause\", { trigger: event2 });\n  }\n  _onCanPlay(event2) {\n    this._delegate._ready(this._getCanPlayDetail(), event2);\n  }\n  _onCanPlayThrough(event2) {\n    if (this._context.$store.started())\n      return;\n    this._delegate._dispatch(\"can-play-through\", {\n      trigger: event2,\n      detail: this._getCanPlayDetail()\n    });\n  }\n  _onPlaying(event2) {\n    this._waiting = false;\n    this._delegate._dispatch(\"playing\", { trigger: event2 });\n    this._timeRAF._start();\n  }\n  _onStalled(event2) {\n    this._delegate._dispatch(\"stalled\", { trigger: event2 });\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onWaiting(event2) {\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onEnded(event2) {\n    this._timeRAF._stop();\n    this._updateCurrentTime(this._media.duration, event2);\n    this._delegate._dispatch(\"end\", { trigger: event2 });\n    if (this._context.$store.loop()) {\n      this._onLoop();\n    } else {\n      this._delegate._dispatch(\"ended\", { trigger: event2 });\n    }\n  }\n  _attachTimeUpdate() {\n    if (this._context.$store.paused()) {\n      listenEvent(this._media, \"timeupdate\", this._onTimeUpdate.bind(this));\n    }\n  }\n  _onTimeUpdate(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n  }\n  _onDurationChange(event2) {\n    this._onStreamTypeChange();\n    if (this._context.$store.ended()) {\n      this._updateCurrentTime(this._media.duration, event2);\n    }\n    this._delegate._dispatch(\"duration-change\", {\n      detail: this._media.duration,\n      trigger: event2\n    });\n  }\n  _onVolumeChange(event2) {\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      },\n      trigger: event2\n    });\n  }\n  _onSeeked(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n    this._delegate._dispatch(\"seeked\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n    if (Math.trunc(this._media.currentTime) === Math.trunc(this._media.duration) && getNumberOfDecimalPlaces(this._media.duration) > getNumberOfDecimalPlaces(this._media.currentTime)) {\n      this._updateCurrentTime(this._media.duration, event2);\n      if (!this._media.ended) {\n        this._context.player.dispatchEvent(\n          new DOMEvent(\"media-play-request\", {\n            trigger: event2\n          })\n        );\n      }\n    }\n  }\n  _onSeeking(event2) {\n    this._delegate._dispatch(\"seeking\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n  }\n  _onProgress(event2) {\n    this._delegate._dispatch(\"progress\", {\n      detail: {\n        buffered: this._media.buffered,\n        seekable: this._media.seekable\n      },\n      trigger: event2\n    });\n  }\n  _onLoop() {\n    const hasCustomControls = isNil(this._media.controls);\n    if (hasCustomControls)\n      this._media.controls = false;\n    this._context.player.dispatchEvent(new DOMEvent(\"media-loop-request\"));\n  }\n  _onSuspend(event2) {\n    this._delegate._dispatch(\"suspend\", { trigger: event2 });\n  }\n  _onRateChange(event2) {\n    this._delegate._dispatch(\"rate-change\", {\n      detail: this._media.playbackRate,\n      trigger: event2\n    });\n  }\n  _onError(event2) {\n    const error = this._media.error;\n    if (!error)\n      return;\n    this._delegate._dispatch(\"error\", {\n      detail: {\n        message: error.message,\n        code: error.code,\n        mediaError: error\n      },\n      trigger: event2\n    });\n  }\n}\n\nexport { HTMLMediaEvents as H };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,aAAa;AAC/C,SAASC,cAAc,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,iBAAiB;AAC9E,SAASC,CAAC,IAAIC,OAAO,QAAQ,eAAe;AAC5C,SAASC,CAAC,IAAIC,QAAQ,QAAQ,oBAAoB;AAClD,SAASC,CAAC,IAAIC,wBAAwB,QAAQ,mBAAmB;AACjE,SAASC,CAAC,IAAIC,SAAS,QAAQ,qBAAqB;AAEpD,MAAMC,eAAe,CAAC;EACpBC,WAAWA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAC/B,IAAI,CAACD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,uBAAuB,CAAC,CAAC;IAC9BlB,MAAM,CAAC,IAAI,CAACmB,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzCnB,SAAS,CAAC,IAAI,CAACoB,UAAU,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;EACvC;EACAE,SAAS,GAAGpB,cAAc,CAAC,CAAC;EAC5BqB,QAAQ,GAAG,KAAK;EAChBC,kBAAkB,GAAG,KAAK;EAC1BC,gBAAgB,GAAG,KAAK;EACxBC,QAAQ,GAAG,IAAInB,OAAO,CAAC,IAAI,CAACoB,MAAM,CAACP,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C,IAAIQ,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACZ,SAAS,CAACa,KAAK;EAC7B;EACA,IAAIC,SAASA,CAAA,EAAG;IACd,OAAO,IAAI,CAACb,QAAQ,CAACc,QAAQ;EAC/B;EACAV,UAAUA,CAAA,EAAG;IACX,IAAI,CAACK,QAAQ,CAACM,KAAK,CAAC,CAAC;IACrB,IAAI,CAACV,SAAS,CAACW,KAAK,CAAC,CAAC;EACxB;EACA;AACF;AACA;AACA;AACA;EACEN,MAAMA,CAAA,EAAG;IACP,MAAMO,OAAO,GAAG,IAAI,CAAClB,SAAS,CAACmB,WAAW;IAC1C,IAAI,IAAI,CAAClB,QAAQ,CAACmB,MAAM,CAACD,WAAW,CAAC,CAAC,KAAKD,OAAO,EAChD,IAAI,CAACG,kBAAkB,CAACH,OAAO,CAAC;EACpC;EACAhB,uBAAuBA,CAAA,EAAG;IACxB,IAAI,CAACoB,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAACC,YAAY,CAAC;IACzD,IAAI,CAACD,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAACE,QAAQ,CAAC;IACjD,IAAI,CAACF,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACG,UAAU,CAAC;IACrD,IAAI,CAACH,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAACI,QAAQ,CAAC;IACjD,IAAI,CAACzB,QAAQ,CAAC0B,MAAM,EAAEC,KAAK,CAAC,wCAAwC,CAAC;EACvE;EACAC,yBAAyBA,CAAA,EAAG;IAC1B,IAAI,IAAI,CAACrB,kBAAkB,EACzB;IACF,IAAI,CAACF,SAAS,CAACwB,GAAG,CAChB,IAAI,CAACR,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAACS,aAAa,CAAC,EAC3D,IAAI,CAACT,oBAAoB,CAAC,gBAAgB,EAAE,IAAI,CAACU,iBAAiB,CAAC,EACnE,IAAI,CAACV,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACW,UAAU,CAAC,EACrD,IAAI,CAACX,oBAAoB,CAAC,gBAAgB,EAAE,IAAI,CAACY,iBAAiB,CAAC,EACnE,IAAI,CAACZ,oBAAoB,CAAC,gBAAgB,EAAE,IAAI,CAACa,iBAAiB,CAAC,EACnE,IAAI,CAACb,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAACc,OAAO,CAAC,EAC/C,IAAI,CAACd,oBAAoB,CAAC,UAAU,EAAE,IAAI,CAACe,WAAW,CAAC,EACvD,IAAI,CAACf,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACgB,UAAU,CAAC,EACrD,IAAI,CAAChB,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACiB,UAAU,CACtD,CAAC;IACD,IAAI,CAAC/B,kBAAkB,GAAG,IAAI;EAChC;EACAgC,uBAAuBA,CAAA,EAAG;IACxB,IAAI,IAAI,CAAC/B,gBAAgB,EACvB;IACF,IAAI,CAACH,SAAS,CAACwB,GAAG,CAChB,IAAI,CAACR,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAACmB,QAAQ,CAAC,EACjD,IAAI,CAACnB,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACoB,UAAU,CAAC,EACrD,IAAI,CAACpB,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAACqB,aAAa,CAAC,EAC3D,IAAI,CAACrB,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAACsB,SAAS,CAAC,EACnD,IAAI,CAACtB,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAACuB,UAAU,CAAC,EACrD,IAAI,CAACvB,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAACwB,QAAQ,CAAC,EACjD,IAAI,CAACxB,oBAAoB,CAAC,cAAc,EAAE,IAAI,CAACyB,eAAe,CAAC,EAC/D,IAAI,CAACzB,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC0B,UAAU,CACtD,CAAC;IACD,IAAI,CAACvC,gBAAgB,GAAG,IAAI;EAC9B;EACAwC,SAAS,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;EACrCC,eAAe,GAAG,IAAI,CAACC,WAAW,CAAChD,IAAI,CAAC,IAAI,CAAC;EAC7CkB,oBAAoBA,CAAC+B,SAAS,EAAEC,OAAO,EAAE;IACvC,IAAI,CAACL,SAAS,CAACM,GAAG,CAACF,SAAS,EAAEC,OAAO,CAAC;IACtC,OAAOnE,WAAW,CAChB,IAAI,CAACyB,MAAM,EACXyC,SAAS,EACT,IAAI,CAACF,eACP,CAAC;EACH;EACAC,WAAWA,CAACI,MAAM,EAAE;IAClB,IAAI,CAACvD,QAAQ,CAAC0B,MAAM,EAAE8B,UAAU,CAAE,qBAAoBD,MAAM,CAACE,IAAK,IAAG,CAAC,CAACC,WAAW,CAAC,OAAO,EAAEH,MAAM,CAAC,CAACG,WAAW,CAAC,aAAa,EAAE;MAAE,GAAG,IAAI,CAAC1D,QAAQ,CAACmB;IAAO,CAAC,CAAC,CAACwC,QAAQ,CAAC,CAAC;IACtK,IAAI,CAACX,SAAS,CAACY,GAAG,CAACL,MAAM,CAACE,IAAI,CAAC,EAAEI,IAAI,CAAC,IAAI,EAAEN,MAAM,CAAC;EACrD;EACAnC,kBAAkBA,CAAC0C,IAAI,EAAEC,OAAO,EAAE;IAChC,IAAI,CAAClD,SAAS,CAACmD,SAAS,CAAC,aAAa,EAAE;MACtC;MACAC,MAAM,EAAE;QACN/C,WAAW,EAAEgD,IAAI,CAACC,GAAG,CAACL,IAAI,EAAE,IAAI,CAAC9D,QAAQ,CAACmB,MAAM,CAACiD,WAAW,CAAC,CAAC,CAAC;QAC/DC,MAAM,EAAE,IAAI,CAAC1D,MAAM,CAAC0D;MACtB,CAAC;MACDN;IACF,CAAC,CAAC;EACJ;EACAzC,YAAYA,CAACiC,MAAM,EAAE;IACnB,IAAI,IAAI,CAAC5C,MAAM,CAAC2D,YAAY,KAAK,CAAC,EAAE;MAClC,IAAI,CAAC/C,QAAQ,CAACgC,MAAM,CAAC;MACrB;IACF;IACA,IAAI,CAAC3B,yBAAyB,CAAC,CAAC;IAChC,IAAI,CAACf,SAAS,CAACmD,SAAS,CAAC,YAAY,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EAC7D;EACAhC,QAAQA,CAACgC,MAAM,EAAE;IACf,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,OAAO,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EACxD;EACA/B,UAAUA,CAAA,EAAG;IACX,IAAI,CAACX,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;MAAED,OAAO,EAAEQ;IAAM,CAAC,CAAC;EACzD;EACAzC,aAAaA,CAACyB,MAAM,EAAE;IACpB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,aAAa,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EAC9D;EACAxB,iBAAiBA,CAACwB,MAAM,EAAE;IACxB,IAAI,CAACiB,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACjC,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAAC1B,SAAS,CAACmD,SAAS,CAAC,eAAe,EAAE;MACxCC,MAAM,EAAE;QACNQ,MAAM,EAAE,IAAI,CAAC9D,MAAM,CAAC8D,MAAM;QAC1BC,KAAK,EAAE,IAAI,CAAC/D,MAAM,CAAC+D;MACrB;IACF,CAAC,CAAC;IACF,IAAI,CAAC7D,SAAS,CAACmD,SAAS,CAAC,iBAAiB,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;IAChE,IAAI3D,SAAS,IAAIJ,QAAQ,CAAC,IAAI,CAACQ,QAAQ,CAACmB,MAAM,CAACwD,MAAM,CAAC,CAAC,CAAC,EAAE;MACxD,IAAI,CAAC9D,SAAS,CAAC+D,MAAM,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAEtB,MAAM,CAAC;IACzD;EACF;EACAsB,iBAAiBA,CAAA,EAAG;IAClB,OAAO;MACLC,QAAQ,EAAE,IAAI,CAACnE,MAAM,CAACmE,QAAQ;MAC9BC,QAAQ,EAAE,IAAI,CAACpE,MAAM,CAACoE,QAAQ;MAC9BC,QAAQ,EAAE,IAAI,CAACrE,MAAM,CAACqE;IACxB,CAAC;EACH;EACAR,mBAAmBA,CAAA,EAAG;IACpB,MAAMS,MAAM,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACxE,MAAM,CAACmE,QAAQ,CAAC;IACrD,IAAI,CAACjE,SAAS,CAACmD,SAAS,CAAC,oBAAoB,EAAE;MAC7CC,MAAM,EAAEgB,MAAM,GAAG,MAAM,GAAG;IAC5B,CAAC,CAAC;EACJ;EACA9C,OAAOA,CAACoB,MAAM,EAAE;IACd,IAAI,CAAC,IAAI,CAACvD,QAAQ,CAACmB,MAAM,CAACiE,OAAO,EAC/B;IACF,IAAI,CAACvE,SAAS,CAACmD,SAAS,CAAC,MAAM,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EACvD;EACAf,QAAQA,CAACe,MAAM,EAAE;IACf,IAAI,IAAI,CAAC5C,MAAM,CAAC0E,UAAU,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC/E,QAAQ,EAChD;IACF,IAAI,CAACA,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACG,QAAQ,CAACM,KAAK,CAAC,CAAC;IACrB,IAAI,CAACF,SAAS,CAACmD,SAAS,CAAC,OAAO,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EACxD;EACAvB,UAAUA,CAACuB,MAAM,EAAE;IACjB,IAAI,CAAC1C,SAAS,CAAC+D,MAAM,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAEtB,MAAM,CAAC;EACzD;EACAtB,iBAAiBA,CAACsB,MAAM,EAAE;IACxB,IAAI,IAAI,CAACvD,QAAQ,CAACmB,MAAM,CAACmE,OAAO,CAAC,CAAC,EAChC;IACF,IAAI,CAACzE,SAAS,CAACmD,SAAS,CAAC,kBAAkB,EAAE;MAC3CD,OAAO,EAAER,MAAM;MACfU,MAAM,EAAE,IAAI,CAACY,iBAAiB,CAAC;IACjC,CAAC,CAAC;EACJ;EACApC,UAAUA,CAACc,MAAM,EAAE;IACjB,IAAI,CAACjD,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACO,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;IACxD,IAAI,CAAC9C,QAAQ,CAAC8E,MAAM,CAAC,CAAC;EACxB;EACAlD,UAAUA,CAACkB,MAAM,EAAE;IACjB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;IACxD,IAAI,IAAI,CAAC5C,MAAM,CAAC0E,UAAU,GAAG,CAAC,EAAE;MAC9B,IAAI,CAAC/E,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACO,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;QAAED,OAAO,EAAER;MAAO,CAAC,CAAC;IAC1D;EACF;EACAR,UAAUA,CAACQ,MAAM,EAAE;IACjB,IAAI,IAAI,CAAC5C,MAAM,CAAC0E,UAAU,GAAG,CAAC,EAAE;MAC9B,IAAI,CAAC/E,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACO,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;QAAED,OAAO,EAAER;MAAO,CAAC,CAAC;IAC1D;EACF;EACAV,QAAQA,CAACU,MAAM,EAAE;IACf,IAAI,CAAC9C,QAAQ,CAACM,KAAK,CAAC,CAAC;IACrB,IAAI,CAACK,kBAAkB,CAAC,IAAI,CAACT,MAAM,CAACmE,QAAQ,EAAEvB,MAAM,CAAC;IACrD,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,KAAK,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;IACpD,IAAI,IAAI,CAACvD,QAAQ,CAACmB,MAAM,CAACqE,IAAI,CAAC,CAAC,EAAE;MAC/B,IAAI,CAACC,OAAO,CAAC,CAAC;IAChB,CAAC,MAAM;MACL,IAAI,CAAC5E,SAAS,CAACmD,SAAS,CAAC,OAAO,EAAE;QAAED,OAAO,EAAER;MAAO,CAAC,CAAC;IACxD;EACF;EACArD,iBAAiBA,CAAA,EAAG;IAClB,IAAI,IAAI,CAACF,QAAQ,CAACmB,MAAM,CAACuE,MAAM,CAAC,CAAC,EAAE;MACjCxG,WAAW,CAAC,IAAI,CAACyB,MAAM,EAAE,YAAY,EAAE,IAAI,CAACgF,aAAa,CAACxF,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE;EACF;EACAwF,aAAaA,CAACpC,MAAM,EAAE;IACpB,IAAI,CAACnC,kBAAkB,CAAC,IAAI,CAACT,MAAM,CAACO,WAAW,EAAEqC,MAAM,CAAC;EAC1D;EACArB,iBAAiBA,CAACqB,MAAM,EAAE;IACxB,IAAI,CAACiB,mBAAmB,CAAC,CAAC;IAC1B,IAAI,IAAI,CAACxE,QAAQ,CAACmB,MAAM,CAACyE,KAAK,CAAC,CAAC,EAAE;MAChC,IAAI,CAACxE,kBAAkB,CAAC,IAAI,CAACT,MAAM,CAACmE,QAAQ,EAAEvB,MAAM,CAAC;IACvD;IACA,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,iBAAiB,EAAE;MAC1CC,MAAM,EAAE,IAAI,CAACtD,MAAM,CAACmE,QAAQ;MAC5Bf,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;EACAT,eAAeA,CAACS,MAAM,EAAE;IACtB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,eAAe,EAAE;MACxCC,MAAM,EAAE;QACNQ,MAAM,EAAE,IAAI,CAAC9D,MAAM,CAAC8D,MAAM;QAC1BC,KAAK,EAAE,IAAI,CAAC/D,MAAM,CAAC+D;MACrB,CAAC;MACDX,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;EACAZ,SAASA,CAACY,MAAM,EAAE;IAChB,IAAI,CAACnC,kBAAkB,CAAC,IAAI,CAACT,MAAM,CAACO,WAAW,EAAEqC,MAAM,CAAC;IACxD,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,QAAQ,EAAE;MACjCC,MAAM,EAAE,IAAI,CAACtD,MAAM,CAACO,WAAW;MAC/B6C,OAAO,EAAER;IACX,CAAC,CAAC;IACF,IAAIW,IAAI,CAAC2B,KAAK,CAAC,IAAI,CAAClF,MAAM,CAACO,WAAW,CAAC,KAAKgD,IAAI,CAAC2B,KAAK,CAAC,IAAI,CAAClF,MAAM,CAACmE,QAAQ,CAAC,IAAIpF,wBAAwB,CAAC,IAAI,CAACiB,MAAM,CAACmE,QAAQ,CAAC,GAAGpF,wBAAwB,CAAC,IAAI,CAACiB,MAAM,CAACO,WAAW,CAAC,EAAE;MAClL,IAAI,CAACE,kBAAkB,CAAC,IAAI,CAACT,MAAM,CAACmE,QAAQ,EAAEvB,MAAM,CAAC;MACrD,IAAI,CAAC,IAAI,CAAC5C,MAAM,CAACiF,KAAK,EAAE;QACtB,IAAI,CAAC5F,QAAQ,CAAC8F,MAAM,CAACC,aAAa,CAChC,IAAI5G,QAAQ,CAAC,oBAAoB,EAAE;UACjC4E,OAAO,EAAER;QACX,CAAC,CACH,CAAC;MACH;IACF;EACF;EACAX,UAAUA,CAACW,MAAM,EAAE;IACjB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;MAClCC,MAAM,EAAE,IAAI,CAACtD,MAAM,CAACO,WAAW;MAC/B6C,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;EACAnB,WAAWA,CAACmB,MAAM,EAAE;IAClB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,UAAU,EAAE;MACnCC,MAAM,EAAE;QACNc,QAAQ,EAAE,IAAI,CAACpE,MAAM,CAACoE,QAAQ;QAC9BC,QAAQ,EAAE,IAAI,CAACrE,MAAM,CAACqE;MACxB,CAAC;MACDjB,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;EACAkC,OAAOA,CAAA,EAAG;IACR,MAAMO,iBAAiB,GAAG5G,KAAK,CAAC,IAAI,CAACuB,MAAM,CAACsF,QAAQ,CAAC;IACrD,IAAID,iBAAiB,EACnB,IAAI,CAACrF,MAAM,CAACsF,QAAQ,GAAG,KAAK;IAC9B,IAAI,CAACjG,QAAQ,CAAC8F,MAAM,CAACC,aAAa,CAAC,IAAI5G,QAAQ,CAAC,oBAAoB,CAAC,CAAC;EACxE;EACAmD,UAAUA,CAACiB,MAAM,EAAE;IACjB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,SAAS,EAAE;MAAED,OAAO,EAAER;IAAO,CAAC,CAAC;EAC1D;EACAb,aAAaA,CAACa,MAAM,EAAE;IACpB,IAAI,CAAC1C,SAAS,CAACmD,SAAS,CAAC,aAAa,EAAE;MACtCC,MAAM,EAAE,IAAI,CAACtD,MAAM,CAACuF,YAAY;MAChCnC,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;EACA9B,QAAQA,CAAC8B,MAAM,EAAE;IACf,MAAM4C,KAAK,GAAG,IAAI,CAACxF,MAAM,CAACwF,KAAK;IAC/B,IAAI,CAACA,KAAK,EACR;IACF,IAAI,CAACtF,SAAS,CAACmD,SAAS,CAAC,OAAO,EAAE;MAChCC,MAAM,EAAE;QACNmC,OAAO,EAAED,KAAK,CAACC,OAAO;QACtBC,IAAI,EAAEF,KAAK,CAACE,IAAI;QAChBC,UAAU,EAAEH;MACd,CAAC;MACDpC,OAAO,EAAER;IACX,CAAC,CAAC;EACJ;AACF;AAEA,SAAS1D,eAAe,IAAI0G,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}