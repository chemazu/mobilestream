{"ast":null,"code":"import { peek } from 'maverick.js';\nimport { isString } from 'maverick.js/std';\nimport { W as isHLSSupported, p as preconnect } from '../../media-core.js';\nimport { VideoProvider } from '../video/provider.js';\nimport { H as HLSController } from './hls.js';\nimport { H as HLSLibLoader } from './lib-loader.js';\nimport 'maverick.js/element';\nimport '../type-check.js';\nimport '../audio/loader.js';\nimport 'maverick.js/dom';\nimport './loader.js';\nimport '../video/loader.js';\nimport '../html/provider.js';\nimport '../html/html–media-events.js';\nimport '../../media-ui.js';\nimport '../../icons/icon.js';\nimport 'media-captions';\nimport '../html/native-audio-tracks.js';\nimport '../video/native-hls-text-tracks.js';\nimport '../video/picture-in-picture.js';\nimport '../video/presentation/video-presentation.js';\nconst JS_DELIVR_CDN = \"https://cdn.jsdelivr.net\";\nclass HLSProvider extends VideoProvider {\n  $$PROVIDER_TYPE = \"HLS\";\n  _ctor = null;\n  _controller = new HLSController(this.video);\n  /**\n   * The `hls.js` constructor.\n   */\n  get ctor() {\n    return this._ctor;\n  }\n  /**\n   * The current `hls.js` instance.\n   */\n  get instance() {\n    return this._controller.instance;\n  }\n  /**\n   * Whether `hls.js` is supported in this environment.\n   */\n  static supported = isHLSSupported();\n  get type() {\n    return \"hls\";\n  }\n  get canLiveSync() {\n    return true;\n  }\n  _library = `${JS_DELIVR_CDN}/npm/hls.js@^1.0.0/dist/hls${\".js\"}`;\n  /**\n   * The `hls.js` configuration object.\n   *\n   * @see {@link https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning}\n   */\n  get config() {\n    return this._controller._config;\n  }\n  set config(config) {\n    this._controller._config = config;\n  }\n  /**\n   * The `hls.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/hls.js@^1.0.0/dist/hls.min.js`\n   */\n  get library() {\n    return this._library;\n  }\n  set library(library) {\n    this._library = library;\n  }\n  preconnect() {\n    if (!isString(this._library)) return;\n    preconnect(this._library);\n  }\n  setup(context) {\n    super.setup(context);\n    new HLSLibLoader(this._library, context, ctor => {\n      this._ctor = ctor;\n      this._controller.setup(ctor, context);\n      context.delegate._dispatch(\"provider-setup\", {\n        detail: this\n      });\n      const src = peek(context.$store.source);\n      if (src) this.loadSource(src);\n    });\n  }\n  async loadSource({\n    src\n  }) {\n    if (!isString(src)) return;\n    this._controller.instance?.loadSource(src);\n  }\n  /**\n   * The given callback is invoked when a new `hls.js` instance is created and right before it's\n   * attached to media.\n   */\n  onInstance(callback) {\n    const instance = this._controller.instance;\n    if (instance) callback(instance);\n    this._controller._callbacks.add(callback);\n    return () => this._controller._callbacks.delete(callback);\n  }\n  destroy() {\n    this._controller._destroy();\n  }\n}\nexport { HLSProvider };","map":{"version":3,"names":["peek","isString","W","isHLSSupported","p","preconnect","VideoProvider","H","HLSController","HLSLibLoader","JS_DELIVR_CDN","HLSProvider","$$PROVIDER_TYPE","_ctor","_controller","video","ctor","instance","supported","type","canLiveSync","_library","config","_config","library","setup","context","delegate","_dispatch","detail","src","$store","source","loadSource","onInstance","callback","_callbacks","add","delete","destroy","_destroy"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/hls/provider.js"],"sourcesContent":["import { peek } from 'maverick.js';\nimport { isString } from 'maverick.js/std';\nimport { W as isHLSSupported, p as preconnect } from '../../media-core.js';\nimport { VideoProvider } from '../video/provider.js';\nimport { H as HLSController } from './hls.js';\nimport { H as HLSLibLoader } from './lib-loader.js';\nimport 'maverick.js/element';\nimport '../type-check.js';\nimport '../audio/loader.js';\nimport 'maverick.js/dom';\nimport './loader.js';\nimport '../video/loader.js';\nimport '../html/provider.js';\nimport '../html/html–media-events.js';\nimport '../../media-ui.js';\nimport '../../icons/icon.js';\nimport 'media-captions';\nimport '../html/native-audio-tracks.js';\nimport '../video/native-hls-text-tracks.js';\nimport '../video/picture-in-picture.js';\nimport '../video/presentation/video-presentation.js';\n\nconst JS_DELIVR_CDN = \"https://cdn.jsdelivr.net\";\nclass HLSProvider extends VideoProvider {\n  $$PROVIDER_TYPE = \"HLS\";\n  _ctor = null;\n  _controller = new HLSController(this.video);\n  /**\n   * The `hls.js` constructor.\n   */\n  get ctor() {\n    return this._ctor;\n  }\n  /**\n   * The current `hls.js` instance.\n   */\n  get instance() {\n    return this._controller.instance;\n  }\n  /**\n   * Whether `hls.js` is supported in this environment.\n   */\n  static supported = isHLSSupported();\n  get type() {\n    return \"hls\";\n  }\n  get canLiveSync() {\n    return true;\n  }\n  _library = `${JS_DELIVR_CDN}/npm/hls.js@^1.0.0/dist/hls${\".js\" }`;\n  /**\n   * The `hls.js` configuration object.\n   *\n   * @see {@link https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning}\n   */\n  get config() {\n    return this._controller._config;\n  }\n  set config(config) {\n    this._controller._config = config;\n  }\n  /**\n   * The `hls.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/hls.js@^1.0.0/dist/hls.min.js`\n   */\n  get library() {\n    return this._library;\n  }\n  set library(library) {\n    this._library = library;\n  }\n  preconnect() {\n    if (!isString(this._library))\n      return;\n    preconnect(this._library);\n  }\n  setup(context) {\n    super.setup(context);\n    new HLSLibLoader(this._library, context, (ctor) => {\n      this._ctor = ctor;\n      this._controller.setup(ctor, context);\n      context.delegate._dispatch(\"provider-setup\", { detail: this });\n      const src = peek(context.$store.source);\n      if (src)\n        this.loadSource(src);\n    });\n  }\n  async loadSource({ src }) {\n    if (!isString(src))\n      return;\n    this._controller.instance?.loadSource(src);\n  }\n  /**\n   * The given callback is invoked when a new `hls.js` instance is created and right before it's\n   * attached to media.\n   */\n  onInstance(callback) {\n    const instance = this._controller.instance;\n    if (instance)\n      callback(instance);\n    this._controller._callbacks.add(callback);\n    return () => this._controller._callbacks.delete(callback);\n  }\n  destroy() {\n    this._controller._destroy();\n  }\n}\n\nexport { HLSProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}