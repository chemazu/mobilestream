{"ast":null,"code":"import { peek, effect } from 'maverick.js';\nimport { isUndefined, isNumber, DOMEvent, listenEvent, camelToKebabCase } from 'maverick.js/std';\nimport { G as ENABLE_AUTO_QUALITY, H as TextTrack, J as TEXT_TRACK_READY_STATE, K as TEXT_TRACK_ON_MODE_CHANGE, L as LIST_SELECT, N as SET_AUTO_QUALITY, P as LIST_ADD, Q as IS_CHROME } from '../../media-core.js';\nclass RAFLoop {\n  constructor(_callback) {\n    this._callback = _callback;\n  }\n  _id;\n  _start() {\n    if (!isUndefined(this._id)) return;\n    this._loop();\n  }\n  _stop() {\n    if (isNumber(this._id)) window.cancelAnimationFrame(this._id);\n    this._id = void 0;\n  }\n  _loop() {\n    this._id = window.requestAnimationFrame(() => {\n      if (isUndefined(this._id)) return;\n      this._callback();\n      this._loop();\n    });\n  }\n}\nconst toDOMEventType = type => camelToKebabCase(type);\nclass HLSController {\n  constructor(_video) {\n    this._video = _video;\n  }\n  _context;\n  _instance = null;\n  _stopLiveSync = null;\n  _config = {};\n  _callbacks = /* @__PURE__ */new Set();\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor, context) {\n    this._context = context;\n    const isLive = peek(context.$store.streamType).includes(\"live\"),\n      isLiveLowLatency = peek(context.$store.streamType).includes(\"ll-\");\n    this._instance = new ctor({\n      lowLatencyMode: isLiveLowLatency,\n      backBufferLength: isLiveLowLatency ? 4 : isLive ? 8 : void 0,\n      renderTextTracksNatively: false,\n      ...this._config\n    });\n    const dispatcher = this._dispatchHLSEvent.bind(this);\n    for (const event of Object.values(ctor.Events)) this._instance.on(event, dispatcher);\n    this._instance.on(ctor.Events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks) callback(this._instance);\n    context.player.dispatchEvent(new DOMEvent(\"hls-instance\", {\n      detail: this._instance\n    }));\n    this._instance.attachMedia(this._video);\n    this._instance.on(ctor.Events.AUDIO_TRACK_SWITCHED, this._onAudioSwitch.bind(this));\n    this._instance.on(ctor.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._instance.on(ctor.Events.LEVEL_LOADED, this._onLevelLoaded.bind(this));\n    this._instance.on(ctor.Events.NON_NATIVE_TEXT_TRACKS_FOUND, this._onTracksFound.bind(this));\n    this._instance.on(ctor.Events.CUES_PARSED, this._onCuesParsed.bind(this));\n    context.qualities[ENABLE_AUTO_QUALITY] = this._enableAutoQuality.bind(this);\n    listenEvent(context.qualities, \"change\", this._onQualityChange.bind(this));\n    listenEvent(context.audioTracks, \"change\", this._onAudioChange.bind(this));\n    this._stopLiveSync = effect(this._liveSync.bind(this));\n  }\n  _liveSync() {\n    if (!this._context.$store.live()) return;\n    const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    this._context.$store.liveSyncPosition.set(this._instance?.liveSyncPosition ?? Infinity);\n  }\n  _dispatchHLSEvent(eventType, detail) {\n    this._context.player.dispatchEvent(new DOMEvent(toDOMEventType(eventType), {\n      detail\n    }));\n  }\n  _onTracksFound(eventType, data) {\n    const event = new DOMEvent(eventType, {\n      detail: data\n    });\n    let currentTrack = -1;\n    for (let i = 0; i < data.tracks.length; i++) {\n      const nonNativeTrack = data.tracks[i],\n        init = nonNativeTrack.subtitleTrack ?? nonNativeTrack.closedCaptions,\n        track = new TextTrack({\n          id: `hls-${nonNativeTrack.kind}${i}`,\n          src: init?.url,\n          label: nonNativeTrack.label,\n          language: init?.lang,\n          kind: nonNativeTrack.kind\n        });\n      track[TEXT_TRACK_READY_STATE] = 2;\n      track[TEXT_TRACK_ON_MODE_CHANGE] = () => {\n        if (track.mode === \"showing\") {\n          this._instance.subtitleTrack = i;\n          currentTrack = i;\n        } else if (currentTrack === i) {\n          this._instance.subtitleTrack = -1;\n          currentTrack = -1;\n        }\n      };\n      if (nonNativeTrack.default) track.setMode(\"showing\", event);\n      this._context.textTracks.add(track, event);\n    }\n  }\n  _onCuesParsed(eventType, data) {\n    const track = this._context.textTracks.getById(`hls-${data.track}`);\n    if (!track) return;\n    const event = new DOMEvent(eventType, {\n      detail: data\n    });\n    for (const cue of data.cues) {\n      cue.positionAlign = \"auto\";\n      track.addCue(cue, event);\n    }\n  }\n  _onAudioSwitch(eventType, data) {\n    const track = this._context.audioTracks[data.id];\n    if (track) {\n      this._context.audioTracks[LIST_SELECT](track, true, new DOMEvent(eventType, {\n        detail: data\n      }));\n    }\n  }\n  _onLevelSwitched(eventType, data) {\n    const quality = this._context.qualities[data.level];\n    if (quality) {\n      this._context.qualities[LIST_SELECT](quality, true, new DOMEvent(eventType, {\n        detail: data\n      }));\n    }\n  }\n  _onLevelLoaded(eventType, data) {\n    if (this._context.$store.canPlay()) return;\n    const {\n      type,\n      live,\n      totalduration: duration\n    } = data.details;\n    const event = new DOMEvent(eventType, {\n      detail: data\n    });\n    this._context.delegate._dispatch(\"stream-type-change\", {\n      detail: live ? type === \"EVENT\" && Number.isFinite(duration) ? \"live:dvr\" : \"live\" : \"on-demand\",\n      trigger: event\n    });\n    this._context.delegate._dispatch(\"duration-change\", {\n      detail: duration,\n      trigger: event\n    });\n    const media = this._instance.media;\n    if (this._instance.currentLevel === -1) {\n      this._context.qualities[SET_AUTO_QUALITY](true, event);\n    }\n    for (const track of this._instance.audioTracks) {\n      this._context.audioTracks[LIST_ADD]({\n        id: track.id + \"\",\n        label: track.name,\n        language: track.lang || \"\",\n        kind: \"main\"\n      }, event);\n    }\n    for (const level of this._instance.levels) {\n      this._context.qualities[LIST_ADD]({\n        width: level.width,\n        height: level.height,\n        codec: level.codecSet,\n        bitrate: level.bitrate\n      }, event);\n    }\n    media.dispatchEvent(new DOMEvent(\"canplay\", {\n      trigger: event\n    }));\n  }\n  _onError(eventType, data) {\n    {\n      this._context.logger?.errorGroup(`HLS error \\`${eventType}\\``).labelledLog(\"Media Element\", this._instance?.media).labelledLog(\"HLS Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", peek(this._context.$store.source)).labelledLog(\"Media Store\", {\n        ...this._context.$store\n      }).dispatch();\n    }\n    if (data.fatal) {\n      switch (data.type) {\n        case \"networkError\":\n          this._instance?.startLoad();\n          break;\n        case \"mediaError\":\n          this._instance?.recoverMediaError();\n          break;\n        default:\n          this._instance?.destroy();\n          this._instance = null;\n          break;\n      }\n    }\n  }\n  _enableAutoQuality() {\n    if (this._instance) this._instance.currentLevel = -1;\n  }\n  _onQualityChange() {\n    const {\n      qualities\n    } = this._context;\n    if (!this._instance || qualities.auto) return;\n    this._instance[qualities.switch + \"Level\"] = qualities.selectedIndex;\n    if (IS_CHROME) this._video.currentTime = this._video.currentTime;\n  }\n  _onAudioChange() {\n    const {\n      audioTracks\n    } = this._context;\n    if (this._instance && this._instance.audioTrack !== audioTracks.selectedIndex) {\n      this._instance.audioTrack = audioTracks.selectedIndex;\n    }\n  }\n  _destroy() {\n    if (this._context) this._context.qualities[ENABLE_AUTO_QUALITY] = void 0;\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._context?.logger?.info(\"\\u{1F3D7}\\uFE0F Destroyed HLS instance\");\n  }\n}\nexport { HLSController as H, RAFLoop as R };","map":{"version":3,"names":["peek","effect","isUndefined","isNumber","DOMEvent","listenEvent","camelToKebabCase","G","ENABLE_AUTO_QUALITY","H","TextTrack","J","TEXT_TRACK_READY_STATE","K","TEXT_TRACK_ON_MODE_CHANGE","L","LIST_SELECT","N","SET_AUTO_QUALITY","P","LIST_ADD","Q","IS_CHROME","RAFLoop","constructor","_callback","_id","_start","_loop","_stop","window","cancelAnimationFrame","requestAnimationFrame","toDOMEventType","type","HLSController","_video","_context","_instance","_stopLiveSync","_config","_callbacks","Set","instance","setup","ctor","context","isLive","$store","streamType","includes","isLiveLowLatency","lowLatencyMode","backBufferLength","renderTextTracksNatively","dispatcher","_dispatchHLSEvent","bind","event","Object","values","Events","on","ERROR","_onError","callback","player","dispatchEvent","detail","attachMedia","AUDIO_TRACK_SWITCHED","_onAudioSwitch","LEVEL_SWITCHED","_onLevelSwitched","LEVEL_LOADED","_onLevelLoaded","NON_NATIVE_TEXT_TRACKS_FOUND","_onTracksFound","CUES_PARSED","_onCuesParsed","qualities","_enableAutoQuality","_onQualityChange","audioTracks","_onAudioChange","_liveSync","live","raf","_liveSyncPosition","liveSyncPosition","set","Infinity","eventType","data","currentTrack","i","tracks","length","nonNativeTrack","init","subtitleTrack","closedCaptions","track","id","kind","src","url","label","language","lang","mode","default","setMode","textTracks","add","getById","cue","cues","positionAlign","addCue","quality","level","canPlay","totalduration","duration","details","delegate","_dispatch","Number","isFinite","trigger","media","currentLevel","name","levels","width","height","codec","codecSet","bitrate","logger","errorGroup","labelledLog","source","dispatch","fatal","startLoad","recoverMediaError","destroy","auto","switch","selectedIndex","currentTime","audioTrack","_destroy","info","R"],"sources":["/Users/user/Documents/mobilestreamapp/client/node_modules/vidstack/dist/dev/providers/hls/hls.js"],"sourcesContent":["import { peek, effect } from 'maverick.js';\nimport { isUndefined, isNumber, DOMEvent, listenEvent, camelToKebabCase } from 'maverick.js/std';\nimport { G as ENABLE_AUTO_QUALITY, H as TextTrack, J as TEXT_TRACK_READY_STATE, K as TEXT_TRACK_ON_MODE_CHANGE, L as LIST_SELECT, N as SET_AUTO_QUALITY, P as LIST_ADD, Q as IS_CHROME } from '../../media-core.js';\n\nclass RAFLoop {\n  constructor(_callback) {\n    this._callback = _callback;\n  }\n  _id;\n  _start() {\n    if (!isUndefined(this._id))\n      return;\n    this._loop();\n  }\n  _stop() {\n    if (isNumber(this._id))\n      window.cancelAnimationFrame(this._id);\n    this._id = void 0;\n  }\n  _loop() {\n    this._id = window.requestAnimationFrame(() => {\n      if (isUndefined(this._id))\n        return;\n      this._callback();\n      this._loop();\n    });\n  }\n}\n\nconst toDOMEventType = (type) => camelToKebabCase(type);\nclass HLSController {\n  constructor(_video) {\n    this._video = _video;\n  }\n  _context;\n  _instance = null;\n  _stopLiveSync = null;\n  _config = {};\n  _callbacks = /* @__PURE__ */ new Set();\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor, context) {\n    this._context = context;\n    const isLive = peek(context.$store.streamType).includes(\"live\"), isLiveLowLatency = peek(context.$store.streamType).includes(\"ll-\");\n    this._instance = new ctor({\n      lowLatencyMode: isLiveLowLatency,\n      backBufferLength: isLiveLowLatency ? 4 : isLive ? 8 : void 0,\n      renderTextTracksNatively: false,\n      ...this._config\n    });\n    const dispatcher = this._dispatchHLSEvent.bind(this);\n    for (const event of Object.values(ctor.Events))\n      this._instance.on(event, dispatcher);\n    this._instance.on(ctor.Events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks)\n      callback(this._instance);\n    context.player.dispatchEvent(new DOMEvent(\"hls-instance\", { detail: this._instance }));\n    this._instance.attachMedia(this._video);\n    this._instance.on(ctor.Events.AUDIO_TRACK_SWITCHED, this._onAudioSwitch.bind(this));\n    this._instance.on(ctor.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._instance.on(ctor.Events.LEVEL_LOADED, this._onLevelLoaded.bind(this));\n    this._instance.on(ctor.Events.NON_NATIVE_TEXT_TRACKS_FOUND, this._onTracksFound.bind(this));\n    this._instance.on(ctor.Events.CUES_PARSED, this._onCuesParsed.bind(this));\n    context.qualities[ENABLE_AUTO_QUALITY] = this._enableAutoQuality.bind(this);\n    listenEvent(context.qualities, \"change\", this._onQualityChange.bind(this));\n    listenEvent(context.audioTracks, \"change\", this._onAudioChange.bind(this));\n    this._stopLiveSync = effect(this._liveSync.bind(this));\n  }\n  _liveSync() {\n    if (!this._context.$store.live())\n      return;\n    const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    this._context.$store.liveSyncPosition.set(this._instance?.liveSyncPosition ?? Infinity);\n  }\n  _dispatchHLSEvent(eventType, detail) {\n    this._context.player.dispatchEvent(new DOMEvent(toDOMEventType(eventType), { detail }));\n  }\n  _onTracksFound(eventType, data) {\n    const event = new DOMEvent(eventType, { detail: data });\n    let currentTrack = -1;\n    for (let i = 0; i < data.tracks.length; i++) {\n      const nonNativeTrack = data.tracks[i], init = nonNativeTrack.subtitleTrack ?? nonNativeTrack.closedCaptions, track = new TextTrack({\n        id: `hls-${nonNativeTrack.kind}${i}`,\n        src: init?.url,\n        label: nonNativeTrack.label,\n        language: init?.lang,\n        kind: nonNativeTrack.kind\n      });\n      track[TEXT_TRACK_READY_STATE] = 2;\n      track[TEXT_TRACK_ON_MODE_CHANGE] = () => {\n        if (track.mode === \"showing\") {\n          this._instance.subtitleTrack = i;\n          currentTrack = i;\n        } else if (currentTrack === i) {\n          this._instance.subtitleTrack = -1;\n          currentTrack = -1;\n        }\n      };\n      if (nonNativeTrack.default)\n        track.setMode(\"showing\", event);\n      this._context.textTracks.add(track, event);\n    }\n  }\n  _onCuesParsed(eventType, data) {\n    const track = this._context.textTracks.getById(`hls-${data.track}`);\n    if (!track)\n      return;\n    const event = new DOMEvent(eventType, { detail: data });\n    for (const cue of data.cues) {\n      cue.positionAlign = \"auto\";\n      track.addCue(cue, event);\n    }\n  }\n  _onAudioSwitch(eventType, data) {\n    const track = this._context.audioTracks[data.id];\n    if (track) {\n      this._context.audioTracks[LIST_SELECT](\n        track,\n        true,\n        new DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelSwitched(eventType, data) {\n    const quality = this._context.qualities[data.level];\n    if (quality) {\n      this._context.qualities[LIST_SELECT](\n        quality,\n        true,\n        new DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelLoaded(eventType, data) {\n    if (this._context.$store.canPlay())\n      return;\n    const { type, live, totalduration: duration } = data.details;\n    const event = new DOMEvent(eventType, { detail: data });\n    this._context.delegate._dispatch(\"stream-type-change\", {\n      detail: live ? type === \"EVENT\" && Number.isFinite(duration) ? \"live:dvr\" : \"live\" : \"on-demand\",\n      trigger: event\n    });\n    this._context.delegate._dispatch(\"duration-change\", { detail: duration, trigger: event });\n    const media = this._instance.media;\n    if (this._instance.currentLevel === -1) {\n      this._context.qualities[SET_AUTO_QUALITY](true, event);\n    }\n    for (const track of this._instance.audioTracks) {\n      this._context.audioTracks[LIST_ADD](\n        {\n          id: track.id + \"\",\n          label: track.name,\n          language: track.lang || \"\",\n          kind: \"main\"\n        },\n        event\n      );\n    }\n    for (const level of this._instance.levels) {\n      this._context.qualities[LIST_ADD](\n        {\n          width: level.width,\n          height: level.height,\n          codec: level.codecSet,\n          bitrate: level.bitrate\n        },\n        event\n      );\n    }\n    media.dispatchEvent(new DOMEvent(\"canplay\", { trigger: event }));\n  }\n  _onError(eventType, data) {\n    {\n      this._context.logger?.errorGroup(`HLS error \\`${eventType}\\``).labelledLog(\"Media Element\", this._instance?.media).labelledLog(\"HLS Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", peek(this._context.$store.source)).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    }\n    if (data.fatal) {\n      switch (data.type) {\n        case \"networkError\":\n          this._instance?.startLoad();\n          break;\n        case \"mediaError\":\n          this._instance?.recoverMediaError();\n          break;\n        default:\n          this._instance?.destroy();\n          this._instance = null;\n          break;\n      }\n    }\n  }\n  _enableAutoQuality() {\n    if (this._instance)\n      this._instance.currentLevel = -1;\n  }\n  _onQualityChange() {\n    const { qualities } = this._context;\n    if (!this._instance || qualities.auto)\n      return;\n    this._instance[qualities.switch + \"Level\"] = qualities.selectedIndex;\n    if (IS_CHROME)\n      this._video.currentTime = this._video.currentTime;\n  }\n  _onAudioChange() {\n    const { audioTracks } = this._context;\n    if (this._instance && this._instance.audioTrack !== audioTracks.selectedIndex) {\n      this._instance.audioTrack = audioTracks.selectedIndex;\n    }\n  }\n  _destroy() {\n    if (this._context)\n      this._context.qualities[ENABLE_AUTO_QUALITY] = void 0;\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._context?.logger?.info(\"\\u{1F3D7}\\uFE0F Destroyed HLS instance\");\n  }\n}\n\nexport { HLSController as H, RAFLoop as R };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}