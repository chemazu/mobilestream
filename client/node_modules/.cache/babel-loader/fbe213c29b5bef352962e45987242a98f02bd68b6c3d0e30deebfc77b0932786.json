{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/mobilestreamapp/client/src/Watch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Watch() {\n  _s();\n  const [remoteStream, setRemoteStream] = useState(null);\n  const socket = io(\"http://localhost:5000\");\n  const peerRef = useRef();\n  const initPeer = () => {\n    const peerInstance = new Peer();\n    peerInstance.on(\"open\", peerId => {\n      socket.emit(\"watcher\", peerId);\n    });\n    peerInstance.on(\"call\", call => {\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      }).then(stream => {\n        setRemoteStream(stream);\n        call.answer(stream);\n        call.on(\"stream\", remoteStream => {\n          // Handle the remote stream as needed\n        });\n      }).catch(error => console.error(\"Error accessing media devices:\", error));\n    });\n    peerRef.current = peerInstance;\n  };\n  useEffect(() => {\n    initPeer();\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n      peerRef.current.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: remoteStream && /*#__PURE__*/_jsxDEV(\"video\", {\n      srcObject: remoteStream,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Watch, \"963Mwty46mZzvtLf39IKhv3TIWM=\");\n_c = Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Peer","io","jsxDEV","_jsxDEV","Watch","_s","remoteStream","setRemoteStream","socket","peerRef","initPeer","peerInstance","on","peerId","emit","call","navigator","mediaDevices","getUserMedia","audio","video","then","stream","answer","catch","error","console","current","destroy","children","srcObject","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/mobilestreamapp/client/src/Watch.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Peer from \"peerjs\";\nimport { io } from \"socket.io-client\";\n\nexport default function Watch() {\n  const [remoteStream, setRemoteStream] = useState(null);\n\n  const socket = io(\"http://localhost:5000\");\n  const peerRef = useRef();\n\n  const initPeer = () => {\n    const peerInstance = new Peer();\n\n    peerInstance.on(\"open\", (peerId) => {\n      socket.emit(\"watcher\", peerId);\n    });\n\n    peerInstance.on(\"call\", (call) => {\n      navigator.mediaDevices\n        .getUserMedia({ audio: true, video: true })\n        .then((stream) => {\n          setRemoteStream(stream);\n          call.answer(stream);\n\n          call.on(\"stream\", (remoteStream) => {\n            // Handle the remote stream as needed\n          });\n        })\n        .catch((error) => console.error(\"Error accessing media devices:\", error));\n    });\n\n    peerRef.current = peerInstance;\n  };\n\n  useEffect(() => {\n    initPeer();\n\n    return () => {\n      // Cleanup code (e.g., disconnect from the socket, close peer connections)\n      peerRef.current.destroy();\n    };\n  }, []);\n\n  return (\n    <div>\n      {/* Display the remote stream */}\n      {remoteStream && <video srcObject={remoteStream} autoPlay playsInline />}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMU,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC;EAC1C,MAAMQ,OAAO,GAAGV,MAAM,CAAC,CAAC;EAExB,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,YAAY,GAAG,IAAIX,IAAI,CAAC,CAAC;IAE/BW,YAAY,CAACC,EAAE,CAAC,MAAM,EAAGC,MAAM,IAAK;MAClCL,MAAM,CAACM,IAAI,CAAC,SAAS,EAAED,MAAM,CAAC;IAChC,CAAC,CAAC;IAEFF,YAAY,CAACC,EAAE,CAAC,MAAM,EAAGG,IAAI,IAAK;MAChCC,SAAS,CAACC,YAAY,CACnBC,YAAY,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CAC1CC,IAAI,CAAEC,MAAM,IAAK;QAChBf,eAAe,CAACe,MAAM,CAAC;QACvBP,IAAI,CAACQ,MAAM,CAACD,MAAM,CAAC;QAEnBP,IAAI,CAACH,EAAE,CAAC,QAAQ,EAAGN,YAAY,IAAK;UAClC;QAAA,CACD,CAAC;MACJ,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;IAC7E,CAAC,CAAC;IAEFhB,OAAO,CAACkB,OAAO,GAAGhB,YAAY;EAChC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC,CAAC;IAEV,OAAO,MAAM;MACX;MACAD,OAAO,CAACkB,OAAO,CAACC,OAAO,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA;IAAA0B,QAAA,EAEGvB,YAAY,iBAAIH,OAAA;MAAO2B,SAAS,EAAExB,YAAa;MAACyB,QAAQ;MAACC,WAAW;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAAC/B,EAAA,CA7CuBD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}