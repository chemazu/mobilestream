{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/mobilestreamapp/client/src/Watch.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Peer from \"peerjs\";\nimport \"vidstack/styles/defaults.css\";\nimport \"vidstack/styles/community-skin/video.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { MediaCommunitySkin, MediaOutlet, MediaPlayer, MediaPoster } from \"@vidstack/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Watch() {\n  _s();\n  const socket = io(\"http://localhost:5000\");\n  const myVideoRef = useRef();\n  const [remoteStream, setRemoteStream] = useState(null);\n  const {\n    id\n  } = useParams();\n  const roomid = id;\n  const peerRef = useRef();\n  useEffect(() => {\n    let peerInstance = peerRef.current;\n    if (!peerInstance) {\n      peerInstance = new Peer();\n      peerRef.current = peerInstance;\n    }\n    peerInstance.on(\"open\", user => {\n      socket.emit(\"watcher\", roomid, user);\n    });\n    const startClass = (peerId, stat) => {\n      console.log(stat);\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(newStream => {\n        var _peerInstance;\n        const call = (_peerInstance = peerInstance) === null || _peerInstance === void 0 ? void 0 : _peerInstance.call(peerId, newStream);\n        call === null || call === void 0 ? void 0 : call.on(\"stream\", function (remoteStream) {\n          console.log(remoteStream);\n          setRemoteStream(remoteStream);\n        });\n      }).catch(error => {\n        console.error(\"Error getting user media:\", error);\n      });\n    };\n    socket.on(\"join stream\", (roomSize, peerId, roomStatus) => {\n      startClass(peerId, \"join\");\n    });\n    socket.on(\"no stream\", () => {\n      console.log(\"no stream\");\n    });\n    socket.on(\"startScreenSharing\", (status, peerId) => {\n      startClass(peerId, \"share\");\n    });\n    socket.on(\"broadcaster\", peerId => {\n      startClass(peerId, \"broadcaster\");\n      console.log(\"broadcaster\");\n    });\n    socket.on(\"broadcaster-disconnected\", () => {\n      // Handle broadcaster disconnection\n    });\n    return () => {\n      peerInstance.destroy();\n      socket.off(\"join stream\");\n      socket.off(\"broadcaster\");\n    };\n  }, [roomid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MediaPlayer, {\n      title: \"Tuturly Classroom\",\n      poster: \"https://media-files.vidstack.io/poster.png\",\n      controls: true,\n      src: remoteStream,\n      autoplay: true,\n      playsinline: true,\n      children: [/*#__PURE__*/_jsxDEV(MediaOutlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediaCommunitySkin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Watch, \"n2Lhd/qAR6RXq5MCZ9VfyizqE4Q=\", false, function () {\n  return [useParams];\n});\n_c = Watch;\nvar _c;\n$RefreshReg$(_c, \"Watch\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Peer","io","useParams","MediaCommunitySkin","MediaOutlet","MediaPlayer","MediaPoster","jsxDEV","_jsxDEV","Watch","_s","socket","myVideoRef","remoteStream","setRemoteStream","id","roomid","peerRef","peerInstance","current","on","user","emit","startClass","peerId","stat","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","newStream","_peerInstance","call","catch","error","roomSize","roomStatus","status","destroy","off","children","title","poster","controls","src","autoplay","playsinline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/Documents/mobilestreamapp/client/src/Watch.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport Peer from \"peerjs\";\n\nimport \"vidstack/styles/defaults.css\";\nimport \"vidstack/styles/community-skin/video.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  MediaCommunitySkin,\n  MediaOutlet,\n  MediaPlayer,\n  MediaPoster,\n} from \"@vidstack/react\";\n\nexport default function Watch() {\n  const socket = io(\"http://localhost:5000\");\n\n  const myVideoRef = useRef();\n  const [remoteStream, setRemoteStream] = useState(null);\n\n  const { id } = useParams();\n  const roomid = id;\n\n  const peerRef = useRef();\n\n  useEffect(() => {\n    let peerInstance = peerRef.current;\n\n    if (!peerInstance) {\n      peerInstance = new Peer();\n      peerRef.current = peerInstance;\n    }\n\n    peerInstance.on(\"open\", (user) => {\n      socket.emit(\"watcher\", roomid, user);\n    });\n\n    const startClass = (peerId, stat) => {\n      console.log(stat);\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: true })\n        .then((newStream) => {\n          const call = peerInstance?.call(peerId, newStream);\n          call?.on(\"stream\", function (remoteStream) {\n            console.log(remoteStream);\n            setRemoteStream(remoteStream);\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error getting user media:\", error);\n        });\n    };\n\n    socket.on(\"join stream\", (roomSize, peerId, roomStatus) => {\n      startClass(peerId, \"join\");\n    });\n\n    socket.on(\"no stream\", () => {\n      console.log(\"no stream\");\n    });\n\n    socket.on(\"startScreenSharing\", (status, peerId) => {\n      startClass(peerId, \"share\");\n    });\n\n    socket.on(\"broadcaster\", (peerId) => {\n      startClass(peerId, \"broadcaster\");\n      console.log(\"broadcaster\");\n    });\n\n    socket.on(\"broadcaster-disconnected\", () => {\n      // Handle broadcaster disconnection\n    });\n\n    return () => {\n      peerInstance.destroy();\n      socket.off(\"join stream\");\n      socket.off(\"broadcaster\");\n    };\n  }, [roomid]);\n\n  return (\n    <div>\n      <MediaPlayer\n        title=\"Tuturly Classroom\"\n        poster=\"https://media-files.vidstack.io/poster.png\"\n        controls\n        src={remoteStream}\n        autoplay={true}\n        playsinline={true}\n      >\n        <MediaOutlet />\n        <MediaCommunitySkin />\n      </MediaPlayer>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}